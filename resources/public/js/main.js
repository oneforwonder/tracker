var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
goog.require("goog.object");
goog.require("goog.array");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
void 0;
void 0;
void 0;
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
void 0;
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  if(p[goog.typeOf.call(null, x)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error("No protocol method " + proto + " defined for type " + goog.typeOf.call(null, obj) + ": " + obj)
};
cljs.core.aclone = function aclone(array_like) {
  return Array.prototype.slice.call(array_like)
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
void 0;
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__5081__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__5081 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5081__delegate.call(this, array, i, idxs)
    };
    G__5081.cljs$lang$maxFixedArity = 2;
    G__5081.cljs$lang$applyTo = function(arglist__5082) {
      var array = cljs.core.first(arglist__5082);
      var i = cljs.core.first(cljs.core.next(arglist__5082));
      var idxs = cljs.core.rest(cljs.core.next(arglist__5082));
      return G__5081__delegate(array, i, idxs)
    };
    G__5081.cljs$lang$arity$variadic = G__5081__delegate;
    return G__5081
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
void 0;
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
void 0;
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____5083 = this$;
      if(and__3822__auto____5083) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____5083
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      return function() {
        var or__3824__auto____5084 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5084) {
          return or__3824__auto____5084
        }else {
          var or__3824__auto____5085 = cljs.core._invoke["_"];
          if(or__3824__auto____5085) {
            return or__3824__auto____5085
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____5086 = this$;
      if(and__3822__auto____5086) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____5086
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      return function() {
        var or__3824__auto____5087 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5087) {
          return or__3824__auto____5087
        }else {
          var or__3824__auto____5088 = cljs.core._invoke["_"];
          if(or__3824__auto____5088) {
            return or__3824__auto____5088
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____5089 = this$;
      if(and__3822__auto____5089) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____5089
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      return function() {
        var or__3824__auto____5090 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5090) {
          return or__3824__auto____5090
        }else {
          var or__3824__auto____5091 = cljs.core._invoke["_"];
          if(or__3824__auto____5091) {
            return or__3824__auto____5091
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____5092 = this$;
      if(and__3822__auto____5092) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____5092
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      return function() {
        var or__3824__auto____5093 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5093) {
          return or__3824__auto____5093
        }else {
          var or__3824__auto____5094 = cljs.core._invoke["_"];
          if(or__3824__auto____5094) {
            return or__3824__auto____5094
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____5095 = this$;
      if(and__3822__auto____5095) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____5095
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      return function() {
        var or__3824__auto____5096 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5096) {
          return or__3824__auto____5096
        }else {
          var or__3824__auto____5097 = cljs.core._invoke["_"];
          if(or__3824__auto____5097) {
            return or__3824__auto____5097
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____5098 = this$;
      if(and__3822__auto____5098) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____5098
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      return function() {
        var or__3824__auto____5099 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5099) {
          return or__3824__auto____5099
        }else {
          var or__3824__auto____5100 = cljs.core._invoke["_"];
          if(or__3824__auto____5100) {
            return or__3824__auto____5100
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____5101 = this$;
      if(and__3822__auto____5101) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____5101
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      return function() {
        var or__3824__auto____5102 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5102) {
          return or__3824__auto____5102
        }else {
          var or__3824__auto____5103 = cljs.core._invoke["_"];
          if(or__3824__auto____5103) {
            return or__3824__auto____5103
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____5104 = this$;
      if(and__3822__auto____5104) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____5104
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      return function() {
        var or__3824__auto____5105 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5105) {
          return or__3824__auto____5105
        }else {
          var or__3824__auto____5106 = cljs.core._invoke["_"];
          if(or__3824__auto____5106) {
            return or__3824__auto____5106
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____5107 = this$;
      if(and__3822__auto____5107) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____5107
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      return function() {
        var or__3824__auto____5108 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5108) {
          return or__3824__auto____5108
        }else {
          var or__3824__auto____5109 = cljs.core._invoke["_"];
          if(or__3824__auto____5109) {
            return or__3824__auto____5109
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____5110 = this$;
      if(and__3822__auto____5110) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____5110
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      return function() {
        var or__3824__auto____5111 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5111) {
          return or__3824__auto____5111
        }else {
          var or__3824__auto____5112 = cljs.core._invoke["_"];
          if(or__3824__auto____5112) {
            return or__3824__auto____5112
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____5113 = this$;
      if(and__3822__auto____5113) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____5113
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      return function() {
        var or__3824__auto____5114 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5114) {
          return or__3824__auto____5114
        }else {
          var or__3824__auto____5115 = cljs.core._invoke["_"];
          if(or__3824__auto____5115) {
            return or__3824__auto____5115
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____5116 = this$;
      if(and__3822__auto____5116) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____5116
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      return function() {
        var or__3824__auto____5117 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5117) {
          return or__3824__auto____5117
        }else {
          var or__3824__auto____5118 = cljs.core._invoke["_"];
          if(or__3824__auto____5118) {
            return or__3824__auto____5118
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____5119 = this$;
      if(and__3822__auto____5119) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____5119
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      return function() {
        var or__3824__auto____5120 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5120) {
          return or__3824__auto____5120
        }else {
          var or__3824__auto____5121 = cljs.core._invoke["_"];
          if(or__3824__auto____5121) {
            return or__3824__auto____5121
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____5122 = this$;
      if(and__3822__auto____5122) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____5122
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      return function() {
        var or__3824__auto____5123 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5123) {
          return or__3824__auto____5123
        }else {
          var or__3824__auto____5124 = cljs.core._invoke["_"];
          if(or__3824__auto____5124) {
            return or__3824__auto____5124
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____5125 = this$;
      if(and__3822__auto____5125) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____5125
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      return function() {
        var or__3824__auto____5126 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5126) {
          return or__3824__auto____5126
        }else {
          var or__3824__auto____5127 = cljs.core._invoke["_"];
          if(or__3824__auto____5127) {
            return or__3824__auto____5127
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____5128 = this$;
      if(and__3822__auto____5128) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____5128
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      return function() {
        var or__3824__auto____5129 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5129) {
          return or__3824__auto____5129
        }else {
          var or__3824__auto____5130 = cljs.core._invoke["_"];
          if(or__3824__auto____5130) {
            return or__3824__auto____5130
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____5131 = this$;
      if(and__3822__auto____5131) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____5131
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      return function() {
        var or__3824__auto____5132 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5132) {
          return or__3824__auto____5132
        }else {
          var or__3824__auto____5133 = cljs.core._invoke["_"];
          if(or__3824__auto____5133) {
            return or__3824__auto____5133
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____5134 = this$;
      if(and__3822__auto____5134) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____5134
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      return function() {
        var or__3824__auto____5135 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5135) {
          return or__3824__auto____5135
        }else {
          var or__3824__auto____5136 = cljs.core._invoke["_"];
          if(or__3824__auto____5136) {
            return or__3824__auto____5136
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____5137 = this$;
      if(and__3822__auto____5137) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____5137
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      return function() {
        var or__3824__auto____5138 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5138) {
          return or__3824__auto____5138
        }else {
          var or__3824__auto____5139 = cljs.core._invoke["_"];
          if(or__3824__auto____5139) {
            return or__3824__auto____5139
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____5140 = this$;
      if(and__3822__auto____5140) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____5140
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      return function() {
        var or__3824__auto____5141 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5141) {
          return or__3824__auto____5141
        }else {
          var or__3824__auto____5142 = cljs.core._invoke["_"];
          if(or__3824__auto____5142) {
            return or__3824__auto____5142
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____5143 = this$;
      if(and__3822__auto____5143) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____5143
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      return function() {
        var or__3824__auto____5144 = cljs.core._invoke[goog.typeOf.call(null, this$)];
        if(or__3824__auto____5144) {
          return or__3824__auto____5144
        }else {
          var or__3824__auto____5145 = cljs.core._invoke["_"];
          if(or__3824__auto____5145) {
            return or__3824__auto____5145
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
void 0;
void 0;
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____5146 = coll;
    if(and__3822__auto____5146) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____5146
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5147 = cljs.core._count[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5147) {
        return or__3824__auto____5147
      }else {
        var or__3824__auto____5148 = cljs.core._count["_"];
        if(or__3824__auto____5148) {
          return or__3824__auto____5148
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____5149 = coll;
    if(and__3822__auto____5149) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____5149
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5150 = cljs.core._empty[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5150) {
        return or__3824__auto____5150
      }else {
        var or__3824__auto____5151 = cljs.core._empty["_"];
        if(or__3824__auto____5151) {
          return or__3824__auto____5151
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____5152 = coll;
    if(and__3822__auto____5152) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____5152
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    return function() {
      var or__3824__auto____5153 = cljs.core._conj[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5153) {
        return or__3824__auto____5153
      }else {
        var or__3824__auto____5154 = cljs.core._conj["_"];
        if(or__3824__auto____5154) {
          return or__3824__auto____5154
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
void 0;
void 0;
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____5155 = coll;
      if(and__3822__auto____5155) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____5155
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      return function() {
        var or__3824__auto____5156 = cljs.core._nth[goog.typeOf.call(null, coll)];
        if(or__3824__auto____5156) {
          return or__3824__auto____5156
        }else {
          var or__3824__auto____5157 = cljs.core._nth["_"];
          if(or__3824__auto____5157) {
            return or__3824__auto____5157
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____5158 = coll;
      if(and__3822__auto____5158) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____5158
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      return function() {
        var or__3824__auto____5159 = cljs.core._nth[goog.typeOf.call(null, coll)];
        if(or__3824__auto____5159) {
          return or__3824__auto____5159
        }else {
          var or__3824__auto____5160 = cljs.core._nth["_"];
          if(or__3824__auto____5160) {
            return or__3824__auto____5160
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
void 0;
void 0;
cljs.core.ASeq = {};
void 0;
void 0;
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____5161 = coll;
    if(and__3822__auto____5161) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____5161
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5162 = cljs.core._first[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5162) {
        return or__3824__auto____5162
      }else {
        var or__3824__auto____5163 = cljs.core._first["_"];
        if(or__3824__auto____5163) {
          return or__3824__auto____5163
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____5164 = coll;
    if(and__3822__auto____5164) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____5164
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5165 = cljs.core._rest[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5165) {
        return or__3824__auto____5165
      }else {
        var or__3824__auto____5166 = cljs.core._rest["_"];
        if(or__3824__auto____5166) {
          return or__3824__auto____5166
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____5167 = o;
      if(and__3822__auto____5167) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____5167
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      return function() {
        var or__3824__auto____5168 = cljs.core._lookup[goog.typeOf.call(null, o)];
        if(or__3824__auto____5168) {
          return or__3824__auto____5168
        }else {
          var or__3824__auto____5169 = cljs.core._lookup["_"];
          if(or__3824__auto____5169) {
            return or__3824__auto____5169
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____5170 = o;
      if(and__3822__auto____5170) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____5170
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      return function() {
        var or__3824__auto____5171 = cljs.core._lookup[goog.typeOf.call(null, o)];
        if(or__3824__auto____5171) {
          return or__3824__auto____5171
        }else {
          var or__3824__auto____5172 = cljs.core._lookup["_"];
          if(or__3824__auto____5172) {
            return or__3824__auto____5172
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
void 0;
void 0;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____5173 = coll;
    if(and__3822__auto____5173) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____5173
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    return function() {
      var or__3824__auto____5174 = cljs.core._contains_key_QMARK_[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5174) {
        return or__3824__auto____5174
      }else {
        var or__3824__auto____5175 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____5175) {
          return or__3824__auto____5175
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____5176 = coll;
    if(and__3822__auto____5176) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____5176
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    return function() {
      var or__3824__auto____5177 = cljs.core._assoc[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5177) {
        return or__3824__auto____5177
      }else {
        var or__3824__auto____5178 = cljs.core._assoc["_"];
        if(or__3824__auto____5178) {
          return or__3824__auto____5178
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
void 0;
void 0;
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____5179 = coll;
    if(and__3822__auto____5179) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____5179
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    return function() {
      var or__3824__auto____5180 = cljs.core._dissoc[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5180) {
        return or__3824__auto____5180
      }else {
        var or__3824__auto____5181 = cljs.core._dissoc["_"];
        if(or__3824__auto____5181) {
          return or__3824__auto____5181
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
void 0;
void 0;
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____5182 = coll;
    if(and__3822__auto____5182) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____5182
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5183 = cljs.core._key[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5183) {
        return or__3824__auto____5183
      }else {
        var or__3824__auto____5184 = cljs.core._key["_"];
        if(or__3824__auto____5184) {
          return or__3824__auto____5184
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____5185 = coll;
    if(and__3822__auto____5185) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____5185
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5186 = cljs.core._val[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5186) {
        return or__3824__auto____5186
      }else {
        var or__3824__auto____5187 = cljs.core._val["_"];
        if(or__3824__auto____5187) {
          return or__3824__auto____5187
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____5188 = coll;
    if(and__3822__auto____5188) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____5188
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    return function() {
      var or__3824__auto____5189 = cljs.core._disjoin[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5189) {
        return or__3824__auto____5189
      }else {
        var or__3824__auto____5190 = cljs.core._disjoin["_"];
        if(or__3824__auto____5190) {
          return or__3824__auto____5190
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
void 0;
void 0;
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____5191 = coll;
    if(and__3822__auto____5191) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____5191
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5192 = cljs.core._peek[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5192) {
        return or__3824__auto____5192
      }else {
        var or__3824__auto____5193 = cljs.core._peek["_"];
        if(or__3824__auto____5193) {
          return or__3824__auto____5193
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____5194 = coll;
    if(and__3822__auto____5194) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____5194
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5195 = cljs.core._pop[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5195) {
        return or__3824__auto____5195
      }else {
        var or__3824__auto____5196 = cljs.core._pop["_"];
        if(or__3824__auto____5196) {
          return or__3824__auto____5196
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____5197 = coll;
    if(and__3822__auto____5197) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____5197
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    return function() {
      var or__3824__auto____5198 = cljs.core._assoc_n[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5198) {
        return or__3824__auto____5198
      }else {
        var or__3824__auto____5199 = cljs.core._assoc_n["_"];
        if(or__3824__auto____5199) {
          return or__3824__auto____5199
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
void 0;
void 0;
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____5200 = o;
    if(and__3822__auto____5200) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____5200
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____5201 = cljs.core._deref[goog.typeOf.call(null, o)];
      if(or__3824__auto____5201) {
        return or__3824__auto____5201
      }else {
        var or__3824__auto____5202 = cljs.core._deref["_"];
        if(or__3824__auto____5202) {
          return or__3824__auto____5202
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____5203 = o;
    if(and__3822__auto____5203) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____5203
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    return function() {
      var or__3824__auto____5204 = cljs.core._deref_with_timeout[goog.typeOf.call(null, o)];
      if(or__3824__auto____5204) {
        return or__3824__auto____5204
      }else {
        var or__3824__auto____5205 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____5205) {
          return or__3824__auto____5205
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
void 0;
void 0;
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____5206 = o;
    if(and__3822__auto____5206) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____5206
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____5207 = cljs.core._meta[goog.typeOf.call(null, o)];
      if(or__3824__auto____5207) {
        return or__3824__auto____5207
      }else {
        var or__3824__auto____5208 = cljs.core._meta["_"];
        if(or__3824__auto____5208) {
          return or__3824__auto____5208
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____5209 = o;
    if(and__3822__auto____5209) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____5209
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    return function() {
      var or__3824__auto____5210 = cljs.core._with_meta[goog.typeOf.call(null, o)];
      if(or__3824__auto____5210) {
        return or__3824__auto____5210
      }else {
        var or__3824__auto____5211 = cljs.core._with_meta["_"];
        if(or__3824__auto____5211) {
          return or__3824__auto____5211
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
void 0;
void 0;
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____5212 = coll;
      if(and__3822__auto____5212) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____5212
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      return function() {
        var or__3824__auto____5213 = cljs.core._reduce[goog.typeOf.call(null, coll)];
        if(or__3824__auto____5213) {
          return or__3824__auto____5213
        }else {
          var or__3824__auto____5214 = cljs.core._reduce["_"];
          if(or__3824__auto____5214) {
            return or__3824__auto____5214
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____5215 = coll;
      if(and__3822__auto____5215) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____5215
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      return function() {
        var or__3824__auto____5216 = cljs.core._reduce[goog.typeOf.call(null, coll)];
        if(or__3824__auto____5216) {
          return or__3824__auto____5216
        }else {
          var or__3824__auto____5217 = cljs.core._reduce["_"];
          if(or__3824__auto____5217) {
            return or__3824__auto____5217
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
void 0;
void 0;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____5218 = coll;
    if(and__3822__auto____5218) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____5218
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    return function() {
      var or__3824__auto____5219 = cljs.core._kv_reduce[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5219) {
        return or__3824__auto____5219
      }else {
        var or__3824__auto____5220 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____5220) {
          return or__3824__auto____5220
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
void 0;
void 0;
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____5221 = o;
    if(and__3822__auto____5221) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____5221
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    return function() {
      var or__3824__auto____5222 = cljs.core._equiv[goog.typeOf.call(null, o)];
      if(or__3824__auto____5222) {
        return or__3824__auto____5222
      }else {
        var or__3824__auto____5223 = cljs.core._equiv["_"];
        if(or__3824__auto____5223) {
          return or__3824__auto____5223
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
void 0;
void 0;
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____5224 = o;
    if(and__3822__auto____5224) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____5224
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____5225 = cljs.core._hash[goog.typeOf.call(null, o)];
      if(or__3824__auto____5225) {
        return or__3824__auto____5225
      }else {
        var or__3824__auto____5226 = cljs.core._hash["_"];
        if(or__3824__auto____5226) {
          return or__3824__auto____5226
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____5227 = o;
    if(and__3822__auto____5227) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____5227
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    return function() {
      var or__3824__auto____5228 = cljs.core._seq[goog.typeOf.call(null, o)];
      if(or__3824__auto____5228) {
        return or__3824__auto____5228
      }else {
        var or__3824__auto____5229 = cljs.core._seq["_"];
        if(or__3824__auto____5229) {
          return or__3824__auto____5229
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISequential = {};
void 0;
void 0;
cljs.core.IList = {};
void 0;
void 0;
cljs.core.IRecord = {};
void 0;
void 0;
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____5230 = coll;
    if(and__3822__auto____5230) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____5230
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5231 = cljs.core._rseq[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5231) {
        return or__3824__auto____5231
      }else {
        var or__3824__auto____5232 = cljs.core._rseq["_"];
        if(or__3824__auto____5232) {
          return or__3824__auto____5232
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____5233 = coll;
    if(and__3822__auto____5233) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____5233
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    return function() {
      var or__3824__auto____5234 = cljs.core._sorted_seq[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5234) {
        return or__3824__auto____5234
      }else {
        var or__3824__auto____5235 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____5235) {
          return or__3824__auto____5235
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____5236 = coll;
    if(and__3822__auto____5236) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____5236
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    return function() {
      var or__3824__auto____5237 = cljs.core._sorted_seq_from[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5237) {
        return or__3824__auto____5237
      }else {
        var or__3824__auto____5238 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____5238) {
          return or__3824__auto____5238
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____5239 = coll;
    if(and__3822__auto____5239) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____5239
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    return function() {
      var or__3824__auto____5240 = cljs.core._entry_key[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5240) {
        return or__3824__auto____5240
      }else {
        var or__3824__auto____5241 = cljs.core._entry_key["_"];
        if(or__3824__auto____5241) {
          return or__3824__auto____5241
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____5242 = coll;
    if(and__3822__auto____5242) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____5242
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5243 = cljs.core._comparator[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5243) {
        return or__3824__auto____5243
      }else {
        var or__3824__auto____5244 = cljs.core._comparator["_"];
        if(or__3824__auto____5244) {
          return or__3824__auto____5244
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____5245 = o;
    if(and__3822__auto____5245) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____5245
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    return function() {
      var or__3824__auto____5246 = cljs.core._pr_seq[goog.typeOf.call(null, o)];
      if(or__3824__auto____5246) {
        return or__3824__auto____5246
      }else {
        var or__3824__auto____5247 = cljs.core._pr_seq["_"];
        if(or__3824__auto____5247) {
          return or__3824__auto____5247
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
void 0;
void 0;
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____5248 = d;
    if(and__3822__auto____5248) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____5248
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    return function() {
      var or__3824__auto____5249 = cljs.core._realized_QMARK_[goog.typeOf.call(null, d)];
      if(or__3824__auto____5249) {
        return or__3824__auto____5249
      }else {
        var or__3824__auto____5250 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____5250) {
          return or__3824__auto____5250
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
void 0;
void 0;
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____5251 = this$;
    if(and__3822__auto____5251) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____5251
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    return function() {
      var or__3824__auto____5252 = cljs.core._notify_watches[goog.typeOf.call(null, this$)];
      if(or__3824__auto____5252) {
        return or__3824__auto____5252
      }else {
        var or__3824__auto____5253 = cljs.core._notify_watches["_"];
        if(or__3824__auto____5253) {
          return or__3824__auto____5253
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____5254 = this$;
    if(and__3822__auto____5254) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____5254
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    return function() {
      var or__3824__auto____5255 = cljs.core._add_watch[goog.typeOf.call(null, this$)];
      if(or__3824__auto____5255) {
        return or__3824__auto____5255
      }else {
        var or__3824__auto____5256 = cljs.core._add_watch["_"];
        if(or__3824__auto____5256) {
          return or__3824__auto____5256
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____5257 = this$;
    if(and__3822__auto____5257) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____5257
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    return function() {
      var or__3824__auto____5258 = cljs.core._remove_watch[goog.typeOf.call(null, this$)];
      if(or__3824__auto____5258) {
        return or__3824__auto____5258
      }else {
        var or__3824__auto____5259 = cljs.core._remove_watch["_"];
        if(or__3824__auto____5259) {
          return or__3824__auto____5259
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
void 0;
void 0;
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____5260 = coll;
    if(and__3822__auto____5260) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____5260
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    return function() {
      var or__3824__auto____5261 = cljs.core._as_transient[goog.typeOf.call(null, coll)];
      if(or__3824__auto____5261) {
        return or__3824__auto____5261
      }else {
        var or__3824__auto____5262 = cljs.core._as_transient["_"];
        if(or__3824__auto____5262) {
          return or__3824__auto____5262
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____5263 = tcoll;
    if(and__3822__auto____5263) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____5263
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    return function() {
      var or__3824__auto____5264 = cljs.core._conj_BANG_[goog.typeOf.call(null, tcoll)];
      if(or__3824__auto____5264) {
        return or__3824__auto____5264
      }else {
        var or__3824__auto____5265 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____5265) {
          return or__3824__auto____5265
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____5266 = tcoll;
    if(and__3822__auto____5266) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____5266
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3824__auto____5267 = cljs.core._persistent_BANG_[goog.typeOf.call(null, tcoll)];
      if(or__3824__auto____5267) {
        return or__3824__auto____5267
      }else {
        var or__3824__auto____5268 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____5268) {
          return or__3824__auto____5268
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____5269 = tcoll;
    if(and__3822__auto____5269) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____5269
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    return function() {
      var or__3824__auto____5270 = cljs.core._assoc_BANG_[goog.typeOf.call(null, tcoll)];
      if(or__3824__auto____5270) {
        return or__3824__auto____5270
      }else {
        var or__3824__auto____5271 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____5271) {
          return or__3824__auto____5271
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
void 0;
void 0;
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____5272 = tcoll;
    if(and__3822__auto____5272) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____5272
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    return function() {
      var or__3824__auto____5273 = cljs.core._dissoc_BANG_[goog.typeOf.call(null, tcoll)];
      if(or__3824__auto____5273) {
        return or__3824__auto____5273
      }else {
        var or__3824__auto____5274 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____5274) {
          return or__3824__auto____5274
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
void 0;
void 0;
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____5275 = tcoll;
    if(and__3822__auto____5275) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____5275
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    return function() {
      var or__3824__auto____5276 = cljs.core._assoc_n_BANG_[goog.typeOf.call(null, tcoll)];
      if(or__3824__auto____5276) {
        return or__3824__auto____5276
      }else {
        var or__3824__auto____5277 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____5277) {
          return or__3824__auto____5277
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____5278 = tcoll;
    if(and__3822__auto____5278) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____5278
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3824__auto____5279 = cljs.core._pop_BANG_[goog.typeOf.call(null, tcoll)];
      if(or__3824__auto____5279) {
        return or__3824__auto____5279
      }else {
        var or__3824__auto____5280 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____5280) {
          return or__3824__auto____5280
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____5281 = tcoll;
    if(and__3822__auto____5281) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____5281
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    return function() {
      var or__3824__auto____5282 = cljs.core._disjoin_BANG_[goog.typeOf.call(null, tcoll)];
      if(or__3824__auto____5282) {
        return or__3824__auto____5282
      }else {
        var or__3824__auto____5283 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____5283) {
          return or__3824__auto____5283
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
void 0;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
void 0;
void 0;
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____5284 = x === y;
    if(or__3824__auto____5284) {
      return or__3824__auto____5284
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__5285__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.truth_(cljs.core.next.call(null, more))) {
            var G__5286 = y;
            var G__5287 = cljs.core.first.call(null, more);
            var G__5288 = cljs.core.next.call(null, more);
            x = G__5286;
            y = G__5287;
            more = G__5288;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__5285 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5285__delegate.call(this, x, y, more)
    };
    G__5285.cljs$lang$maxFixedArity = 2;
    G__5285.cljs$lang$applyTo = function(arglist__5289) {
      var x = cljs.core.first(arglist__5289);
      var y = cljs.core.first(cljs.core.next(arglist__5289));
      var more = cljs.core.rest(cljs.core.next(arglist__5289));
      return G__5285__delegate(x, y, more)
    };
    G__5285.cljs$lang$arity$variadic = G__5285__delegate;
    return G__5285
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(function() {
    var or__3824__auto____5290 = x == null;
    if(or__3824__auto____5290) {
      return or__3824__auto____5290
    }else {
      return void 0 === x
    }
  }()) {
    return null
  }else {
    return x.constructor
  }
};
void 0;
void 0;
void 0;
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__5291 = null;
  var G__5291__2 = function(o, k) {
    return null
  };
  var G__5291__3 = function(o, k, not_found) {
    return not_found
  };
  G__5291 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5291__2.call(this, o, k);
      case 3:
        return G__5291__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5291
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__5292 = null;
  var G__5292__2 = function(_, f) {
    return f.call(null)
  };
  var G__5292__3 = function(_, f, start) {
    return start
  };
  G__5292 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__5292__2.call(this, _, f);
      case 3:
        return G__5292__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5292
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__5293 = null;
  var G__5293__2 = function(_, n) {
    return null
  };
  var G__5293__3 = function(_, n, not_found) {
    return not_found
  };
  G__5293 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5293__2.call(this, _, n);
      case 3:
        return G__5293__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5293
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  return o.toString() === other.toString()
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  return o === true ? 1 : 0
};
cljs.core.IHash["function"] = true;
cljs.core._hash["function"] = function(o) {
  return goog.getUid.call(null, o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
void 0;
void 0;
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    if(cljs.core._count.call(null, cicoll) === 0) {
      return f.call(null)
    }else {
      var val__5294 = cljs.core._nth.call(null, cicoll, 0);
      var n__5295 = 1;
      while(true) {
        if(n__5295 < cljs.core._count.call(null, cicoll)) {
          var nval__5296 = f.call(null, val__5294, cljs.core._nth.call(null, cicoll, n__5295));
          if(cljs.core.reduced_QMARK_.call(null, nval__5296)) {
            return cljs.core.deref.call(null, nval__5296)
          }else {
            var G__5303 = nval__5296;
            var G__5304 = n__5295 + 1;
            val__5294 = G__5303;
            n__5295 = G__5304;
            continue
          }
        }else {
          return val__5294
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var val__5297 = val;
    var n__5298 = 0;
    while(true) {
      if(n__5298 < cljs.core._count.call(null, cicoll)) {
        var nval__5299 = f.call(null, val__5297, cljs.core._nth.call(null, cicoll, n__5298));
        if(cljs.core.reduced_QMARK_.call(null, nval__5299)) {
          return cljs.core.deref.call(null, nval__5299)
        }else {
          var G__5305 = nval__5299;
          var G__5306 = n__5298 + 1;
          val__5297 = G__5305;
          n__5298 = G__5306;
          continue
        }
      }else {
        return val__5297
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var val__5300 = val;
    var n__5301 = idx;
    while(true) {
      if(n__5301 < cljs.core._count.call(null, cicoll)) {
        var nval__5302 = f.call(null, val__5300, cljs.core._nth.call(null, cicoll, n__5301));
        if(cljs.core.reduced_QMARK_.call(null, nval__5302)) {
          return cljs.core.deref.call(null, nval__5302)
        }else {
          var G__5307 = nval__5302;
          var G__5308 = n__5301 + 1;
          val__5300 = G__5307;
          n__5301 = G__5308;
          continue
        }
      }else {
        return val__5300
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
void 0;
void 0;
void 0;
void 0;
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15990906
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__5309 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISequential$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__5310 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$ASeq$ = true;
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__5311 = this;
  var this$__5312 = this;
  return cljs.core.pr_str.call(null, this$__5312)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__5313 = this;
  if(cljs.core.counted_QMARK_.call(null, this__5313.a)) {
    return cljs.core.ci_reduce.call(null, this__5313.a, f, this__5313.a[this__5313.i], this__5313.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__5313.a[this__5313.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__5314 = this;
  if(cljs.core.counted_QMARK_.call(null, this__5314.a)) {
    return cljs.core.ci_reduce.call(null, this__5314.a, f, start, this__5314.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__5315 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__5316 = this;
  return this__5316.a.length - this__5316.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__5317 = this;
  return this__5317.a[this__5317.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__5318 = this;
  if(this__5318.i + 1 < this__5318.a.length) {
    return new cljs.core.IndexedSeq(this__5318.a, this__5318.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__5319 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__5320 = this;
  var i__5321 = n + this__5320.i;
  if(i__5321 < this__5320.a.length) {
    return this__5320.a[i__5321]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__5322 = this;
  var i__5323 = n + this__5322.i;
  if(i__5323 < this__5322.a.length) {
    return this__5322.a[i__5323]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__5324 = null;
  var G__5324__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__5324__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__5324 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__5324__2.call(this, array, f);
      case 3:
        return G__5324__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5324
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__5325 = null;
  var G__5325__2 = function(array, k) {
    return array[k]
  };
  var G__5325__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__5325 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5325__2.call(this, array, k);
      case 3:
        return G__5325__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5325
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__5326 = null;
  var G__5326__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__5326__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__5326 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5326__2.call(this, array, n);
      case 3:
        return G__5326__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5326
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.seq = function seq(coll) {
  if(coll != null) {
    if(function() {
      var G__5327__5328 = coll;
      if(G__5327__5328 != null) {
        if(function() {
          var or__3824__auto____5329 = G__5327__5328.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____5329) {
            return or__3824__auto____5329
          }else {
            return G__5327__5328.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__5327__5328.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__5327__5328)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__5327__5328)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }else {
    return null
  }
};
cljs.core.first = function first(coll) {
  if(coll != null) {
    if(function() {
      var G__5330__5331 = coll;
      if(G__5330__5331 != null) {
        if(function() {
          var or__3824__auto____5332 = G__5330__5331.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____5332) {
            return or__3824__auto____5332
          }else {
            return G__5330__5331.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__5330__5331.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5330__5331)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5330__5331)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__5333 = cljs.core.seq.call(null, coll);
      if(s__5333 != null) {
        return cljs.core._first.call(null, s__5333)
      }else {
        return null
      }
    }
  }else {
    return null
  }
};
cljs.core.rest = function rest(coll) {
  if(coll != null) {
    if(function() {
      var G__5334__5335 = coll;
      if(G__5334__5335 != null) {
        if(function() {
          var or__3824__auto____5336 = G__5334__5335.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____5336) {
            return or__3824__auto____5336
          }else {
            return G__5334__5335.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__5334__5335.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5334__5335)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5334__5335)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__5337 = cljs.core.seq.call(null, coll);
      if(s__5337 != null) {
        return cljs.core._rest.call(null, s__5337)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll != null) {
    if(function() {
      var G__5338__5339 = coll;
      if(G__5338__5339 != null) {
        if(function() {
          var or__3824__auto____5340 = G__5338__5339.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____5340) {
            return or__3824__auto____5340
          }else {
            return G__5338__5339.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__5338__5339.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5338__5339)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5338__5339)
      }
    }()) {
      var coll__5341 = cljs.core._rest.call(null, coll);
      if(coll__5341 != null) {
        if(function() {
          var G__5342__5343 = coll__5341;
          if(G__5342__5343 != null) {
            if(function() {
              var or__3824__auto____5344 = G__5342__5343.cljs$lang$protocol_mask$partition0$ & 32;
              if(or__3824__auto____5344) {
                return or__3824__auto____5344
              }else {
                return G__5342__5343.cljs$core$ASeq$
              }
            }()) {
              return true
            }else {
              if(!G__5342__5343.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__5342__5343)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__5342__5343)
          }
        }()) {
          return coll__5341
        }else {
          return cljs.core._seq.call(null, coll__5341)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }else {
    return null
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    if(cljs.core.truth_(cljs.core.next.call(null, s))) {
      var G__5345 = cljs.core.next.call(null, s);
      s = G__5345;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__5346__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__5347 = conj.call(null, coll, x);
          var G__5348 = cljs.core.first.call(null, xs);
          var G__5349 = cljs.core.next.call(null, xs);
          coll = G__5347;
          x = G__5348;
          xs = G__5349;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__5346 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5346__delegate.call(this, coll, x, xs)
    };
    G__5346.cljs$lang$maxFixedArity = 2;
    G__5346.cljs$lang$applyTo = function(arglist__5350) {
      var coll = cljs.core.first(arglist__5350);
      var x = cljs.core.first(cljs.core.next(arglist__5350));
      var xs = cljs.core.rest(cljs.core.next(arglist__5350));
      return G__5346__delegate(coll, x, xs)
    };
    G__5346.cljs$lang$arity$variadic = G__5346__delegate;
    return G__5346
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
void 0;
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__5351 = cljs.core.seq.call(null, coll);
  var acc__5352 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__5351)) {
      return acc__5352 + cljs.core._count.call(null, s__5351)
    }else {
      var G__5353 = cljs.core.next.call(null, s__5351);
      var G__5354 = acc__5352 + 1;
      s__5351 = G__5353;
      acc__5352 = G__5354;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
void 0;
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll != null) {
      if(function() {
        var G__5355__5356 = coll;
        if(G__5355__5356 != null) {
          if(function() {
            var or__3824__auto____5357 = G__5355__5356.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____5357) {
              return or__3824__auto____5357
            }else {
              return G__5355__5356.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__5355__5356.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__5355__5356)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__5355__5356)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }else {
      return null
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(coll != null) {
      if(function() {
        var G__5358__5359 = coll;
        if(G__5358__5359 != null) {
          if(function() {
            var or__3824__auto____5360 = G__5358__5359.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____5360) {
              return or__3824__auto____5360
            }else {
              return G__5358__5359.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__5358__5359.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__5358__5359)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__5358__5359)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__5362__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__5361 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__5363 = ret__5361;
          var G__5364 = cljs.core.first.call(null, kvs);
          var G__5365 = cljs.core.second.call(null, kvs);
          var G__5366 = cljs.core.nnext.call(null, kvs);
          coll = G__5363;
          k = G__5364;
          v = G__5365;
          kvs = G__5366;
          continue
        }else {
          return ret__5361
        }
        break
      }
    };
    var G__5362 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5362__delegate.call(this, coll, k, v, kvs)
    };
    G__5362.cljs$lang$maxFixedArity = 3;
    G__5362.cljs$lang$applyTo = function(arglist__5367) {
      var coll = cljs.core.first(arglist__5367);
      var k = cljs.core.first(cljs.core.next(arglist__5367));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5367)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5367)));
      return G__5362__delegate(coll, k, v, kvs)
    };
    G__5362.cljs$lang$arity$variadic = G__5362__delegate;
    return G__5362
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__5369__delegate = function(coll, k, ks) {
      while(true) {
        var ret__5368 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__5370 = ret__5368;
          var G__5371 = cljs.core.first.call(null, ks);
          var G__5372 = cljs.core.next.call(null, ks);
          coll = G__5370;
          k = G__5371;
          ks = G__5372;
          continue
        }else {
          return ret__5368
        }
        break
      }
    };
    var G__5369 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5369__delegate.call(this, coll, k, ks)
    };
    G__5369.cljs$lang$maxFixedArity = 2;
    G__5369.cljs$lang$applyTo = function(arglist__5373) {
      var coll = cljs.core.first(arglist__5373);
      var k = cljs.core.first(cljs.core.next(arglist__5373));
      var ks = cljs.core.rest(cljs.core.next(arglist__5373));
      return G__5369__delegate(coll, k, ks)
    };
    G__5369.cljs$lang$arity$variadic = G__5369__delegate;
    return G__5369
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__5374__5375 = o;
    if(G__5374__5375 != null) {
      if(function() {
        var or__3824__auto____5376 = G__5374__5375.cljs$lang$protocol_mask$partition0$ & 65536;
        if(or__3824__auto____5376) {
          return or__3824__auto____5376
        }else {
          return G__5374__5375.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__5374__5375.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__5374__5375)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__5374__5375)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__5378__delegate = function(coll, k, ks) {
      while(true) {
        var ret__5377 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__5379 = ret__5377;
          var G__5380 = cljs.core.first.call(null, ks);
          var G__5381 = cljs.core.next.call(null, ks);
          coll = G__5379;
          k = G__5380;
          ks = G__5381;
          continue
        }else {
          return ret__5377
        }
        break
      }
    };
    var G__5378 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5378__delegate.call(this, coll, k, ks)
    };
    G__5378.cljs$lang$maxFixedArity = 2;
    G__5378.cljs$lang$applyTo = function(arglist__5382) {
      var coll = cljs.core.first(arglist__5382);
      var k = cljs.core.first(cljs.core.next(arglist__5382));
      var ks = cljs.core.rest(cljs.core.next(arglist__5382));
      return G__5378__delegate(coll, k, ks)
    };
    G__5378.cljs$lang$arity$variadic = G__5378__delegate;
    return G__5378
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.hash = function hash(o) {
  return cljs.core._hash.call(null, o)
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__5383__5384 = x;
    if(G__5383__5384 != null) {
      if(function() {
        var or__3824__auto____5385 = G__5383__5384.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____5385) {
          return or__3824__auto____5385
        }else {
          return G__5383__5384.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__5383__5384.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__5383__5384)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__5383__5384)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__5386__5387 = x;
    if(G__5386__5387 != null) {
      if(function() {
        var or__3824__auto____5388 = G__5386__5387.cljs$lang$protocol_mask$partition0$ & 2048;
        if(or__3824__auto____5388) {
          return or__3824__auto____5388
        }else {
          return G__5386__5387.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__5386__5387.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__5386__5387)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__5386__5387)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__5389__5390 = x;
  if(G__5389__5390 != null) {
    if(function() {
      var or__3824__auto____5391 = G__5389__5390.cljs$lang$protocol_mask$partition0$ & 256;
      if(or__3824__auto____5391) {
        return or__3824__auto____5391
      }else {
        return G__5389__5390.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__5389__5390.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__5389__5390)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__5389__5390)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__5392__5393 = x;
  if(G__5392__5393 != null) {
    if(function() {
      var or__3824__auto____5394 = G__5392__5393.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____5394) {
        return or__3824__auto____5394
      }else {
        return G__5392__5393.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__5392__5393.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__5392__5393)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__5392__5393)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5395__5396 = x;
  if(G__5395__5396 != null) {
    if(function() {
      var or__3824__auto____5397 = G__5395__5396.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____5397) {
        return or__3824__auto____5397
      }else {
        return G__5395__5396.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__5395__5396.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__5395__5396)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__5395__5396)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5398__5399 = x;
  if(G__5398__5399 != null) {
    if(function() {
      var or__3824__auto____5400 = G__5398__5399.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____5400) {
        return or__3824__auto____5400
      }else {
        return G__5398__5399.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__5398__5399.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__5398__5399)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__5398__5399)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__5401__5402 = x;
  if(G__5401__5402 != null) {
    if(function() {
      var or__3824__auto____5403 = G__5401__5402.cljs$lang$protocol_mask$partition0$ & 262144;
      if(or__3824__auto____5403) {
        return or__3824__auto____5403
      }else {
        return G__5401__5402.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__5401__5402.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__5401__5402)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__5401__5402)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__5404__5405 = x;
    if(G__5404__5405 != null) {
      if(function() {
        var or__3824__auto____5406 = G__5404__5405.cljs$lang$protocol_mask$partition0$ & 512;
        if(or__3824__auto____5406) {
          return or__3824__auto____5406
        }else {
          return G__5404__5405.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__5404__5405.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__5404__5405)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__5404__5405)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__5407__5408 = x;
  if(G__5407__5408 != null) {
    if(function() {
      var or__3824__auto____5409 = G__5407__5408.cljs$lang$protocol_mask$partition0$ & 8192;
      if(or__3824__auto____5409) {
        return or__3824__auto____5409
      }else {
        return G__5407__5408.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__5407__5408.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__5407__5408)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__5407__5408)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__5410__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__5410 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__5410__delegate.call(this, keyvals)
    };
    G__5410.cljs$lang$maxFixedArity = 0;
    G__5410.cljs$lang$applyTo = function(arglist__5411) {
      var keyvals = cljs.core.seq(arglist__5411);
      return G__5410__delegate(keyvals)
    };
    G__5410.cljs$lang$arity$variadic = G__5410__delegate;
    return G__5410
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(falsecljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__5412 = [];
  goog.object.forEach.call(null, obj, function(val, key, obj) {
    return keys__5412.push(key)
  });
  return keys__5412
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__5413 = i;
  var j__5414 = j;
  var len__5415 = len;
  while(true) {
    if(len__5415 === 0) {
      return to
    }else {
      to[j__5414] = from[i__5413];
      var G__5416 = i__5413 + 1;
      var G__5417 = j__5414 + 1;
      var G__5418 = len__5415 - 1;
      i__5413 = G__5416;
      j__5414 = G__5417;
      len__5415 = G__5418;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__5419 = i + (len - 1);
  var j__5420 = j + (len - 1);
  var len__5421 = len;
  while(true) {
    if(len__5421 === 0) {
      return to
    }else {
      to[j__5420] = from[i__5419];
      var G__5422 = i__5419 - 1;
      var G__5423 = j__5420 - 1;
      var G__5424 = len__5421 - 1;
      i__5419 = G__5422;
      j__5420 = G__5423;
      len__5421 = G__5424;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o != null && (o instanceof t || o.constructor === t || t === Object)
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__5425__5426 = s;
    if(G__5425__5426 != null) {
      if(function() {
        var or__3824__auto____5427 = G__5425__5426.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____5427) {
          return or__3824__auto____5427
        }else {
          return G__5425__5426.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__5425__5426.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5425__5426)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5425__5426)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__5428__5429 = s;
  if(G__5428__5429 != null) {
    if(function() {
      var or__3824__auto____5430 = G__5428__5429.cljs$lang$protocol_mask$partition0$ & 4194304;
      if(or__3824__auto____5430) {
        return or__3824__auto____5430
      }else {
        return G__5428__5429.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__5428__5429.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5428__5429)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5428__5429)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____5431 = goog.isString.call(null, x);
  if(cljs.core.truth_(and__3822__auto____5431)) {
    return cljs.core.not.call(null, function() {
      var or__3824__auto____5432 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____5432) {
        return or__3824__auto____5432
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }())
  }else {
    return and__3822__auto____5431
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____5433 = goog.isString.call(null, x);
  if(cljs.core.truth_(and__3822__auto____5433)) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____5433
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____5434 = goog.isString.call(null, x);
  if(cljs.core.truth_(and__3822__auto____5434)) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____5434
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber.call(null, n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction.call(null, f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____5435 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____5435) {
    return or__3824__auto____5435
  }else {
    var G__5436__5437 = f;
    if(G__5436__5437 != null) {
      if(function() {
        var or__3824__auto____5438 = G__5436__5437.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____5438) {
          return or__3824__auto____5438
        }else {
          return G__5436__5437.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__5436__5437.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__5436__5437)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__5436__5437)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____5439 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____5439) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____5439
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____5440 = coll;
    if(cljs.core.truth_(and__3822__auto____5440)) {
      var and__3822__auto____5441 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____5441) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____5441
      }
    }else {
      return and__3822__auto____5440
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)])
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return cljs.core.not.call(null, cljs.core._EQ_.call(null, x, y))
  };
  var distinct_QMARK___3 = function() {
    var G__5446__delegate = function(x, y, more) {
      if(cljs.core.not.call(null, cljs.core._EQ_.call(null, x, y))) {
        var s__5442 = cljs.core.set([y, x]);
        var xs__5443 = more;
        while(true) {
          var x__5444 = cljs.core.first.call(null, xs__5443);
          var etc__5445 = cljs.core.next.call(null, xs__5443);
          if(cljs.core.truth_(xs__5443)) {
            if(cljs.core.contains_QMARK_.call(null, s__5442, x__5444)) {
              return false
            }else {
              var G__5447 = cljs.core.conj.call(null, s__5442, x__5444);
              var G__5448 = etc__5445;
              s__5442 = G__5447;
              xs__5443 = G__5448;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__5446 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5446__delegate.call(this, x, y, more)
    };
    G__5446.cljs$lang$maxFixedArity = 2;
    G__5446.cljs$lang$applyTo = function(arglist__5449) {
      var x = cljs.core.first(arglist__5449);
      var y = cljs.core.first(cljs.core.next(arglist__5449));
      var more = cljs.core.rest(cljs.core.next(arglist__5449));
      return G__5446__delegate(x, y, more)
    };
    G__5446.cljs$lang$arity$variadic = G__5446__delegate;
    return G__5446
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
    return goog.array.defaultCompare.call(null, x, y)
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if("\ufdd0'else") {
          throw new Error("compare on non-nil objects of different types");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__5450 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__5450)) {
        return r__5450
      }else {
        if(cljs.core.truth_(r__5450)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
void 0;
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
      var a__5451 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort.call(null, a__5451, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__5451)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____5452 = cljs.core.seq.call(null, coll);
    if(cljs.core.truth_(temp__3971__auto____5452)) {
      var s__5453 = temp__3971__auto____5452;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__5453), cljs.core.next.call(null, s__5453))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__5454 = val;
    var coll__5455 = cljs.core.seq.call(null, coll);
    while(true) {
      if(cljs.core.truth_(coll__5455)) {
        var nval__5456 = f.call(null, val__5454, cljs.core.first.call(null, coll__5455));
        if(cljs.core.reduced_QMARK_.call(null, nval__5456)) {
          return cljs.core.deref.call(null, nval__5456)
        }else {
          var G__5457 = nval__5456;
          var G__5458 = cljs.core.next.call(null, coll__5455);
          val__5454 = G__5457;
          coll__5455 = G__5458;
          continue
        }
      }else {
        return val__5454
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__5459__5460 = coll;
      if(G__5459__5460 != null) {
        if(function() {
          var or__3824__auto____5461 = G__5459__5460.cljs$lang$protocol_mask$partition0$ & 262144;
          if(or__3824__auto____5461) {
            return or__3824__auto____5461
          }else {
            return G__5459__5460.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__5459__5460.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__5459__5460)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__5459__5460)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__5462__5463 = coll;
      if(G__5462__5463 != null) {
        if(function() {
          var or__3824__auto____5464 = G__5462__5463.cljs$lang$protocol_mask$partition0$ & 262144;
          if(or__3824__auto____5464) {
            return or__3824__auto____5464
          }else {
            return G__5462__5463.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__5462__5463.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__5462__5463)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__5462__5463)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 16384
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$ = true;
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__5465 = this;
  return this__5465.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__5466__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__5466 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5466__delegate.call(this, x, y, more)
    };
    G__5466.cljs$lang$maxFixedArity = 2;
    G__5466.cljs$lang$applyTo = function(arglist__5467) {
      var x = cljs.core.first(arglist__5467);
      var y = cljs.core.first(cljs.core.next(arglist__5467));
      var more = cljs.core.rest(cljs.core.next(arglist__5467));
      return G__5466__delegate(x, y, more)
    };
    G__5466.cljs$lang$arity$variadic = G__5466__delegate;
    return G__5466
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__5468__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__5468 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5468__delegate.call(this, x, y, more)
    };
    G__5468.cljs$lang$maxFixedArity = 2;
    G__5468.cljs$lang$applyTo = function(arglist__5469) {
      var x = cljs.core.first(arglist__5469);
      var y = cljs.core.first(cljs.core.next(arglist__5469));
      var more = cljs.core.rest(cljs.core.next(arglist__5469));
      return G__5468__delegate(x, y, more)
    };
    G__5468.cljs$lang$arity$variadic = G__5468__delegate;
    return G__5468
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__5470__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__5470 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5470__delegate.call(this, x, y, more)
    };
    G__5470.cljs$lang$maxFixedArity = 2;
    G__5470.cljs$lang$applyTo = function(arglist__5471) {
      var x = cljs.core.first(arglist__5471);
      var y = cljs.core.first(cljs.core.next(arglist__5471));
      var more = cljs.core.rest(cljs.core.next(arglist__5471));
      return G__5470__delegate(x, y, more)
    };
    G__5470.cljs$lang$arity$variadic = G__5470__delegate;
    return G__5470
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__5472__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__5472 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5472__delegate.call(this, x, y, more)
    };
    G__5472.cljs$lang$maxFixedArity = 2;
    G__5472.cljs$lang$applyTo = function(arglist__5473) {
      var x = cljs.core.first(arglist__5473);
      var y = cljs.core.first(cljs.core.next(arglist__5473));
      var more = cljs.core.rest(cljs.core.next(arglist__5473));
      return G__5472__delegate(x, y, more)
    };
    G__5472.cljs$lang$arity$variadic = G__5472__delegate;
    return G__5472
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__5474__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.truth_(cljs.core.next.call(null, more))) {
            var G__5475 = y;
            var G__5476 = cljs.core.first.call(null, more);
            var G__5477 = cljs.core.next.call(null, more);
            x = G__5475;
            y = G__5476;
            more = G__5477;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__5474 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5474__delegate.call(this, x, y, more)
    };
    G__5474.cljs$lang$maxFixedArity = 2;
    G__5474.cljs$lang$applyTo = function(arglist__5478) {
      var x = cljs.core.first(arglist__5478);
      var y = cljs.core.first(cljs.core.next(arglist__5478));
      var more = cljs.core.rest(cljs.core.next(arglist__5478));
      return G__5474__delegate(x, y, more)
    };
    G__5474.cljs$lang$arity$variadic = G__5474__delegate;
    return G__5474
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__5479__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.truth_(cljs.core.next.call(null, more))) {
            var G__5480 = y;
            var G__5481 = cljs.core.first.call(null, more);
            var G__5482 = cljs.core.next.call(null, more);
            x = G__5480;
            y = G__5481;
            more = G__5482;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__5479 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5479__delegate.call(this, x, y, more)
    };
    G__5479.cljs$lang$maxFixedArity = 2;
    G__5479.cljs$lang$applyTo = function(arglist__5483) {
      var x = cljs.core.first(arglist__5483);
      var y = cljs.core.first(cljs.core.next(arglist__5483));
      var more = cljs.core.rest(cljs.core.next(arglist__5483));
      return G__5479__delegate(x, y, more)
    };
    G__5479.cljs$lang$arity$variadic = G__5479__delegate;
    return G__5479
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__5484__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.truth_(cljs.core.next.call(null, more))) {
            var G__5485 = y;
            var G__5486 = cljs.core.first.call(null, more);
            var G__5487 = cljs.core.next.call(null, more);
            x = G__5485;
            y = G__5486;
            more = G__5487;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__5484 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5484__delegate.call(this, x, y, more)
    };
    G__5484.cljs$lang$maxFixedArity = 2;
    G__5484.cljs$lang$applyTo = function(arglist__5488) {
      var x = cljs.core.first(arglist__5488);
      var y = cljs.core.first(cljs.core.next(arglist__5488));
      var more = cljs.core.rest(cljs.core.next(arglist__5488));
      return G__5484__delegate(x, y, more)
    };
    G__5484.cljs$lang$arity$variadic = G__5484__delegate;
    return G__5484
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__5489__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.truth_(cljs.core.next.call(null, more))) {
            var G__5490 = y;
            var G__5491 = cljs.core.first.call(null, more);
            var G__5492 = cljs.core.next.call(null, more);
            x = G__5490;
            y = G__5491;
            more = G__5492;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__5489 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5489__delegate.call(this, x, y, more)
    };
    G__5489.cljs$lang$maxFixedArity = 2;
    G__5489.cljs$lang$applyTo = function(arglist__5493) {
      var x = cljs.core.first(arglist__5493);
      var y = cljs.core.first(cljs.core.next(arglist__5493));
      var more = cljs.core.rest(cljs.core.next(arglist__5493));
      return G__5489__delegate(x, y, more)
    };
    G__5489.cljs$lang$arity$variadic = G__5489__delegate;
    return G__5489
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__5494__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__5494 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5494__delegate.call(this, x, y, more)
    };
    G__5494.cljs$lang$maxFixedArity = 2;
    G__5494.cljs$lang$applyTo = function(arglist__5495) {
      var x = cljs.core.first(arglist__5495);
      var y = cljs.core.first(cljs.core.next(arglist__5495));
      var more = cljs.core.rest(cljs.core.next(arglist__5495));
      return G__5494__delegate(x, y, more)
    };
    G__5494.cljs$lang$arity$variadic = G__5494__delegate;
    return G__5494
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__5496__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__5496 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5496__delegate.call(this, x, y, more)
    };
    G__5496.cljs$lang$maxFixedArity = 2;
    G__5496.cljs$lang$applyTo = function(arglist__5497) {
      var x = cljs.core.first(arglist__5497);
      var y = cljs.core.first(cljs.core.next(arglist__5497));
      var more = cljs.core.rest(cljs.core.next(arglist__5497));
      return G__5496__delegate(x, y, more)
    };
    G__5496.cljs$lang$arity$variadic = G__5496__delegate;
    return G__5496
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__5498 = n % d;
  return cljs.core.fix.call(null, (n - rem__5498) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__5499 = cljs.core.quot.call(null, n, d);
  return n - d * q__5499
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(n) {
  var c__5500 = 0;
  var n__5501 = n;
  while(true) {
    if(n__5501 === 0) {
      return c__5500
    }else {
      var G__5502 = c__5500 + 1;
      var G__5503 = n__5501 & n__5501 - 1;
      c__5500 = G__5502;
      n__5501 = G__5503;
      continue
    }
    break
  }
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__5504__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.truth_(cljs.core.next.call(null, more))) {
            var G__5505 = y;
            var G__5506 = cljs.core.first.call(null, more);
            var G__5507 = cljs.core.next.call(null, more);
            x = G__5505;
            y = G__5506;
            more = G__5507;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__5504 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5504__delegate.call(this, x, y, more)
    };
    G__5504.cljs$lang$maxFixedArity = 2;
    G__5504.cljs$lang$applyTo = function(arglist__5508) {
      var x = cljs.core.first(arglist__5508);
      var y = cljs.core.first(cljs.core.next(arglist__5508));
      var more = cljs.core.rest(cljs.core.next(arglist__5508));
      return G__5504__delegate(x, y, more)
    };
    G__5504.cljs$lang$arity$variadic = G__5504__delegate;
    return G__5504
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__5509 = n;
  var xs__5510 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____5511 = xs__5510;
      if(cljs.core.truth_(and__3822__auto____5511)) {
        return n__5509 > 0
      }else {
        return and__3822__auto____5511
      }
    }())) {
      var G__5512 = n__5509 - 1;
      var G__5513 = cljs.core.next.call(null, xs__5510);
      n__5509 = G__5512;
      xs__5510 = G__5513;
      continue
    }else {
      return xs__5510
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__5514__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__5515 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__5516 = cljs.core.next.call(null, more);
            sb = G__5515;
            more = G__5516;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__5514 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__5514__delegate.call(this, x, ys)
    };
    G__5514.cljs$lang$maxFixedArity = 1;
    G__5514.cljs$lang$applyTo = function(arglist__5517) {
      var x = cljs.core.first(arglist__5517);
      var ys = cljs.core.rest(arglist__5517);
      return G__5514__delegate(x, ys)
    };
    G__5514.cljs$lang$arity$variadic = G__5514__delegate;
    return G__5514
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__5518__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__5519 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__5520 = cljs.core.next.call(null, more);
            sb = G__5519;
            more = G__5520;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__5518 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__5518__delegate.call(this, x, ys)
    };
    G__5518.cljs$lang$maxFixedArity = 1;
    G__5518.cljs$lang$applyTo = function(arglist__5521) {
      var x = cljs.core.first(arglist__5521);
      var ys = cljs.core.rest(arglist__5521);
      return G__5518__delegate(x, ys)
    };
    G__5518.cljs$lang$arity$variadic = G__5518__delegate;
    return G__5518
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__5522 = cljs.core.seq.call(null, x);
    var ys__5523 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__5522 == null) {
        return ys__5523 == null
      }else {
        if(ys__5523 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__5522), cljs.core.first.call(null, ys__5523))) {
            var G__5524 = cljs.core.next.call(null, xs__5522);
            var G__5525 = cljs.core.next.call(null, ys__5523);
            xs__5522 = G__5524;
            ys__5523 = G__5525;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__5526_SHARP_, p2__5527_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__5526_SHARP_, cljs.core.hash.call(null, p2__5527_SHARP_))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll)), cljs.core.next.call(null, coll))
};
void 0;
void 0;
cljs.core.hash_imap = function hash_imap(m) {
  var h__5528 = 0;
  var s__5529 = cljs.core.seq.call(null, m);
  while(true) {
    if(cljs.core.truth_(s__5529)) {
      var e__5530 = cljs.core.first.call(null, s__5529);
      var G__5531 = (h__5528 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__5530)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__5530)))) % 4503599627370496;
      var G__5532 = cljs.core.next.call(null, s__5529);
      h__5528 = G__5531;
      s__5529 = G__5532;
      continue
    }else {
      return h__5528
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__5533 = 0;
  var s__5534 = cljs.core.seq.call(null, s);
  while(true) {
    if(cljs.core.truth_(s__5534)) {
      var e__5535 = cljs.core.first.call(null, s__5534);
      var G__5536 = (h__5533 + cljs.core.hash.call(null, e__5535)) % 4503599627370496;
      var G__5537 = cljs.core.next.call(null, s__5534);
      h__5533 = G__5536;
      s__5534 = G__5537;
      continue
    }else {
      return h__5533
    }
    break
  }
};
void 0;
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__5538__5539 = cljs.core.seq.call(null, fn_map);
  if(cljs.core.truth_(G__5538__5539)) {
    var G__5541__5543 = cljs.core.first.call(null, G__5538__5539);
    var vec__5542__5544 = G__5541__5543;
    var key_name__5545 = cljs.core.nth.call(null, vec__5542__5544, 0, null);
    var f__5546 = cljs.core.nth.call(null, vec__5542__5544, 1, null);
    var G__5538__5547 = G__5538__5539;
    var G__5541__5548 = G__5541__5543;
    var G__5538__5549 = G__5538__5547;
    while(true) {
      var vec__5550__5551 = G__5541__5548;
      var key_name__5552 = cljs.core.nth.call(null, vec__5550__5551, 0, null);
      var f__5553 = cljs.core.nth.call(null, vec__5550__5551, 1, null);
      var G__5538__5554 = G__5538__5549;
      var str_name__5555 = cljs.core.name.call(null, key_name__5552);
      obj[str_name__5555] = f__5553;
      var temp__3974__auto____5556 = cljs.core.next.call(null, G__5538__5554);
      if(cljs.core.truth_(temp__3974__auto____5556)) {
        var G__5538__5557 = temp__3974__auto____5556;
        var G__5558 = cljs.core.first.call(null, G__5538__5557);
        var G__5559 = G__5538__5557;
        G__5541__5548 = G__5558;
        G__5538__5549 = G__5559;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32706670
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.List")
};
cljs.core.List.prototype.cljs$core$IHash$ = true;
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__5560 = this;
  var h__364__auto____5561 = this__5560.__hash;
  if(h__364__auto____5561 != null) {
    return h__364__auto____5561
  }else {
    var h__364__auto____5562 = cljs.core.hash_coll.call(null, coll);
    this__5560.__hash = h__364__auto____5562;
    return h__364__auto____5562
  }
};
cljs.core.List.prototype.cljs$core$ISequential$ = true;
cljs.core.List.prototype.cljs$core$ICollection$ = true;
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__5563 = this;
  return new cljs.core.List(this__5563.meta, o, coll, this__5563.count + 1, null)
};
cljs.core.List.prototype.cljs$core$ASeq$ = true;
cljs.core.List.prototype.toString = function() {
  var this__5564 = this;
  var this$__5565 = this;
  return cljs.core.pr_str.call(null, this$__5565)
};
cljs.core.List.prototype.cljs$core$ISeqable$ = true;
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__5566 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$ = true;
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__5567 = this;
  return this__5567.count
};
cljs.core.List.prototype.cljs$core$IStack$ = true;
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__5568 = this;
  return this__5568.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__5569 = this;
  return cljs.core._rest.call(null, coll)
};
cljs.core.List.prototype.cljs$core$ISeq$ = true;
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__5570 = this;
  return this__5570.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__5571 = this;
  return this__5571.rest
};
cljs.core.List.prototype.cljs$core$IEquiv$ = true;
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__5572 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$ = true;
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__5573 = this;
  return new cljs.core.List(meta, this__5573.first, this__5573.rest, this__5573.count, this__5573.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$ = true;
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__5574 = this;
  return this__5574.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__5575 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List.prototype.cljs$core$IList$ = true;
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32706638
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$ = true;
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__5576 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$ISequential$ = true;
cljs.core.EmptyList.prototype.cljs$core$ICollection$ = true;
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__5577 = this;
  return new cljs.core.List(this__5577.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__5578 = this;
  var this$__5579 = this;
  return cljs.core.pr_str.call(null, this$__5579)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$ = true;
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__5580 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$ = true;
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__5581 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$ = true;
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__5582 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__5583 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$ = true;
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__5584 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__5585 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$ = true;
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__5586 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$ = true;
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__5587 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$ = true;
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__5588 = this;
  return this__5588.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__5589 = this;
  return coll
};
cljs.core.EmptyList.prototype.cljs$core$IList$ = true;
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__5590__5591 = coll;
  if(G__5590__5591 != null) {
    if(function() {
      var or__3824__auto____5592 = G__5590__5591.cljs$lang$protocol_mask$partition0$ & 67108864;
      if(or__3824__auto____5592) {
        return or__3824__auto____5592
      }else {
        return G__5590__5591.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__5590__5591.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__5590__5591)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__5590__5591)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
cljs.core.list = function() {
  var list__delegate = function(items) {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items))
  };
  var list = function(var_args) {
    var items = null;
    if(goog.isDef(var_args)) {
      items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, items)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__5593) {
    var items = cljs.core.seq(arglist__5593);
    return list__delegate(items)
  };
  list.cljs$lang$arity$variadic = list__delegate;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32702572
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$ = true;
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__5594 = this;
  var h__364__auto____5595 = this__5594.__hash;
  if(h__364__auto____5595 != null) {
    return h__364__auto____5595
  }else {
    var h__364__auto____5596 = cljs.core.hash_coll.call(null, coll);
    this__5594.__hash = h__364__auto____5596;
    return h__364__auto____5596
  }
};
cljs.core.Cons.prototype.cljs$core$ISequential$ = true;
cljs.core.Cons.prototype.cljs$core$ICollection$ = true;
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__5597 = this;
  return new cljs.core.Cons(null, o, coll, this__5597.__hash)
};
cljs.core.Cons.prototype.cljs$core$ASeq$ = true;
cljs.core.Cons.prototype.toString = function() {
  var this__5598 = this;
  var this$__5599 = this;
  return cljs.core.pr_str.call(null, this$__5599)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$ = true;
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__5600 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$ = true;
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__5601 = this;
  return this__5601.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__5602 = this;
  if(this__5602.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__5602.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$ = true;
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__5603 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$ = true;
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__5604 = this;
  return new cljs.core.Cons(meta, this__5604.first, this__5604.rest, this__5604.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$ = true;
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__5605 = this;
  return this__5605.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__5606 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__5606.meta)
};
cljs.core.Cons.prototype.cljs$core$IList$ = true;
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____5607 = coll == null;
    if(or__3824__auto____5607) {
      return or__3824__auto____5607
    }else {
      var G__5608__5609 = coll;
      if(G__5608__5609 != null) {
        if(function() {
          var or__3824__auto____5610 = G__5608__5609.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____5610) {
            return or__3824__auto____5610
          }else {
            return G__5608__5609.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__5608__5609.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5608__5609)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__5608__5609)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__5611__5612 = x;
  if(G__5611__5612 != null) {
    if(function() {
      var or__3824__auto____5613 = G__5611__5612.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____5613) {
        return or__3824__auto____5613
      }else {
        return G__5611__5612.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__5611__5612.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__5611__5612)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__5611__5612)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__5614 = null;
  var G__5614__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__5614__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__5614 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__5614__2.call(this, string, f);
      case 3:
        return G__5614__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5614
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__5615 = null;
  var G__5615__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__5615__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__5615 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5615__2.call(this, string, k);
      case 3:
        return G__5615__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5615
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__5616 = null;
  var G__5616__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__5616__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__5616 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5616__2.call(this, string, n);
      case 3:
        return G__5616__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5616
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode.call(null, o)
};
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__5625 = null;
  var G__5625__2 = function(tsym5619, coll) {
    var tsym5619__5621 = this;
    var this$__5622 = tsym5619__5621;
    return cljs.core.get.call(null, coll, this$__5622.toString())
  };
  var G__5625__3 = function(tsym5620, coll, not_found) {
    var tsym5620__5623 = this;
    var this$__5624 = tsym5620__5623;
    return cljs.core.get.call(null, coll, this$__5624.toString(), not_found)
  };
  G__5625 = function(tsym5620, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5625__2.call(this, tsym5620, coll);
      case 3:
        return G__5625__3.call(this, tsym5620, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__5625
}();
String.prototype.apply = function(tsym5617, args5618) {
  return tsym5617.call.apply(tsym5617, [tsym5617].concat(cljs.core.aclone.call(null, args5618)))
};
String["prototype"]["apply"] = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core.get.call(null, args[0], s)
  }else {
    return cljs.core.get.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__5626 = lazy_seq.x;
  if(cljs.core.truth_(lazy_seq.realized)) {
    return x__5626
  }else {
    lazy_seq.x = x__5626.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15925324
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$ = true;
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__5627 = this;
  var h__364__auto____5628 = this__5627.__hash;
  if(h__364__auto____5628 != null) {
    return h__364__auto____5628
  }else {
    var h__364__auto____5629 = cljs.core.hash_coll.call(null, coll);
    this__5627.__hash = h__364__auto____5629;
    return h__364__auto____5629
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISequential$ = true;
cljs.core.LazySeq.prototype.cljs$core$ICollection$ = true;
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__5630 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__5631 = this;
  var this$__5632 = this;
  return cljs.core.pr_str.call(null, this$__5632)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$ = true;
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__5633 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$ = true;
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__5634 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__5635 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$ = true;
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__5636 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$ = true;
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__5637 = this;
  return new cljs.core.LazySeq(meta, this__5637.realized, this__5637.x, this__5637.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$ = true;
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__5638 = this;
  return this__5638.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__5639 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__5639.meta)
};
cljs.core.LazySeq;
cljs.core.to_array = function to_array(s) {
  var ary__5640 = [];
  var s__5641 = s;
  while(true) {
    if(cljs.core.truth_(cljs.core.seq.call(null, s__5641))) {
      ary__5640.push(cljs.core.first.call(null, s__5641));
      var G__5642 = cljs.core.next.call(null, s__5641);
      s__5641 = G__5642;
      continue
    }else {
      return ary__5640
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__5643 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__5644 = 0;
  var xs__5645 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(xs__5645)) {
      ret__5643[i__5644] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__5645));
      var G__5646 = i__5644 + 1;
      var G__5647 = cljs.core.next.call(null, xs__5645);
      i__5644 = G__5646;
      xs__5645 = G__5647;
      continue
    }else {
    }
    break
  }
  return ret__5643
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__5648 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__5649 = cljs.core.seq.call(null, init_val_or_seq);
      var i__5650 = 0;
      var s__5651 = s__5649;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____5652 = s__5651;
          if(cljs.core.truth_(and__3822__auto____5652)) {
            return i__5650 < size
          }else {
            return and__3822__auto____5652
          }
        }())) {
          a__5648[i__5650] = cljs.core.first.call(null, s__5651);
          var G__5655 = i__5650 + 1;
          var G__5656 = cljs.core.next.call(null, s__5651);
          i__5650 = G__5655;
          s__5651 = G__5656;
          continue
        }else {
          return a__5648
        }
        break
      }
    }else {
      var n__685__auto____5653 = size;
      var i__5654 = 0;
      while(true) {
        if(i__5654 < n__685__auto____5653) {
          a__5648[i__5654] = init_val_or_seq;
          var G__5657 = i__5654 + 1;
          i__5654 = G__5657;
          continue
        }else {
        }
        break
      }
      return a__5648
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__5658 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__5659 = cljs.core.seq.call(null, init_val_or_seq);
      var i__5660 = 0;
      var s__5661 = s__5659;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____5662 = s__5661;
          if(cljs.core.truth_(and__3822__auto____5662)) {
            return i__5660 < size
          }else {
            return and__3822__auto____5662
          }
        }())) {
          a__5658[i__5660] = cljs.core.first.call(null, s__5661);
          var G__5665 = i__5660 + 1;
          var G__5666 = cljs.core.next.call(null, s__5661);
          i__5660 = G__5665;
          s__5661 = G__5666;
          continue
        }else {
          return a__5658
        }
        break
      }
    }else {
      var n__685__auto____5663 = size;
      var i__5664 = 0;
      while(true) {
        if(i__5664 < n__685__auto____5663) {
          a__5658[i__5664] = init_val_or_seq;
          var G__5667 = i__5664 + 1;
          i__5664 = G__5667;
          continue
        }else {
        }
        break
      }
      return a__5658
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__5668 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__5669 = cljs.core.seq.call(null, init_val_or_seq);
      var i__5670 = 0;
      var s__5671 = s__5669;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____5672 = s__5671;
          if(cljs.core.truth_(and__3822__auto____5672)) {
            return i__5670 < size
          }else {
            return and__3822__auto____5672
          }
        }())) {
          a__5668[i__5670] = cljs.core.first.call(null, s__5671);
          var G__5675 = i__5670 + 1;
          var G__5676 = cljs.core.next.call(null, s__5671);
          i__5670 = G__5675;
          s__5671 = G__5676;
          continue
        }else {
          return a__5668
        }
        break
      }
    }else {
      var n__685__auto____5673 = size;
      var i__5674 = 0;
      while(true) {
        if(i__5674 < n__685__auto____5673) {
          a__5668[i__5674] = init_val_or_seq;
          var G__5677 = i__5674 + 1;
          i__5674 = G__5677;
          continue
        }else {
        }
        break
      }
      return a__5668
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__5678 = s;
    var i__5679 = n;
    var sum__5680 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____5681 = i__5679 > 0;
        if(and__3822__auto____5681) {
          return cljs.core.seq.call(null, s__5678)
        }else {
          return and__3822__auto____5681
        }
      }())) {
        var G__5682 = cljs.core.next.call(null, s__5678);
        var G__5683 = i__5679 - 1;
        var G__5684 = sum__5680 + 1;
        s__5678 = G__5682;
        i__5679 = G__5683;
        sum__5680 = G__5684;
        continue
      }else {
        return sum__5680
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    })
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    })
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__5685 = cljs.core.seq.call(null, x);
      if(cljs.core.truth_(s__5685)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__5685), concat.call(null, cljs.core.rest.call(null, s__5685), y))
      }else {
        return y
      }
    })
  };
  var concat__3 = function() {
    var G__5688__delegate = function(x, y, zs) {
      var cat__5687 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__5686 = cljs.core.seq.call(null, xys);
          if(cljs.core.truth_(xys__5686)) {
            return cljs.core.cons.call(null, cljs.core.first.call(null, xys__5686), cat.call(null, cljs.core.rest.call(null, xys__5686), zs))
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        })
      };
      return cat__5687.call(null, concat.call(null, x, y), zs)
    };
    var G__5688 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5688__delegate.call(this, x, y, zs)
    };
    G__5688.cljs$lang$maxFixedArity = 2;
    G__5688.cljs$lang$applyTo = function(arglist__5689) {
      var x = cljs.core.first(arglist__5689);
      var y = cljs.core.first(cljs.core.next(arglist__5689));
      var zs = cljs.core.rest(cljs.core.next(arglist__5689));
      return G__5688__delegate(x, y, zs)
    };
    G__5688.cljs$lang$arity$variadic = G__5688__delegate;
    return G__5688
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__5690__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__5690 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5690__delegate.call(this, a, b, c, d, more)
    };
    G__5690.cljs$lang$maxFixedArity = 4;
    G__5690.cljs$lang$applyTo = function(arglist__5691) {
      var a = cljs.core.first(arglist__5691);
      var b = cljs.core.first(cljs.core.next(arglist__5691));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5691)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5691))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5691))));
      return G__5690__delegate(a, b, c, d, more)
    };
    G__5690.cljs$lang$arity$variadic = G__5690__delegate;
    return G__5690
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
void 0;
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__5692 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__5693 = cljs.core._first.call(null, args__5692);
    var args__5694 = cljs.core._rest.call(null, args__5692);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__5693)
      }else {
        return f.call(null, a__5693)
      }
    }else {
      var b__5695 = cljs.core._first.call(null, args__5694);
      var args__5696 = cljs.core._rest.call(null, args__5694);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__5693, b__5695)
        }else {
          return f.call(null, a__5693, b__5695)
        }
      }else {
        var c__5697 = cljs.core._first.call(null, args__5696);
        var args__5698 = cljs.core._rest.call(null, args__5696);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__5693, b__5695, c__5697)
          }else {
            return f.call(null, a__5693, b__5695, c__5697)
          }
        }else {
          var d__5699 = cljs.core._first.call(null, args__5698);
          var args__5700 = cljs.core._rest.call(null, args__5698);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__5693, b__5695, c__5697, d__5699)
            }else {
              return f.call(null, a__5693, b__5695, c__5697, d__5699)
            }
          }else {
            var e__5701 = cljs.core._first.call(null, args__5700);
            var args__5702 = cljs.core._rest.call(null, args__5700);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__5693, b__5695, c__5697, d__5699, e__5701)
              }else {
                return f.call(null, a__5693, b__5695, c__5697, d__5699, e__5701)
              }
            }else {
              var f__5703 = cljs.core._first.call(null, args__5702);
              var args__5704 = cljs.core._rest.call(null, args__5702);
              if(argc === 6) {
                if(f__5703.cljs$lang$arity$6) {
                  return f__5703.cljs$lang$arity$6(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703)
                }else {
                  return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703)
                }
              }else {
                var g__5705 = cljs.core._first.call(null, args__5704);
                var args__5706 = cljs.core._rest.call(null, args__5704);
                if(argc === 7) {
                  if(f__5703.cljs$lang$arity$7) {
                    return f__5703.cljs$lang$arity$7(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705)
                  }else {
                    return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705)
                  }
                }else {
                  var h__5707 = cljs.core._first.call(null, args__5706);
                  var args__5708 = cljs.core._rest.call(null, args__5706);
                  if(argc === 8) {
                    if(f__5703.cljs$lang$arity$8) {
                      return f__5703.cljs$lang$arity$8(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707)
                    }else {
                      return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707)
                    }
                  }else {
                    var i__5709 = cljs.core._first.call(null, args__5708);
                    var args__5710 = cljs.core._rest.call(null, args__5708);
                    if(argc === 9) {
                      if(f__5703.cljs$lang$arity$9) {
                        return f__5703.cljs$lang$arity$9(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709)
                      }else {
                        return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709)
                      }
                    }else {
                      var j__5711 = cljs.core._first.call(null, args__5710);
                      var args__5712 = cljs.core._rest.call(null, args__5710);
                      if(argc === 10) {
                        if(f__5703.cljs$lang$arity$10) {
                          return f__5703.cljs$lang$arity$10(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711)
                        }else {
                          return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711)
                        }
                      }else {
                        var k__5713 = cljs.core._first.call(null, args__5712);
                        var args__5714 = cljs.core._rest.call(null, args__5712);
                        if(argc === 11) {
                          if(f__5703.cljs$lang$arity$11) {
                            return f__5703.cljs$lang$arity$11(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713)
                          }else {
                            return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713)
                          }
                        }else {
                          var l__5715 = cljs.core._first.call(null, args__5714);
                          var args__5716 = cljs.core._rest.call(null, args__5714);
                          if(argc === 12) {
                            if(f__5703.cljs$lang$arity$12) {
                              return f__5703.cljs$lang$arity$12(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715)
                            }else {
                              return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715)
                            }
                          }else {
                            var m__5717 = cljs.core._first.call(null, args__5716);
                            var args__5718 = cljs.core._rest.call(null, args__5716);
                            if(argc === 13) {
                              if(f__5703.cljs$lang$arity$13) {
                                return f__5703.cljs$lang$arity$13(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717)
                              }else {
                                return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717)
                              }
                            }else {
                              var n__5719 = cljs.core._first.call(null, args__5718);
                              var args__5720 = cljs.core._rest.call(null, args__5718);
                              if(argc === 14) {
                                if(f__5703.cljs$lang$arity$14) {
                                  return f__5703.cljs$lang$arity$14(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719)
                                }else {
                                  return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719)
                                }
                              }else {
                                var o__5721 = cljs.core._first.call(null, args__5720);
                                var args__5722 = cljs.core._rest.call(null, args__5720);
                                if(argc === 15) {
                                  if(f__5703.cljs$lang$arity$15) {
                                    return f__5703.cljs$lang$arity$15(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721)
                                  }else {
                                    return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721)
                                  }
                                }else {
                                  var p__5723 = cljs.core._first.call(null, args__5722);
                                  var args__5724 = cljs.core._rest.call(null, args__5722);
                                  if(argc === 16) {
                                    if(f__5703.cljs$lang$arity$16) {
                                      return f__5703.cljs$lang$arity$16(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723)
                                    }else {
                                      return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723)
                                    }
                                  }else {
                                    var q__5725 = cljs.core._first.call(null, args__5724);
                                    var args__5726 = cljs.core._rest.call(null, args__5724);
                                    if(argc === 17) {
                                      if(f__5703.cljs$lang$arity$17) {
                                        return f__5703.cljs$lang$arity$17(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725)
                                      }else {
                                        return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725)
                                      }
                                    }else {
                                      var r__5727 = cljs.core._first.call(null, args__5726);
                                      var args__5728 = cljs.core._rest.call(null, args__5726);
                                      if(argc === 18) {
                                        if(f__5703.cljs$lang$arity$18) {
                                          return f__5703.cljs$lang$arity$18(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725, r__5727)
                                        }else {
                                          return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725, r__5727)
                                        }
                                      }else {
                                        var s__5729 = cljs.core._first.call(null, args__5728);
                                        var args__5730 = cljs.core._rest.call(null, args__5728);
                                        if(argc === 19) {
                                          if(f__5703.cljs$lang$arity$19) {
                                            return f__5703.cljs$lang$arity$19(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725, r__5727, s__5729)
                                          }else {
                                            return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725, r__5727, s__5729)
                                          }
                                        }else {
                                          var t__5731 = cljs.core._first.call(null, args__5730);
                                          var args__5732 = cljs.core._rest.call(null, args__5730);
                                          if(argc === 20) {
                                            if(f__5703.cljs$lang$arity$20) {
                                              return f__5703.cljs$lang$arity$20(a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725, r__5727, s__5729, t__5731)
                                            }else {
                                              return f__5703.call(null, a__5693, b__5695, c__5697, d__5699, e__5701, f__5703, g__5705, h__5707, i__5709, j__5711, k__5713, l__5715, m__5717, n__5719, o__5721, p__5723, q__5725, r__5727, s__5729, t__5731)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
void 0;
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__5733 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__5734 = cljs.core.bounded_count.call(null, args, fixed_arity__5733 + 1);
      if(bc__5734 <= fixed_arity__5733) {
        return cljs.core.apply_to.call(null, f, bc__5734, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__5735 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__5736 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__5737 = cljs.core.bounded_count.call(null, arglist__5735, fixed_arity__5736 + 1);
      if(bc__5737 <= fixed_arity__5736) {
        return cljs.core.apply_to.call(null, f, bc__5737, arglist__5735)
      }else {
        return f.cljs$lang$applyTo(arglist__5735)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__5735))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__5738 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__5739 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__5740 = cljs.core.bounded_count.call(null, arglist__5738, fixed_arity__5739 + 1);
      if(bc__5740 <= fixed_arity__5739) {
        return cljs.core.apply_to.call(null, f, bc__5740, arglist__5738)
      }else {
        return f.cljs$lang$applyTo(arglist__5738)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__5738))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__5741 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__5742 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__5743 = cljs.core.bounded_count.call(null, arglist__5741, fixed_arity__5742 + 1);
      if(bc__5743 <= fixed_arity__5742) {
        return cljs.core.apply_to.call(null, f, bc__5743, arglist__5741)
      }else {
        return f.cljs$lang$applyTo(arglist__5741)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__5741))
    }
  };
  var apply__6 = function() {
    var G__5747__delegate = function(f, a, b, c, d, args) {
      var arglist__5744 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__5745 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__5746 = cljs.core.bounded_count.call(null, arglist__5744, fixed_arity__5745 + 1);
        if(bc__5746 <= fixed_arity__5745) {
          return cljs.core.apply_to.call(null, f, bc__5746, arglist__5744)
        }else {
          return f.cljs$lang$applyTo(arglist__5744)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__5744))
      }
    };
    var G__5747 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__5747__delegate.call(this, f, a, b, c, d, args)
    };
    G__5747.cljs$lang$maxFixedArity = 5;
    G__5747.cljs$lang$applyTo = function(arglist__5748) {
      var f = cljs.core.first(arglist__5748);
      var a = cljs.core.first(cljs.core.next(arglist__5748));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5748)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5748))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5748)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5748)))));
      return G__5747__delegate(f, a, b, c, d, args)
    };
    G__5747.cljs$lang$arity$variadic = G__5747__delegate;
    return G__5747
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__5749) {
    var obj = cljs.core.first(arglist__5749);
    var f = cljs.core.first(cljs.core.next(arglist__5749));
    var args = cljs.core.rest(cljs.core.next(arglist__5749));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return cljs.core.not.call(null, cljs.core._EQ_.call(null, x, y))
  };
  var not_EQ___3 = function() {
    var G__5750__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__5750 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5750__delegate.call(this, x, y, more)
    };
    G__5750.cljs$lang$maxFixedArity = 2;
    G__5750.cljs$lang$applyTo = function(arglist__5751) {
      var x = cljs.core.first(arglist__5751);
      var y = cljs.core.first(cljs.core.next(arglist__5751));
      var more = cljs.core.rest(cljs.core.next(arglist__5751));
      return G__5750__delegate(x, y, more)
    };
    G__5750.cljs$lang$arity$variadic = G__5750__delegate;
    return G__5750
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__5752 = pred;
        var G__5753 = cljs.core.next.call(null, coll);
        pred = G__5752;
        coll = G__5753;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.every_QMARK_.call(null, pred, coll))
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
      var or__3824__auto____5754 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____5754)) {
        return or__3824__auto____5754
      }else {
        var G__5755 = pred;
        var G__5756 = cljs.core.next.call(null, coll);
        pred = G__5755;
        coll = G__5756;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return cljs.core.not.call(null, cljs.core.even_QMARK_.call(null, n))
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__5757 = null;
    var G__5757__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__5757__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__5757__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__5757__3 = function() {
      var G__5758__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__5758 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__5758__delegate.call(this, x, y, zs)
      };
      G__5758.cljs$lang$maxFixedArity = 2;
      G__5758.cljs$lang$applyTo = function(arglist__5759) {
        var x = cljs.core.first(arglist__5759);
        var y = cljs.core.first(cljs.core.next(arglist__5759));
        var zs = cljs.core.rest(cljs.core.next(arglist__5759));
        return G__5758__delegate(x, y, zs)
      };
      G__5758.cljs$lang$arity$variadic = G__5758__delegate;
      return G__5758
    }();
    G__5757 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__5757__0.call(this);
        case 1:
          return G__5757__1.call(this, x);
        case 2:
          return G__5757__2.call(this, x, y);
        default:
          return G__5757__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__5757.cljs$lang$maxFixedArity = 2;
    G__5757.cljs$lang$applyTo = G__5757__3.cljs$lang$applyTo;
    return G__5757
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__5760__delegate = function(args) {
      return x
    };
    var G__5760 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__5760__delegate.call(this, args)
    };
    G__5760.cljs$lang$maxFixedArity = 0;
    G__5760.cljs$lang$applyTo = function(arglist__5761) {
      var args = cljs.core.seq(arglist__5761);
      return G__5760__delegate(args)
    };
    G__5760.cljs$lang$arity$variadic = G__5760__delegate;
    return G__5760
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__5765 = null;
      var G__5765__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__5765__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__5765__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__5765__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__5765__4 = function() {
        var G__5766__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__5766 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5766__delegate.call(this, x, y, z, args)
        };
        G__5766.cljs$lang$maxFixedArity = 3;
        G__5766.cljs$lang$applyTo = function(arglist__5767) {
          var x = cljs.core.first(arglist__5767);
          var y = cljs.core.first(cljs.core.next(arglist__5767));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5767)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5767)));
          return G__5766__delegate(x, y, z, args)
        };
        G__5766.cljs$lang$arity$variadic = G__5766__delegate;
        return G__5766
      }();
      G__5765 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5765__0.call(this);
          case 1:
            return G__5765__1.call(this, x);
          case 2:
            return G__5765__2.call(this, x, y);
          case 3:
            return G__5765__3.call(this, x, y, z);
          default:
            return G__5765__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__5765.cljs$lang$maxFixedArity = 3;
      G__5765.cljs$lang$applyTo = G__5765__4.cljs$lang$applyTo;
      return G__5765
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__5768 = null;
      var G__5768__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__5768__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__5768__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__5768__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__5768__4 = function() {
        var G__5769__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__5769 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5769__delegate.call(this, x, y, z, args)
        };
        G__5769.cljs$lang$maxFixedArity = 3;
        G__5769.cljs$lang$applyTo = function(arglist__5770) {
          var x = cljs.core.first(arglist__5770);
          var y = cljs.core.first(cljs.core.next(arglist__5770));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5770)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5770)));
          return G__5769__delegate(x, y, z, args)
        };
        G__5769.cljs$lang$arity$variadic = G__5769__delegate;
        return G__5769
      }();
      G__5768 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__5768__0.call(this);
          case 1:
            return G__5768__1.call(this, x);
          case 2:
            return G__5768__2.call(this, x, y);
          case 3:
            return G__5768__3.call(this, x, y, z);
          default:
            return G__5768__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__5768.cljs$lang$maxFixedArity = 3;
      G__5768.cljs$lang$applyTo = G__5768__4.cljs$lang$applyTo;
      return G__5768
    }()
  };
  var comp__4 = function() {
    var G__5771__delegate = function(f1, f2, f3, fs) {
      var fs__5762 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__5772__delegate = function(args) {
          var ret__5763 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__5762), args);
          var fs__5764 = cljs.core.next.call(null, fs__5762);
          while(true) {
            if(cljs.core.truth_(fs__5764)) {
              var G__5773 = cljs.core.first.call(null, fs__5764).call(null, ret__5763);
              var G__5774 = cljs.core.next.call(null, fs__5764);
              ret__5763 = G__5773;
              fs__5764 = G__5774;
              continue
            }else {
              return ret__5763
            }
            break
          }
        };
        var G__5772 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__5772__delegate.call(this, args)
        };
        G__5772.cljs$lang$maxFixedArity = 0;
        G__5772.cljs$lang$applyTo = function(arglist__5775) {
          var args = cljs.core.seq(arglist__5775);
          return G__5772__delegate(args)
        };
        G__5772.cljs$lang$arity$variadic = G__5772__delegate;
        return G__5772
      }()
    };
    var G__5771 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5771__delegate.call(this, f1, f2, f3, fs)
    };
    G__5771.cljs$lang$maxFixedArity = 3;
    G__5771.cljs$lang$applyTo = function(arglist__5776) {
      var f1 = cljs.core.first(arglist__5776);
      var f2 = cljs.core.first(cljs.core.next(arglist__5776));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5776)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5776)));
      return G__5771__delegate(f1, f2, f3, fs)
    };
    G__5771.cljs$lang$arity$variadic = G__5771__delegate;
    return G__5771
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__5777__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__5777 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__5777__delegate.call(this, args)
      };
      G__5777.cljs$lang$maxFixedArity = 0;
      G__5777.cljs$lang$applyTo = function(arglist__5778) {
        var args = cljs.core.seq(arglist__5778);
        return G__5777__delegate(args)
      };
      G__5777.cljs$lang$arity$variadic = G__5777__delegate;
      return G__5777
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__5779__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__5779 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__5779__delegate.call(this, args)
      };
      G__5779.cljs$lang$maxFixedArity = 0;
      G__5779.cljs$lang$applyTo = function(arglist__5780) {
        var args = cljs.core.seq(arglist__5780);
        return G__5779__delegate(args)
      };
      G__5779.cljs$lang$arity$variadic = G__5779__delegate;
      return G__5779
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__5781__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__5781 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__5781__delegate.call(this, args)
      };
      G__5781.cljs$lang$maxFixedArity = 0;
      G__5781.cljs$lang$applyTo = function(arglist__5782) {
        var args = cljs.core.seq(arglist__5782);
        return G__5781__delegate(args)
      };
      G__5781.cljs$lang$arity$variadic = G__5781__delegate;
      return G__5781
    }()
  };
  var partial__5 = function() {
    var G__5783__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__5784__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__5784 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__5784__delegate.call(this, args)
        };
        G__5784.cljs$lang$maxFixedArity = 0;
        G__5784.cljs$lang$applyTo = function(arglist__5785) {
          var args = cljs.core.seq(arglist__5785);
          return G__5784__delegate(args)
        };
        G__5784.cljs$lang$arity$variadic = G__5784__delegate;
        return G__5784
      }()
    };
    var G__5783 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5783__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__5783.cljs$lang$maxFixedArity = 4;
    G__5783.cljs$lang$applyTo = function(arglist__5786) {
      var f = cljs.core.first(arglist__5786);
      var arg1 = cljs.core.first(cljs.core.next(arglist__5786));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5786)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5786))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5786))));
      return G__5783__delegate(f, arg1, arg2, arg3, more)
    };
    G__5783.cljs$lang$arity$variadic = G__5783__delegate;
    return G__5783
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__5787 = null;
      var G__5787__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__5787__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__5787__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__5787__4 = function() {
        var G__5788__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__5788 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5788__delegate.call(this, a, b, c, ds)
        };
        G__5788.cljs$lang$maxFixedArity = 3;
        G__5788.cljs$lang$applyTo = function(arglist__5789) {
          var a = cljs.core.first(arglist__5789);
          var b = cljs.core.first(cljs.core.next(arglist__5789));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5789)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5789)));
          return G__5788__delegate(a, b, c, ds)
        };
        G__5788.cljs$lang$arity$variadic = G__5788__delegate;
        return G__5788
      }();
      G__5787 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__5787__1.call(this, a);
          case 2:
            return G__5787__2.call(this, a, b);
          case 3:
            return G__5787__3.call(this, a, b, c);
          default:
            return G__5787__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__5787.cljs$lang$maxFixedArity = 3;
      G__5787.cljs$lang$applyTo = G__5787__4.cljs$lang$applyTo;
      return G__5787
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__5790 = null;
      var G__5790__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__5790__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__5790__4 = function() {
        var G__5791__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__5791 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5791__delegate.call(this, a, b, c, ds)
        };
        G__5791.cljs$lang$maxFixedArity = 3;
        G__5791.cljs$lang$applyTo = function(arglist__5792) {
          var a = cljs.core.first(arglist__5792);
          var b = cljs.core.first(cljs.core.next(arglist__5792));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5792)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5792)));
          return G__5791__delegate(a, b, c, ds)
        };
        G__5791.cljs$lang$arity$variadic = G__5791__delegate;
        return G__5791
      }();
      G__5790 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5790__2.call(this, a, b);
          case 3:
            return G__5790__3.call(this, a, b, c);
          default:
            return G__5790__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__5790.cljs$lang$maxFixedArity = 3;
      G__5790.cljs$lang$applyTo = G__5790__4.cljs$lang$applyTo;
      return G__5790
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__5793 = null;
      var G__5793__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__5793__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__5793__4 = function() {
        var G__5794__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__5794 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5794__delegate.call(this, a, b, c, ds)
        };
        G__5794.cljs$lang$maxFixedArity = 3;
        G__5794.cljs$lang$applyTo = function(arglist__5795) {
          var a = cljs.core.first(arglist__5795);
          var b = cljs.core.first(cljs.core.next(arglist__5795));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5795)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5795)));
          return G__5794__delegate(a, b, c, ds)
        };
        G__5794.cljs$lang$arity$variadic = G__5794__delegate;
        return G__5794
      }();
      G__5793 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__5793__2.call(this, a, b);
          case 3:
            return G__5793__3.call(this, a, b, c);
          default:
            return G__5793__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__5793.cljs$lang$maxFixedArity = 3;
      G__5793.cljs$lang$applyTo = G__5793__4.cljs$lang$applyTo;
      return G__5793
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__5798 = function mpi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____5796 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____5796)) {
        var s__5797 = temp__3974__auto____5796;
        return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__5797)), mpi.call(null, idx + 1, cljs.core.rest.call(null, s__5797)))
      }else {
        return null
      }
    })
  };
  return mapi__5798.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____5799 = cljs.core.seq.call(null, coll);
    if(cljs.core.truth_(temp__3974__auto____5799)) {
      var s__5800 = temp__3974__auto____5799;
      var x__5801 = f.call(null, cljs.core.first.call(null, s__5800));
      if(x__5801 == null) {
        return keep.call(null, f, cljs.core.rest.call(null, s__5800))
      }else {
        return cljs.core.cons.call(null, x__5801, keep.call(null, f, cljs.core.rest.call(null, s__5800)))
      }
    }else {
      return null
    }
  })
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__5811 = function kpi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____5808 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____5808)) {
        var s__5809 = temp__3974__auto____5808;
        var x__5810 = f.call(null, idx, cljs.core.first.call(null, s__5809));
        if(x__5810 == null) {
          return kpi.call(null, idx + 1, cljs.core.rest.call(null, s__5809))
        }else {
          return cljs.core.cons.call(null, x__5810, kpi.call(null, idx + 1, cljs.core.rest.call(null, s__5809)))
        }
      }else {
        return null
      }
    })
  };
  return keepi__5811.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5818 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5818)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____5818
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5819 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5819)) {
            var and__3822__auto____5820 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____5820)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____5820
            }
          }else {
            return and__3822__auto____5819
          }
        }())
      };
      var ep1__4 = function() {
        var G__5856__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____5821 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____5821)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____5821
            }
          }())
        };
        var G__5856 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5856__delegate.call(this, x, y, z, args)
        };
        G__5856.cljs$lang$maxFixedArity = 3;
        G__5856.cljs$lang$applyTo = function(arglist__5857) {
          var x = cljs.core.first(arglist__5857);
          var y = cljs.core.first(cljs.core.next(arglist__5857));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5857)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5857)));
          return G__5856__delegate(x, y, z, args)
        };
        G__5856.cljs$lang$arity$variadic = G__5856__delegate;
        return G__5856
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5822 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5822)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____5822
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5823 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5823)) {
            var and__3822__auto____5824 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____5824)) {
              var and__3822__auto____5825 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____5825)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____5825
              }
            }else {
              return and__3822__auto____5824
            }
          }else {
            return and__3822__auto____5823
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5826 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5826)) {
            var and__3822__auto____5827 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____5827)) {
              var and__3822__auto____5828 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____5828)) {
                var and__3822__auto____5829 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____5829)) {
                  var and__3822__auto____5830 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____5830)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____5830
                  }
                }else {
                  return and__3822__auto____5829
                }
              }else {
                return and__3822__auto____5828
              }
            }else {
              return and__3822__auto____5827
            }
          }else {
            return and__3822__auto____5826
          }
        }())
      };
      var ep2__4 = function() {
        var G__5858__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____5831 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____5831)) {
              return cljs.core.every_QMARK_.call(null, function(p1__5802_SHARP_) {
                var and__3822__auto____5832 = p1.call(null, p1__5802_SHARP_);
                if(cljs.core.truth_(and__3822__auto____5832)) {
                  return p2.call(null, p1__5802_SHARP_)
                }else {
                  return and__3822__auto____5832
                }
              }, args)
            }else {
              return and__3822__auto____5831
            }
          }())
        };
        var G__5858 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5858__delegate.call(this, x, y, z, args)
        };
        G__5858.cljs$lang$maxFixedArity = 3;
        G__5858.cljs$lang$applyTo = function(arglist__5859) {
          var x = cljs.core.first(arglist__5859);
          var y = cljs.core.first(cljs.core.next(arglist__5859));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5859)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5859)));
          return G__5858__delegate(x, y, z, args)
        };
        G__5858.cljs$lang$arity$variadic = G__5858__delegate;
        return G__5858
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5833 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5833)) {
            var and__3822__auto____5834 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____5834)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____5834
            }
          }else {
            return and__3822__auto____5833
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5835 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5835)) {
            var and__3822__auto____5836 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____5836)) {
              var and__3822__auto____5837 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____5837)) {
                var and__3822__auto____5838 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____5838)) {
                  var and__3822__auto____5839 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____5839)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____5839
                  }
                }else {
                  return and__3822__auto____5838
                }
              }else {
                return and__3822__auto____5837
              }
            }else {
              return and__3822__auto____5836
            }
          }else {
            return and__3822__auto____5835
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____5840 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____5840)) {
            var and__3822__auto____5841 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____5841)) {
              var and__3822__auto____5842 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____5842)) {
                var and__3822__auto____5843 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____5843)) {
                  var and__3822__auto____5844 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____5844)) {
                    var and__3822__auto____5845 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____5845)) {
                      var and__3822__auto____5846 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____5846)) {
                        var and__3822__auto____5847 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____5847)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____5847
                        }
                      }else {
                        return and__3822__auto____5846
                      }
                    }else {
                      return and__3822__auto____5845
                    }
                  }else {
                    return and__3822__auto____5844
                  }
                }else {
                  return and__3822__auto____5843
                }
              }else {
                return and__3822__auto____5842
              }
            }else {
              return and__3822__auto____5841
            }
          }else {
            return and__3822__auto____5840
          }
        }())
      };
      var ep3__4 = function() {
        var G__5860__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____5848 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____5848)) {
              return cljs.core.every_QMARK_.call(null, function(p1__5803_SHARP_) {
                var and__3822__auto____5849 = p1.call(null, p1__5803_SHARP_);
                if(cljs.core.truth_(and__3822__auto____5849)) {
                  var and__3822__auto____5850 = p2.call(null, p1__5803_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____5850)) {
                    return p3.call(null, p1__5803_SHARP_)
                  }else {
                    return and__3822__auto____5850
                  }
                }else {
                  return and__3822__auto____5849
                }
              }, args)
            }else {
              return and__3822__auto____5848
            }
          }())
        };
        var G__5860 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5860__delegate.call(this, x, y, z, args)
        };
        G__5860.cljs$lang$maxFixedArity = 3;
        G__5860.cljs$lang$applyTo = function(arglist__5861) {
          var x = cljs.core.first(arglist__5861);
          var y = cljs.core.first(cljs.core.next(arglist__5861));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5861)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5861)));
          return G__5860__delegate(x, y, z, args)
        };
        G__5860.cljs$lang$arity$variadic = G__5860__delegate;
        return G__5860
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__5862__delegate = function(p1, p2, p3, ps) {
      var ps__5851 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__5804_SHARP_) {
            return p1__5804_SHARP_.call(null, x)
          }, ps__5851)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__5805_SHARP_) {
            var and__3822__auto____5852 = p1__5805_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____5852)) {
              return p1__5805_SHARP_.call(null, y)
            }else {
              return and__3822__auto____5852
            }
          }, ps__5851)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__5806_SHARP_) {
            var and__3822__auto____5853 = p1__5806_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____5853)) {
              var and__3822__auto____5854 = p1__5806_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____5854)) {
                return p1__5806_SHARP_.call(null, z)
              }else {
                return and__3822__auto____5854
              }
            }else {
              return and__3822__auto____5853
            }
          }, ps__5851)
        };
        var epn__4 = function() {
          var G__5863__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____5855 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____5855)) {
                return cljs.core.every_QMARK_.call(null, function(p1__5807_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__5807_SHARP_, args)
                }, ps__5851)
              }else {
                return and__3822__auto____5855
              }
            }())
          };
          var G__5863 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__5863__delegate.call(this, x, y, z, args)
          };
          G__5863.cljs$lang$maxFixedArity = 3;
          G__5863.cljs$lang$applyTo = function(arglist__5864) {
            var x = cljs.core.first(arglist__5864);
            var y = cljs.core.first(cljs.core.next(arglist__5864));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5864)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5864)));
            return G__5863__delegate(x, y, z, args)
          };
          G__5863.cljs$lang$arity$variadic = G__5863__delegate;
          return G__5863
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__5862 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5862__delegate.call(this, p1, p2, p3, ps)
    };
    G__5862.cljs$lang$maxFixedArity = 3;
    G__5862.cljs$lang$applyTo = function(arglist__5865) {
      var p1 = cljs.core.first(arglist__5865);
      var p2 = cljs.core.first(cljs.core.next(arglist__5865));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5865)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5865)));
      return G__5862__delegate(p1, p2, p3, ps)
    };
    G__5862.cljs$lang$arity$variadic = G__5862__delegate;
    return G__5862
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____5867 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5867)) {
          return or__3824__auto____5867
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____5868 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5868)) {
          return or__3824__auto____5868
        }else {
          var or__3824__auto____5869 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____5869)) {
            return or__3824__auto____5869
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__5905__delegate = function(x, y, z, args) {
          var or__3824__auto____5870 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____5870)) {
            return or__3824__auto____5870
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__5905 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5905__delegate.call(this, x, y, z, args)
        };
        G__5905.cljs$lang$maxFixedArity = 3;
        G__5905.cljs$lang$applyTo = function(arglist__5906) {
          var x = cljs.core.first(arglist__5906);
          var y = cljs.core.first(cljs.core.next(arglist__5906));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5906)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5906)));
          return G__5905__delegate(x, y, z, args)
        };
        G__5905.cljs$lang$arity$variadic = G__5905__delegate;
        return G__5905
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____5871 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5871)) {
          return or__3824__auto____5871
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____5872 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5872)) {
          return or__3824__auto____5872
        }else {
          var or__3824__auto____5873 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____5873)) {
            return or__3824__auto____5873
          }else {
            var or__3824__auto____5874 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____5874)) {
              return or__3824__auto____5874
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____5875 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5875)) {
          return or__3824__auto____5875
        }else {
          var or__3824__auto____5876 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____5876)) {
            return or__3824__auto____5876
          }else {
            var or__3824__auto____5877 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____5877)) {
              return or__3824__auto____5877
            }else {
              var or__3824__auto____5878 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____5878)) {
                return or__3824__auto____5878
              }else {
                var or__3824__auto____5879 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____5879)) {
                  return or__3824__auto____5879
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__5907__delegate = function(x, y, z, args) {
          var or__3824__auto____5880 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____5880)) {
            return or__3824__auto____5880
          }else {
            return cljs.core.some.call(null, function(p1__5812_SHARP_) {
              var or__3824__auto____5881 = p1.call(null, p1__5812_SHARP_);
              if(cljs.core.truth_(or__3824__auto____5881)) {
                return or__3824__auto____5881
              }else {
                return p2.call(null, p1__5812_SHARP_)
              }
            }, args)
          }
        };
        var G__5907 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5907__delegate.call(this, x, y, z, args)
        };
        G__5907.cljs$lang$maxFixedArity = 3;
        G__5907.cljs$lang$applyTo = function(arglist__5908) {
          var x = cljs.core.first(arglist__5908);
          var y = cljs.core.first(cljs.core.next(arglist__5908));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5908)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5908)));
          return G__5907__delegate(x, y, z, args)
        };
        G__5907.cljs$lang$arity$variadic = G__5907__delegate;
        return G__5907
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____5882 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5882)) {
          return or__3824__auto____5882
        }else {
          var or__3824__auto____5883 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____5883)) {
            return or__3824__auto____5883
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____5884 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5884)) {
          return or__3824__auto____5884
        }else {
          var or__3824__auto____5885 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____5885)) {
            return or__3824__auto____5885
          }else {
            var or__3824__auto____5886 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____5886)) {
              return or__3824__auto____5886
            }else {
              var or__3824__auto____5887 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____5887)) {
                return or__3824__auto____5887
              }else {
                var or__3824__auto____5888 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____5888)) {
                  return or__3824__auto____5888
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____5889 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____5889)) {
          return or__3824__auto____5889
        }else {
          var or__3824__auto____5890 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____5890)) {
            return or__3824__auto____5890
          }else {
            var or__3824__auto____5891 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____5891)) {
              return or__3824__auto____5891
            }else {
              var or__3824__auto____5892 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____5892)) {
                return or__3824__auto____5892
              }else {
                var or__3824__auto____5893 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____5893)) {
                  return or__3824__auto____5893
                }else {
                  var or__3824__auto____5894 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____5894)) {
                    return or__3824__auto____5894
                  }else {
                    var or__3824__auto____5895 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____5895)) {
                      return or__3824__auto____5895
                    }else {
                      var or__3824__auto____5896 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____5896)) {
                        return or__3824__auto____5896
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__5909__delegate = function(x, y, z, args) {
          var or__3824__auto____5897 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____5897)) {
            return or__3824__auto____5897
          }else {
            return cljs.core.some.call(null, function(p1__5813_SHARP_) {
              var or__3824__auto____5898 = p1.call(null, p1__5813_SHARP_);
              if(cljs.core.truth_(or__3824__auto____5898)) {
                return or__3824__auto____5898
              }else {
                var or__3824__auto____5899 = p2.call(null, p1__5813_SHARP_);
                if(cljs.core.truth_(or__3824__auto____5899)) {
                  return or__3824__auto____5899
                }else {
                  return p3.call(null, p1__5813_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__5909 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__5909__delegate.call(this, x, y, z, args)
        };
        G__5909.cljs$lang$maxFixedArity = 3;
        G__5909.cljs$lang$applyTo = function(arglist__5910) {
          var x = cljs.core.first(arglist__5910);
          var y = cljs.core.first(cljs.core.next(arglist__5910));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5910)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5910)));
          return G__5909__delegate(x, y, z, args)
        };
        G__5909.cljs$lang$arity$variadic = G__5909__delegate;
        return G__5909
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__5911__delegate = function(p1, p2, p3, ps) {
      var ps__5900 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__5814_SHARP_) {
            return p1__5814_SHARP_.call(null, x)
          }, ps__5900)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__5815_SHARP_) {
            var or__3824__auto____5901 = p1__5815_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____5901)) {
              return or__3824__auto____5901
            }else {
              return p1__5815_SHARP_.call(null, y)
            }
          }, ps__5900)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__5816_SHARP_) {
            var or__3824__auto____5902 = p1__5816_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____5902)) {
              return or__3824__auto____5902
            }else {
              var or__3824__auto____5903 = p1__5816_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____5903)) {
                return or__3824__auto____5903
              }else {
                return p1__5816_SHARP_.call(null, z)
              }
            }
          }, ps__5900)
        };
        var spn__4 = function() {
          var G__5912__delegate = function(x, y, z, args) {
            var or__3824__auto____5904 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____5904)) {
              return or__3824__auto____5904
            }else {
              return cljs.core.some.call(null, function(p1__5817_SHARP_) {
                return cljs.core.some.call(null, p1__5817_SHARP_, args)
              }, ps__5900)
            }
          };
          var G__5912 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__5912__delegate.call(this, x, y, z, args)
          };
          G__5912.cljs$lang$maxFixedArity = 3;
          G__5912.cljs$lang$applyTo = function(arglist__5913) {
            var x = cljs.core.first(arglist__5913);
            var y = cljs.core.first(cljs.core.next(arglist__5913));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5913)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5913)));
            return G__5912__delegate(x, y, z, args)
          };
          G__5912.cljs$lang$arity$variadic = G__5912__delegate;
          return G__5912
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__5911 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__5911__delegate.call(this, p1, p2, p3, ps)
    };
    G__5911.cljs$lang$maxFixedArity = 3;
    G__5911.cljs$lang$applyTo = function(arglist__5914) {
      var p1 = cljs.core.first(arglist__5914);
      var p2 = cljs.core.first(cljs.core.next(arglist__5914));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5914)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5914)));
      return G__5911__delegate(p1, p2, p3, ps)
    };
    G__5911.cljs$lang$arity$variadic = G__5911__delegate;
    return G__5911
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____5915 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____5915)) {
        var s__5916 = temp__3974__auto____5915;
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__5916)), map.call(null, f, cljs.core.rest.call(null, s__5916)))
      }else {
        return null
      }
    })
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__5917 = cljs.core.seq.call(null, c1);
      var s2__5918 = cljs.core.seq.call(null, c2);
      if(cljs.core.truth_(function() {
        var and__3822__auto____5919 = s1__5917;
        if(cljs.core.truth_(and__3822__auto____5919)) {
          return s2__5918
        }else {
          return and__3822__auto____5919
        }
      }())) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__5917), cljs.core.first.call(null, s2__5918)), map.call(null, f, cljs.core.rest.call(null, s1__5917), cljs.core.rest.call(null, s2__5918)))
      }else {
        return null
      }
    })
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__5920 = cljs.core.seq.call(null, c1);
      var s2__5921 = cljs.core.seq.call(null, c2);
      var s3__5922 = cljs.core.seq.call(null, c3);
      if(cljs.core.truth_(function() {
        var and__3822__auto____5923 = s1__5920;
        if(cljs.core.truth_(and__3822__auto____5923)) {
          var and__3822__auto____5924 = s2__5921;
          if(cljs.core.truth_(and__3822__auto____5924)) {
            return s3__5922
          }else {
            return and__3822__auto____5924
          }
        }else {
          return and__3822__auto____5923
        }
      }())) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__5920), cljs.core.first.call(null, s2__5921), cljs.core.first.call(null, s3__5922)), map.call(null, f, cljs.core.rest.call(null, s1__5920), cljs.core.rest.call(null, s2__5921), cljs.core.rest.call(null, s3__5922)))
      }else {
        return null
      }
    })
  };
  var map__5 = function() {
    var G__5927__delegate = function(f, c1, c2, c3, colls) {
      var step__5926 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__5925 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__5925)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__5925), step.call(null, map.call(null, cljs.core.rest, ss__5925)))
          }else {
            return null
          }
        })
      };
      return map.call(null, function(p1__5866_SHARP_) {
        return cljs.core.apply.call(null, f, p1__5866_SHARP_)
      }, step__5926.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__5927 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5927__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__5927.cljs$lang$maxFixedArity = 4;
    G__5927.cljs$lang$applyTo = function(arglist__5928) {
      var f = cljs.core.first(arglist__5928);
      var c1 = cljs.core.first(cljs.core.next(arglist__5928));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5928)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5928))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5928))));
      return G__5927__delegate(f, c1, c2, c3, colls)
    };
    G__5927.cljs$lang$arity$variadic = G__5927__delegate;
    return G__5927
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____5929 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____5929)) {
        var s__5930 = temp__3974__auto____5929;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__5930), take.call(null, n - 1, cljs.core.rest.call(null, s__5930)))
      }else {
        return null
      }
    }else {
      return null
    }
  })
};
cljs.core.drop = function drop(n, coll) {
  var step__5933 = function(n, coll) {
    while(true) {
      var s__5931 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____5932 = n > 0;
        if(and__3822__auto____5932) {
          return s__5931
        }else {
          return and__3822__auto____5932
        }
      }())) {
        var G__5934 = n - 1;
        var G__5935 = cljs.core.rest.call(null, s__5931);
        n = G__5934;
        coll = G__5935;
        continue
      }else {
        return s__5931
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__5933.call(null, n, coll)
  })
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__5936 = cljs.core.seq.call(null, coll);
  var lead__5937 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(cljs.core.truth_(lead__5937)) {
      var G__5938 = cljs.core.next.call(null, s__5936);
      var G__5939 = cljs.core.next.call(null, lead__5937);
      s__5936 = G__5938;
      lead__5937 = G__5939;
      continue
    }else {
      return s__5936
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__5942 = function(pred, coll) {
    while(true) {
      var s__5940 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____5941 = s__5940;
        if(cljs.core.truth_(and__3822__auto____5941)) {
          return pred.call(null, cljs.core.first.call(null, s__5940))
        }else {
          return and__3822__auto____5941
        }
      }())) {
        var G__5943 = pred;
        var G__5944 = cljs.core.rest.call(null, s__5940);
        pred = G__5943;
        coll = G__5944;
        continue
      }else {
        return s__5940
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__5942.call(null, pred, coll)
  })
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____5945 = cljs.core.seq.call(null, coll);
    if(cljs.core.truth_(temp__3974__auto____5945)) {
      var s__5946 = temp__3974__auto____5945;
      return cljs.core.concat.call(null, s__5946, cycle.call(null, s__5946))
    }else {
      return null
    }
  })
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)])
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    })
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    })
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__5947 = cljs.core.seq.call(null, c1);
      var s2__5948 = cljs.core.seq.call(null, c2);
      if(cljs.core.truth_(function() {
        var and__3822__auto____5949 = s1__5947;
        if(cljs.core.truth_(and__3822__auto____5949)) {
          return s2__5948
        }else {
          return and__3822__auto____5949
        }
      }())) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__5947), cljs.core.cons.call(null, cljs.core.first.call(null, s2__5948), interleave.call(null, cljs.core.rest.call(null, s1__5947), cljs.core.rest.call(null, s2__5948))))
      }else {
        return null
      }
    })
  };
  var interleave__3 = function() {
    var G__5951__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__5950 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__5950)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__5950), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__5950)))
        }else {
          return null
        }
      })
    };
    var G__5951 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5951__delegate.call(this, c1, c2, colls)
    };
    G__5951.cljs$lang$maxFixedArity = 2;
    G__5951.cljs$lang$applyTo = function(arglist__5952) {
      var c1 = cljs.core.first(arglist__5952);
      var c2 = cljs.core.first(cljs.core.next(arglist__5952));
      var colls = cljs.core.rest(cljs.core.next(arglist__5952));
      return G__5951__delegate(c1, c2, colls)
    };
    G__5951.cljs$lang$arity$variadic = G__5951__delegate;
    return G__5951
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__5955 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____5953 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3971__auto____5953)) {
        var coll__5954 = temp__3971__auto____5953;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__5954), cat.call(null, cljs.core.rest.call(null, coll__5954), colls))
      }else {
        if(cljs.core.truth_(cljs.core.seq.call(null, colls))) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    })
  };
  return cat__5955.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__5956__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__5956 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__5956__delegate.call(this, f, coll, colls)
    };
    G__5956.cljs$lang$maxFixedArity = 2;
    G__5956.cljs$lang$applyTo = function(arglist__5957) {
      var f = cljs.core.first(arglist__5957);
      var coll = cljs.core.first(cljs.core.next(arglist__5957));
      var colls = cljs.core.rest(cljs.core.next(arglist__5957));
      return G__5956__delegate(f, coll, colls)
    };
    G__5956.cljs$lang$arity$variadic = G__5956__delegate;
    return G__5956
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____5958 = cljs.core.seq.call(null, coll);
    if(cljs.core.truth_(temp__3974__auto____5958)) {
      var s__5959 = temp__3974__auto____5958;
      var f__5960 = cljs.core.first.call(null, s__5959);
      var r__5961 = cljs.core.rest.call(null, s__5959);
      if(cljs.core.truth_(pred.call(null, f__5960))) {
        return cljs.core.cons.call(null, f__5960, filter.call(null, pred, r__5961))
      }else {
        return filter.call(null, pred, r__5961)
      }
    }else {
      return null
    }
  })
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__5963 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    })
  };
  return walk__5963.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__5962_SHARP_) {
    return cljs.core.not.call(null, cljs.core.sequential_QMARK_.call(null, p1__5962_SHARP_))
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__5964__5965 = to;
    if(G__5964__5965 != null) {
      if(function() {
        var or__3824__auto____5966 = G__5964__5965.cljs$lang$protocol_mask$partition0$ & 2147483648;
        if(or__3824__auto____5966) {
          return or__3824__auto____5966
        }else {
          return G__5964__5965.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__5964__5965.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__5964__5965)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__5964__5965)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.fromArray([])), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.fromArray([]), cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.fromArray([]), cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__5967__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.fromArray([]), cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__5967 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__5967__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__5967.cljs$lang$maxFixedArity = 4;
    G__5967.cljs$lang$applyTo = function(arglist__5968) {
      var f = cljs.core.first(arglist__5968);
      var c1 = cljs.core.first(cljs.core.next(arglist__5968));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5968)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5968))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__5968))));
      return G__5967__delegate(f, c1, c2, c3, colls)
    };
    G__5967.cljs$lang$arity$variadic = G__5967__delegate;
    return G__5967
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.fromArray([])), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____5969 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____5969)) {
        var s__5970 = temp__3974__auto____5969;
        var p__5971 = cljs.core.take.call(null, n, s__5970);
        if(n === cljs.core.count.call(null, p__5971)) {
          return cljs.core.cons.call(null, p__5971, partition.call(null, n, step, cljs.core.drop.call(null, step, s__5970)))
        }else {
          return null
        }
      }else {
        return null
      }
    })
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____5972 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____5972)) {
        var s__5973 = temp__3974__auto____5972;
        var p__5974 = cljs.core.take.call(null, n, s__5973);
        if(n === cljs.core.count.call(null, p__5974)) {
          return cljs.core.cons.call(null, p__5974, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__5973)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__5974, pad)))
        }
      }else {
        return null
      }
    })
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__5975 = cljs.core.lookup_sentinel;
    var m__5976 = m;
    var ks__5977 = cljs.core.seq.call(null, ks);
    while(true) {
      if(cljs.core.truth_(ks__5977)) {
        var m__5978 = cljs.core.get.call(null, m__5976, cljs.core.first.call(null, ks__5977), sentinel__5975);
        if(sentinel__5975 === m__5978) {
          return not_found
        }else {
          var G__5979 = sentinel__5975;
          var G__5980 = m__5978;
          var G__5981 = cljs.core.next.call(null, ks__5977);
          sentinel__5975 = G__5979;
          m__5976 = G__5980;
          ks__5977 = G__5981;
          continue
        }
      }else {
        return m__5976
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__5982, v) {
  var vec__5983__5984 = p__5982;
  var k__5985 = cljs.core.nth.call(null, vec__5983__5984, 0, null);
  var ks__5986 = cljs.core.nthnext.call(null, vec__5983__5984, 1);
  if(cljs.core.truth_(ks__5986)) {
    return cljs.core.assoc.call(null, m, k__5985, assoc_in.call(null, cljs.core.get.call(null, m, k__5985), ks__5986, v))
  }else {
    return cljs.core.assoc.call(null, m, k__5985, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__5987, f, args) {
    var vec__5988__5989 = p__5987;
    var k__5990 = cljs.core.nth.call(null, vec__5988__5989, 0, null);
    var ks__5991 = cljs.core.nthnext.call(null, vec__5988__5989, 1);
    if(cljs.core.truth_(ks__5991)) {
      return cljs.core.assoc.call(null, m, k__5990, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k__5990), ks__5991, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__5990, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k__5990), args))
    }
  };
  var update_in = function(m, p__5987, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__5987, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__5992) {
    var m = cljs.core.first(arglist__5992);
    var p__5987 = cljs.core.first(cljs.core.next(arglist__5992));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__5992)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__5992)));
    return update_in__delegate(m, p__5987, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 16200095
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$ = true;
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__5997 = this;
  var h__364__auto____5998 = this__5997.__hash;
  if(h__364__auto____5998 != null) {
    return h__364__auto____5998
  }else {
    var h__364__auto____5999 = cljs.core.hash_coll.call(null, coll);
    this__5997.__hash = h__364__auto____5999;
    return h__364__auto____5999
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$ = true;
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6000 = this;
  return cljs.core._nth.call(null, coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6001 = this;
  return cljs.core._nth.call(null, coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$ = true;
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__6002 = this;
  var new_array__6003 = cljs.core.aclone.call(null, this__6002.array);
  new_array__6003[k] = v;
  return new cljs.core.Vector(this__6002.meta, new_array__6003, null)
};
cljs.core.Vector.prototype.cljs$core$IFn$ = true;
cljs.core.Vector.prototype.call = function() {
  var G__6032 = null;
  var G__6032__2 = function(tsym5995, k) {
    var this__6004 = this;
    var tsym5995__6005 = this;
    var coll__6006 = tsym5995__6005;
    return cljs.core._lookup.call(null, coll__6006, k)
  };
  var G__6032__3 = function(tsym5996, k, not_found) {
    var this__6007 = this;
    var tsym5996__6008 = this;
    var coll__6009 = tsym5996__6008;
    return cljs.core._lookup.call(null, coll__6009, k, not_found)
  };
  G__6032 = function(tsym5996, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6032__2.call(this, tsym5996, k);
      case 3:
        return G__6032__3.call(this, tsym5996, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6032
}();
cljs.core.Vector.prototype.apply = function(tsym5993, args5994) {
  return tsym5993.call.apply(tsym5993, [tsym5993].concat(cljs.core.aclone.call(null, args5994)))
};
cljs.core.Vector.prototype.cljs$core$ISequential$ = true;
cljs.core.Vector.prototype.cljs$core$ICollection$ = true;
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6010 = this;
  var new_array__6011 = cljs.core.aclone.call(null, this__6010.array);
  new_array__6011.push(o);
  return new cljs.core.Vector(this__6010.meta, new_array__6011, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__6012 = this;
  var this$__6013 = this;
  return cljs.core.pr_str.call(null, this$__6013)
};
cljs.core.Vector.prototype.cljs$core$IReduce$ = true;
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__6014 = this;
  return cljs.core.ci_reduce.call(null, this__6014.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__6015 = this;
  return cljs.core.ci_reduce.call(null, this__6015.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$ = true;
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6016 = this;
  if(this__6016.array.length > 0) {
    var vector_seq__6017 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__6016.array.length) {
          return cljs.core.cons.call(null, this__6016.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      })
    };
    return vector_seq__6017.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$ = true;
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6018 = this;
  return this__6018.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$ = true;
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__6019 = this;
  var count__6020 = this__6019.array.length;
  if(count__6020 > 0) {
    return this__6019.array[count__6020 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__6021 = this;
  if(this__6021.array.length > 0) {
    var new_array__6022 = cljs.core.aclone.call(null, this__6021.array);
    new_array__6022.pop();
    return new cljs.core.Vector(this__6021.meta, new_array__6022, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$ = true;
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__6023 = this;
  return cljs.core._assoc.call(null, coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$ = true;
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6024 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$ = true;
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6025 = this;
  return new cljs.core.Vector(meta, this__6025.array, this__6025.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$ = true;
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6026 = this;
  return this__6026.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$ = true;
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__6028 = this;
  if(function() {
    var and__3822__auto____6029 = 0 <= n;
    if(and__3822__auto____6029) {
      return n < this__6028.array.length
    }else {
      return and__3822__auto____6029
    }
  }()) {
    return this__6028.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__6030 = this;
  if(function() {
    var and__3822__auto____6031 = 0 <= n;
    if(and__3822__auto____6031) {
      return n < this__6030.array.length
    }else {
      return and__3822__auto____6031
    }
  }()) {
    return this__6030.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6027 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__6027.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__455__auto__) {
  return cljs.core.list.call(null, "cljs.core.VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr))
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__6033 = pv.cnt;
  if(cnt__6033 < 32) {
    return 0
  }else {
    return cnt__6033 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__6034 = level;
  var ret__6035 = node;
  while(true) {
    if(ll__6034 === 0) {
      return ret__6035
    }else {
      var embed__6036 = ret__6035;
      var r__6037 = cljs.core.pv_fresh_node.call(null, edit);
      var ___6038 = cljs.core.pv_aset.call(null, r__6037, 0, embed__6036);
      var G__6039 = ll__6034 - 5;
      var G__6040 = r__6037;
      ll__6034 = G__6039;
      ret__6035 = G__6040;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__6041 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__6042 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__6041, subidx__6042, tailnode);
    return ret__6041
  }else {
    var temp__3971__auto____6043 = cljs.core.pv_aget.call(null, parent, subidx__6042);
    if(cljs.core.truth_(temp__3971__auto____6043)) {
      var child__6044 = temp__3971__auto____6043;
      var node_to_insert__6045 = push_tail.call(null, pv, level - 5, child__6044, tailnode);
      cljs.core.pv_aset.call(null, ret__6041, subidx__6042, node_to_insert__6045);
      return ret__6041
    }else {
      var node_to_insert__6046 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__6041, subidx__6042, node_to_insert__6046);
      return ret__6041
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____6047 = 0 <= i;
    if(and__3822__auto____6047) {
      return i < pv.cnt
    }else {
      return and__3822__auto____6047
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__6048 = pv.root;
      var level__6049 = pv.shift;
      while(true) {
        if(level__6049 > 0) {
          var G__6050 = cljs.core.pv_aget.call(null, node__6048, i >>> level__6049 & 31);
          var G__6051 = level__6049 - 5;
          node__6048 = G__6050;
          level__6049 = G__6051;
          continue
        }else {
          return node__6048.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__6052 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__6052, i & 31, val);
    return ret__6052
  }else {
    var subidx__6053 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__6052, subidx__6053, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__6053), i, val));
    return ret__6052
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__6054 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__6055 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__6054));
    if(function() {
      var and__3822__auto____6056 = new_child__6055 == null;
      if(and__3822__auto____6056) {
        return subidx__6054 === 0
      }else {
        return and__3822__auto____6056
      }
    }()) {
      return null
    }else {
      var ret__6057 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__6057, subidx__6054, new_child__6055);
      return ret__6057
    }
  }else {
    if(subidx__6054 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__6058 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__6058, subidx__6054, null);
        return ret__6058
      }else {
        return null
      }
    }
  }
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.vector_seq = function vector_seq(v, offset) {
  var c__6059 = cljs.core._count.call(null, v);
  if(c__6059 > 0) {
    if(void 0 === cljs.core.t6060) {
      cljs.core.t6060 = function(c, offset, v, vector_seq, __meta__389__auto__) {
        this.c = c;
        this.offset = offset;
        this.v = v;
        this.vector_seq = vector_seq;
        this.__meta__389__auto__ = __meta__389__auto__;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 282263648
      };
      cljs.core.t6060.cljs$lang$type = true;
      cljs.core.t6060.cljs$lang$ctorPrSeq = function(this__454__auto__) {
        return cljs.core.list.call(null, "cljs.core.t6060")
      };
      cljs.core.t6060.prototype.cljs$core$ISeqable$ = true;
      cljs.core.t6060.prototype.cljs$core$ISeqable$_seq$arity$1 = function(vseq) {
        var this__6061 = this;
        return vseq
      };
      cljs.core.t6060.prototype.cljs$core$ISeq$ = true;
      cljs.core.t6060.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
        var this__6062 = this;
        return cljs.core._nth.call(null, this__6062.v, this__6062.offset)
      };
      cljs.core.t6060.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
        var this__6063 = this;
        var offset__6064 = this__6063.offset + 1;
        if(offset__6064 < this__6063.c) {
          return this__6063.vector_seq.call(null, this__6063.v, offset__6064)
        }else {
          return cljs.core.List.EMPTY
        }
      };
      cljs.core.t6060.prototype.cljs$core$ASeq$ = true;
      cljs.core.t6060.prototype.cljs$core$IEquiv$ = true;
      cljs.core.t6060.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(vseq, other) {
        var this__6065 = this;
        return cljs.core.equiv_sequential.call(null, vseq, other)
      };
      cljs.core.t6060.prototype.cljs$core$ISequential$ = true;
      cljs.core.t6060.prototype.cljs$core$IPrintable$ = true;
      cljs.core.t6060.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(vseq, opts) {
        var this__6066 = this;
        return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, vseq)
      };
      cljs.core.t6060.prototype.cljs$core$IMeta$ = true;
      cljs.core.t6060.prototype.cljs$core$IMeta$_meta$arity$1 = function(___390__auto__) {
        var this__6067 = this;
        return this__6067.__meta__389__auto__
      };
      cljs.core.t6060.prototype.cljs$core$IWithMeta$ = true;
      cljs.core.t6060.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___390__auto__, __meta__389__auto__) {
        var this__6068 = this;
        return new cljs.core.t6060(this__6068.c, this__6068.offset, this__6068.v, this__6068.vector_seq, __meta__389__auto__)
      };
      cljs.core.t6060
    }else {
    }
    return new cljs.core.t6060(c__6059, offset, v, vector_seq, null)
  }else {
    return null
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2164209055
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__6073 = this;
  return new cljs.core.TransientVector(this__6073.cnt, this__6073.shift, cljs.core.tv_editable_root.call(null, this__6073.root), cljs.core.tv_editable_tail.call(null, this__6073.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6074 = this;
  var h__364__auto____6075 = this__6074.__hash;
  if(h__364__auto____6075 != null) {
    return h__364__auto____6075
  }else {
    var h__364__auto____6076 = cljs.core.hash_coll.call(null, coll);
    this__6074.__hash = h__364__auto____6076;
    return h__364__auto____6076
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$ = true;
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6077 = this;
  return cljs.core._nth.call(null, coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6078 = this;
  return cljs.core._nth.call(null, coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__6079 = this;
  if(function() {
    var and__3822__auto____6080 = 0 <= k;
    if(and__3822__auto____6080) {
      return k < this__6079.cnt
    }else {
      return and__3822__auto____6080
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__6081 = cljs.core.aclone.call(null, this__6079.tail);
      new_tail__6081[k & 31] = v;
      return new cljs.core.PersistentVector(this__6079.meta, this__6079.cnt, this__6079.shift, this__6079.root, new_tail__6081, null)
    }else {
      return new cljs.core.PersistentVector(this__6079.meta, this__6079.cnt, this__6079.shift, cljs.core.do_assoc.call(null, coll, this__6079.shift, this__6079.root, k, v), this__6079.tail, null)
    }
  }else {
    if(k === this__6079.cnt) {
      return cljs.core._conj.call(null, coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__6079.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$ = true;
cljs.core.PersistentVector.prototype.call = function() {
  var G__6126 = null;
  var G__6126__2 = function(tsym6071, k) {
    var this__6082 = this;
    var tsym6071__6083 = this;
    var coll__6084 = tsym6071__6083;
    return cljs.core._lookup.call(null, coll__6084, k)
  };
  var G__6126__3 = function(tsym6072, k, not_found) {
    var this__6085 = this;
    var tsym6072__6086 = this;
    var coll__6087 = tsym6072__6086;
    return cljs.core._lookup.call(null, coll__6087, k, not_found)
  };
  G__6126 = function(tsym6072, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6126__2.call(this, tsym6072, k);
      case 3:
        return G__6126__3.call(this, tsym6072, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6126
}();
cljs.core.PersistentVector.prototype.apply = function(tsym6069, args6070) {
  return tsym6069.call.apply(tsym6069, [tsym6069].concat(cljs.core.aclone.call(null, args6070)))
};
cljs.core.PersistentVector.prototype.cljs$core$ISequential$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__6088 = this;
  var step_init__6089 = [0, init];
  var i__6090 = 0;
  while(true) {
    if(i__6090 < this__6088.cnt) {
      var arr__6091 = cljs.core.array_for.call(null, v, i__6090);
      var len__6092 = arr__6091.length;
      var init__6096 = function() {
        var j__6093 = 0;
        var init__6094 = step_init__6089[1];
        while(true) {
          if(j__6093 < len__6092) {
            var init__6095 = f.call(null, init__6094, j__6093 + i__6090, arr__6091[j__6093]);
            if(cljs.core.reduced_QMARK_.call(null, init__6095)) {
              return init__6095
            }else {
              var G__6127 = j__6093 + 1;
              var G__6128 = init__6095;
              j__6093 = G__6127;
              init__6094 = G__6128;
              continue
            }
          }else {
            step_init__6089[0] = len__6092;
            step_init__6089[1] = init__6094;
            return init__6094
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__6096)) {
        return cljs.core.deref.call(null, init__6096)
      }else {
        var G__6129 = i__6090 + step_init__6089[0];
        i__6090 = G__6129;
        continue
      }
    }else {
      return step_init__6089[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6097 = this;
  if(this__6097.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__6098 = cljs.core.aclone.call(null, this__6097.tail);
    new_tail__6098.push(o);
    return new cljs.core.PersistentVector(this__6097.meta, this__6097.cnt + 1, this__6097.shift, this__6097.root, new_tail__6098, null)
  }else {
    var root_overflow_QMARK___6099 = this__6097.cnt >>> 5 > 1 << this__6097.shift;
    var new_shift__6100 = root_overflow_QMARK___6099 ? this__6097.shift + 5 : this__6097.shift;
    var new_root__6102 = root_overflow_QMARK___6099 ? function() {
      var n_r__6101 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__6101, 0, this__6097.root);
      cljs.core.pv_aset.call(null, n_r__6101, 1, cljs.core.new_path.call(null, null, this__6097.shift, new cljs.core.VectorNode(null, this__6097.tail)));
      return n_r__6101
    }() : cljs.core.push_tail.call(null, coll, this__6097.shift, this__6097.root, new cljs.core.VectorNode(null, this__6097.tail));
    return new cljs.core.PersistentVector(this__6097.meta, this__6097.cnt + 1, new_shift__6100, new_root__6102, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__6103 = this;
  return cljs.core._nth.call(null, coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__6104 = this;
  return cljs.core._nth.call(null, coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__6105 = this;
  var this$__6106 = this;
  return cljs.core.pr_str.call(null, this$__6106)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__6107 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__6108 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6109 = this;
  return cljs.core.vector_seq.call(null, coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6110 = this;
  return this__6110.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__6111 = this;
  if(this__6111.cnt > 0) {
    return cljs.core._nth.call(null, coll, this__6111.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__6112 = this;
  if(this__6112.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__6112.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__6112.meta)
    }else {
      if(1 < this__6112.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__6112.meta, this__6112.cnt - 1, this__6112.shift, this__6112.root, this__6112.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__6113 = cljs.core.array_for.call(null, coll, this__6112.cnt - 2);
          var nr__6114 = cljs.core.pop_tail.call(null, coll, this__6112.shift, this__6112.root);
          var new_root__6115 = nr__6114 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__6114;
          var cnt_1__6116 = this__6112.cnt - 1;
          if(function() {
            var and__3822__auto____6117 = 5 < this__6112.shift;
            if(and__3822__auto____6117) {
              return cljs.core.pv_aget.call(null, new_root__6115, 1) == null
            }else {
              return and__3822__auto____6117
            }
          }()) {
            return new cljs.core.PersistentVector(this__6112.meta, cnt_1__6116, this__6112.shift - 5, cljs.core.pv_aget.call(null, new_root__6115, 0), new_tail__6113, null)
          }else {
            return new cljs.core.PersistentVector(this__6112.meta, cnt_1__6116, this__6112.shift, new_root__6115, new_tail__6113, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__6119 = this;
  return cljs.core._assoc.call(null, coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6120 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6121 = this;
  return new cljs.core.PersistentVector(meta, this__6121.cnt, this__6121.shift, this__6121.root, this__6121.tail, this__6121.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6122 = this;
  return this__6122.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__6123 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__6124 = this;
  if(function() {
    var and__3822__auto____6125 = 0 <= n;
    if(and__3822__auto____6125) {
      return n < this__6124.cnt
    }else {
      return and__3822__auto____6125
    }
  }()) {
    return cljs.core._nth.call(null, coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6118 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__6118.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs) {
  var xs__6130 = cljs.core.seq.call(null, xs);
  var out__6131 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    if(cljs.core.truth_(xs__6130)) {
      var G__6132 = cljs.core.next.call(null, xs__6130);
      var G__6133 = cljs.core.conj_BANG_.call(null, out__6131, cljs.core.first.call(null, xs__6130));
      xs__6130 = G__6132;
      out__6131 = G__6133;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__6131)
    }
    break
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.PersistentVector.EMPTY, coll)
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__6134) {
    var args = cljs.core.seq(arglist__6134);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 16200095
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$ = true;
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6139 = this;
  var h__364__auto____6140 = this__6139.__hash;
  if(h__364__auto____6140 != null) {
    return h__364__auto____6140
  }else {
    var h__364__auto____6141 = cljs.core.hash_coll.call(null, coll);
    this__6139.__hash = h__364__auto____6141;
    return h__364__auto____6141
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$ = true;
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6142 = this;
  return cljs.core._nth.call(null, coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6143 = this;
  return cljs.core._nth.call(null, coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$ = true;
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__6144 = this;
  var v_pos__6145 = this__6144.start + key;
  return new cljs.core.Subvec(this__6144.meta, cljs.core._assoc.call(null, this__6144.v, v_pos__6145, val), this__6144.start, this__6144.end > v_pos__6145 + 1 ? this__6144.end : v_pos__6145 + 1, null)
};
cljs.core.Subvec.prototype.cljs$core$IFn$ = true;
cljs.core.Subvec.prototype.call = function() {
  var G__6169 = null;
  var G__6169__2 = function(tsym6137, k) {
    var this__6146 = this;
    var tsym6137__6147 = this;
    var coll__6148 = tsym6137__6147;
    return cljs.core._lookup.call(null, coll__6148, k)
  };
  var G__6169__3 = function(tsym6138, k, not_found) {
    var this__6149 = this;
    var tsym6138__6150 = this;
    var coll__6151 = tsym6138__6150;
    return cljs.core._lookup.call(null, coll__6151, k, not_found)
  };
  G__6169 = function(tsym6138, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6169__2.call(this, tsym6138, k);
      case 3:
        return G__6169__3.call(this, tsym6138, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6169
}();
cljs.core.Subvec.prototype.apply = function(tsym6135, args6136) {
  return tsym6135.call.apply(tsym6135, [tsym6135].concat(cljs.core.aclone.call(null, args6136)))
};
cljs.core.Subvec.prototype.cljs$core$ISequential$ = true;
cljs.core.Subvec.prototype.cljs$core$ICollection$ = true;
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6152 = this;
  return new cljs.core.Subvec(this__6152.meta, cljs.core._assoc_n.call(null, this__6152.v, this__6152.end, o), this__6152.start, this__6152.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__6153 = this;
  var this$__6154 = this;
  return cljs.core.pr_str.call(null, this$__6154)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$ = true;
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__6155 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__6156 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$ = true;
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6157 = this;
  var subvec_seq__6158 = function subvec_seq(i) {
    if(i === this__6157.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__6157.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }))
    }
  };
  return subvec_seq__6158.call(null, this__6157.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$ = true;
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6159 = this;
  return this__6159.end - this__6159.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$ = true;
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__6160 = this;
  return cljs.core._nth.call(null, this__6160.v, this__6160.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__6161 = this;
  if(this__6161.start === this__6161.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__6161.meta, this__6161.v, this__6161.start, this__6161.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$ = true;
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__6162 = this;
  return cljs.core._assoc.call(null, coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$ = true;
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6163 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$ = true;
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6164 = this;
  return new cljs.core.Subvec(meta, this__6164.v, this__6164.start, this__6164.end, this__6164.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$ = true;
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6165 = this;
  return this__6165.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$ = true;
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__6167 = this;
  return cljs.core._nth.call(null, this__6167.v, this__6167.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__6168 = this;
  return cljs.core._nth.call(null, this__6168.v, this__6168.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6166 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__6166.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr))
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone.call(null, node.arr))
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__6170 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__6170, 0, tl.length);
  return ret__6170
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__6171 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__6172 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__6171, subidx__6172, level === 5 ? tail_node : function() {
    var child__6173 = cljs.core.pv_aget.call(null, ret__6171, subidx__6172);
    if(child__6173 != null) {
      return tv_push_tail.call(null, tv, level - 5, child__6173, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__6171
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__6174 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__6175 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__6176 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__6174, subidx__6175));
    if(function() {
      var and__3822__auto____6177 = new_child__6176 == null;
      if(and__3822__auto____6177) {
        return subidx__6175 === 0
      }else {
        return and__3822__auto____6177
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__6174, subidx__6175, new_child__6176);
      return node__6174
    }
  }else {
    if(subidx__6175 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__6174, subidx__6175, null);
        return node__6174
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____6178 = 0 <= i;
    if(and__3822__auto____6178) {
      return i < tv.cnt
    }else {
      return and__3822__auto____6178
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__6179 = tv.root;
      var node__6180 = root__6179;
      var level__6181 = tv.shift;
      while(true) {
        if(level__6181 > 0) {
          var G__6182 = cljs.core.tv_ensure_editable.call(null, root__6179.edit, cljs.core.pv_aget.call(null, node__6180, i >>> level__6181 & 31));
          var G__6183 = level__6181 - 5;
          node__6180 = G__6182;
          level__6181 = G__6183;
          continue
        }else {
          return node__6180.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 147;
  this.cljs$lang$protocol_mask$partition1$ = 11
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.TransientVector")
};
cljs.core.TransientVector.prototype.cljs$core$IFn$ = true;
cljs.core.TransientVector.prototype.call = function() {
  var G__6221 = null;
  var G__6221__2 = function(tsym6186, k) {
    var this__6188 = this;
    var tsym6186__6189 = this;
    var coll__6190 = tsym6186__6189;
    return cljs.core._lookup.call(null, coll__6190, k)
  };
  var G__6221__3 = function(tsym6187, k, not_found) {
    var this__6191 = this;
    var tsym6187__6192 = this;
    var coll__6193 = tsym6187__6192;
    return cljs.core._lookup.call(null, coll__6193, k, not_found)
  };
  G__6221 = function(tsym6187, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6221__2.call(this, tsym6187, k);
      case 3:
        return G__6221__3.call(this, tsym6187, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6221
}();
cljs.core.TransientVector.prototype.apply = function(tsym6184, args6185) {
  return tsym6184.call.apply(tsym6184, [tsym6184].concat(cljs.core.aclone.call(null, args6185)))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$ = true;
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6194 = this;
  return cljs.core._nth.call(null, coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6195 = this;
  return cljs.core._nth.call(null, coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$ = true;
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__6196 = this;
  if(cljs.core.truth_(this__6196.root.edit)) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__6197 = this;
  if(function() {
    var and__3822__auto____6198 = 0 <= n;
    if(and__3822__auto____6198) {
      return n < this__6197.cnt
    }else {
      return and__3822__auto____6198
    }
  }()) {
    return cljs.core._nth.call(null, coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$ = true;
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6199 = this;
  if(cljs.core.truth_(this__6199.root.edit)) {
    return this__6199.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$ = true;
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__6200 = this;
  if(cljs.core.truth_(this__6200.root.edit)) {
    if(function() {
      var and__3822__auto____6201 = 0 <= n;
      if(and__3822__auto____6201) {
        return n < this__6200.cnt
      }else {
        return and__3822__auto____6201
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__6200.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__6204 = function go(level, node) {
          var node__6202 = cljs.core.tv_ensure_editable.call(null, this__6200.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__6202, n & 31, val);
            return node__6202
          }else {
            var subidx__6203 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__6202, subidx__6203, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__6202, subidx__6203)));
            return node__6202
          }
        }.call(null, this__6200.shift, this__6200.root);
        this__6200.root = new_root__6204;
        return tcoll
      }
    }else {
      if(n === this__6200.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__6200.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__6205 = this;
  if(cljs.core.truth_(this__6205.root.edit)) {
    if(this__6205.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__6205.cnt) {
        this__6205.cnt = 0;
        return tcoll
      }else {
        if((this__6205.cnt - 1 & 31) > 0) {
          this__6205.cnt = this__6205.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__6206 = cljs.core.editable_array_for.call(null, tcoll, this__6205.cnt - 2);
            var new_root__6208 = function() {
              var nr__6207 = cljs.core.tv_pop_tail.call(null, tcoll, this__6205.shift, this__6205.root);
              if(nr__6207 != null) {
                return nr__6207
              }else {
                return new cljs.core.VectorNode(this__6205.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____6209 = 5 < this__6205.shift;
              if(and__3822__auto____6209) {
                return cljs.core.pv_aget.call(null, new_root__6208, 1) == null
              }else {
                return and__3822__auto____6209
              }
            }()) {
              var new_root__6210 = cljs.core.tv_ensure_editable.call(null, this__6205.root.edit, cljs.core.pv_aget.call(null, new_root__6208, 0));
              this__6205.root = new_root__6210;
              this__6205.shift = this__6205.shift - 5;
              this__6205.cnt = this__6205.cnt - 1;
              this__6205.tail = new_tail__6206;
              return tcoll
            }else {
              this__6205.root = new_root__6208;
              this__6205.cnt = this__6205.cnt - 1;
              this__6205.tail = new_tail__6206;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$ = true;
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__6211 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$ = true;
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__6212 = this;
  if(cljs.core.truth_(this__6212.root.edit)) {
    if(this__6212.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__6212.tail[this__6212.cnt & 31] = o;
      this__6212.cnt = this__6212.cnt + 1;
      return tcoll
    }else {
      var tail_node__6213 = new cljs.core.VectorNode(this__6212.root.edit, this__6212.tail);
      var new_tail__6214 = cljs.core.make_array.call(null, 32);
      new_tail__6214[0] = o;
      this__6212.tail = new_tail__6214;
      if(this__6212.cnt >>> 5 > 1 << this__6212.shift) {
        var new_root_array__6215 = cljs.core.make_array.call(null, 32);
        var new_shift__6216 = this__6212.shift + 5;
        new_root_array__6215[0] = this__6212.root;
        new_root_array__6215[1] = cljs.core.new_path.call(null, this__6212.root.edit, this__6212.shift, tail_node__6213);
        this__6212.root = new cljs.core.VectorNode(this__6212.root.edit, new_root_array__6215);
        this__6212.shift = new_shift__6216;
        this__6212.cnt = this__6212.cnt + 1;
        return tcoll
      }else {
        var new_root__6217 = cljs.core.tv_push_tail.call(null, tcoll, this__6212.shift, this__6212.root, tail_node__6213);
        this__6212.root = new_root__6217;
        this__6212.cnt = this__6212.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__6218 = this;
  if(cljs.core.truth_(this__6218.root.edit)) {
    this__6218.root.edit = null;
    var len__6219 = this__6218.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__6220 = cljs.core.make_array.call(null, len__6219);
    cljs.core.array_copy.call(null, this__6218.tail, 0, trimmed_tail__6220, 0, len__6219);
    return new cljs.core.PersistentVector(null, this__6218.cnt, this__6218.shift, this__6218.root, trimmed_tail__6220, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15925324
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6222 = this;
  var h__364__auto____6223 = this__6222.__hash;
  if(h__364__auto____6223 != null) {
    return h__364__auto____6223
  }else {
    var h__364__auto____6224 = cljs.core.hash_coll.call(null, coll);
    this__6222.__hash = h__364__auto____6224;
    return h__364__auto____6224
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISequential$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6225 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__6226 = this;
  var this$__6227 = this;
  return cljs.core.pr_str.call(null, this$__6227)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6228 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__6229 = this;
  return cljs.core._first.call(null, this__6229.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__6230 = this;
  var temp__3971__auto____6231 = cljs.core.next.call(null, this__6230.front);
  if(cljs.core.truth_(temp__3971__auto____6231)) {
    var f1__6232 = temp__3971__auto____6231;
    return new cljs.core.PersistentQueueSeq(this__6230.meta, f1__6232, this__6230.rear, null)
  }else {
    if(this__6230.rear == null) {
      return cljs.core._empty.call(null, coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__6230.meta, this__6230.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6233 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6234 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__6234.front, this__6234.rear, this__6234.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6235 = this;
  return this__6235.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6236 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__6236.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15929422
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6237 = this;
  var h__364__auto____6238 = this__6237.__hash;
  if(h__364__auto____6238 != null) {
    return h__364__auto____6238
  }else {
    var h__364__auto____6239 = cljs.core.hash_coll.call(null, coll);
    this__6237.__hash = h__364__auto____6239;
    return h__364__auto____6239
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISequential$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6240 = this;
  if(cljs.core.truth_(this__6240.front)) {
    return new cljs.core.PersistentQueue(this__6240.meta, this__6240.count + 1, this__6240.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____6241 = this__6240.rear;
      if(cljs.core.truth_(or__3824__auto____6241)) {
        return or__3824__auto____6241
      }else {
        return cljs.core.PersistentVector.fromArray([])
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__6240.meta, this__6240.count + 1, cljs.core.conj.call(null, this__6240.front, o), cljs.core.PersistentVector.fromArray([]), null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__6242 = this;
  var this$__6243 = this;
  return cljs.core.pr_str.call(null, this$__6243)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6244 = this;
  var rear__6245 = cljs.core.seq.call(null, this__6244.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____6246 = this__6244.front;
    if(cljs.core.truth_(or__3824__auto____6246)) {
      return or__3824__auto____6246
    }else {
      return rear__6245
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__6244.front, cljs.core.seq.call(null, rear__6245), null, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6247 = this;
  return this__6247.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__6248 = this;
  return cljs.core._first.call(null, this__6248.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__6249 = this;
  if(cljs.core.truth_(this__6249.front)) {
    var temp__3971__auto____6250 = cljs.core.next.call(null, this__6249.front);
    if(cljs.core.truth_(temp__3971__auto____6250)) {
      var f1__6251 = temp__3971__auto____6250;
      return new cljs.core.PersistentQueue(this__6249.meta, this__6249.count - 1, f1__6251, this__6249.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__6249.meta, this__6249.count - 1, cljs.core.seq.call(null, this__6249.rear), cljs.core.PersistentVector.fromArray([]), null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__6252 = this;
  return cljs.core.first.call(null, this__6252.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__6253 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6254 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6255 = this;
  return new cljs.core.PersistentQueue(meta, this__6255.count, this__6255.front, this__6255.rear, this__6255.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6256 = this;
  return this__6256.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6257 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.fromArray([]), 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1048576
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$ = true;
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__6258 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__6259 = array.length;
  var i__6260 = 0;
  while(true) {
    if(i__6260 < len__6259) {
      if(cljs.core._EQ_.call(null, k, array[i__6260])) {
        return i__6260
      }else {
        var G__6261 = i__6260 + incr;
        i__6260 = G__6261;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_contains_key_QMARK_ = function() {
  var obj_map_contains_key_QMARK_ = null;
  var obj_map_contains_key_QMARK___2 = function(k, strobj) {
    return obj_map_contains_key_QMARK_.call(null, k, strobj, true, false)
  };
  var obj_map_contains_key_QMARK___4 = function(k, strobj, true_val, false_val) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____6262 = goog.isString.call(null, k);
      if(cljs.core.truth_(and__3822__auto____6262)) {
        return strobj.hasOwnProperty(k)
      }else {
        return and__3822__auto____6262
      }
    }())) {
      return true_val
    }else {
      return false_val
    }
  };
  obj_map_contains_key_QMARK_ = function(k, strobj, true_val, false_val) {
    switch(arguments.length) {
      case 2:
        return obj_map_contains_key_QMARK___2.call(this, k, strobj);
      case 4:
        return obj_map_contains_key_QMARK___4.call(this, k, strobj, true_val, false_val)
    }
    throw"Invalid arity: " + arguments.length;
  };
  obj_map_contains_key_QMARK_.cljs$lang$arity$2 = obj_map_contains_key_QMARK___2;
  obj_map_contains_key_QMARK_.cljs$lang$arity$4 = obj_map_contains_key_QMARK___4;
  return obj_map_contains_key_QMARK_
}();
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__6263 = cljs.core.hash.call(null, a);
  var b__6264 = cljs.core.hash.call(null, b);
  if(a__6263 < b__6264) {
    return-1
  }else {
    if(a__6263 > b__6264) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__6266 = m.keys;
  var len__6267 = ks__6266.length;
  var so__6268 = m.strobj;
  var out__6269 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__6270 = 0;
  var out__6271 = cljs.core.transient$.call(null, out__6269);
  while(true) {
    if(i__6270 < len__6267) {
      var k__6272 = ks__6266[i__6270];
      var G__6273 = i__6270 + 1;
      var G__6274 = cljs.core.assoc_BANG_.call(null, out__6271, k__6272, so__6268[k__6272]);
      i__6270 = G__6273;
      out__6271 = G__6274;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__6271, k, v))
    }
    break
  }
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155021199
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$ = true;
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__6279 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$ = true;
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6280 = this;
  var h__364__auto____6281 = this__6280.__hash;
  if(h__364__auto____6281 != null) {
    return h__364__auto____6281
  }else {
    var h__364__auto____6282 = cljs.core.hash_imap.call(null, coll);
    this__6280.__hash = h__364__auto____6282;
    return h__364__auto____6282
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$ = true;
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6283 = this;
  return cljs.core._lookup.call(null, coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6284 = this;
  return cljs.core.obj_map_contains_key_QMARK_.call(null, k, this__6284.strobj, this__6284.strobj[k], not_found)
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$ = true;
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__6285 = this;
  if(cljs.core.truth_(goog.isString.call(null, k))) {
    var overwrite_QMARK___6286 = this__6285.strobj.hasOwnProperty(k);
    if(cljs.core.truth_(overwrite_QMARK___6286)) {
      var new_strobj__6287 = goog.object.clone.call(null, this__6285.strobj);
      new_strobj__6287[k] = v;
      return new cljs.core.ObjMap(this__6285.meta, this__6285.keys, new_strobj__6287, this__6285.update_count + 1, null)
    }else {
      if(this__6285.update_count < cljs.core.ObjMap.HASHMAP_THRESHOLD) {
        var new_strobj__6288 = goog.object.clone.call(null, this__6285.strobj);
        var new_keys__6289 = cljs.core.aclone.call(null, this__6285.keys);
        new_strobj__6288[k] = v;
        new_keys__6289.push(k);
        return new cljs.core.ObjMap(this__6285.meta, new_keys__6289, new_strobj__6288, this__6285.update_count + 1, null)
      }else {
        return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__6290 = this;
  return cljs.core.obj_map_contains_key_QMARK_.call(null, k, this__6290.strobj)
};
cljs.core.ObjMap.prototype.cljs$core$IFn$ = true;
cljs.core.ObjMap.prototype.call = function() {
  var G__6310 = null;
  var G__6310__2 = function(tsym6277, k) {
    var this__6291 = this;
    var tsym6277__6292 = this;
    var coll__6293 = tsym6277__6292;
    return cljs.core._lookup.call(null, coll__6293, k)
  };
  var G__6310__3 = function(tsym6278, k, not_found) {
    var this__6294 = this;
    var tsym6278__6295 = this;
    var coll__6296 = tsym6278__6295;
    return cljs.core._lookup.call(null, coll__6296, k, not_found)
  };
  G__6310 = function(tsym6278, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6310__2.call(this, tsym6278, k);
      case 3:
        return G__6310__3.call(this, tsym6278, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6310
}();
cljs.core.ObjMap.prototype.apply = function(tsym6275, args6276) {
  return tsym6275.call.apply(tsym6275, [tsym6275].concat(cljs.core.aclone.call(null, args6276)))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$ = true;
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__6297 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__6298 = this;
  var this$__6299 = this;
  return cljs.core.pr_str.call(null, this$__6299)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$ = true;
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6300 = this;
  if(this__6300.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__6265_SHARP_) {
      return cljs.core.vector.call(null, p1__6265_SHARP_, this__6300.strobj[p1__6265_SHARP_])
    }, this__6300.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$ = true;
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6301 = this;
  return this__6301.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$ = true;
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6302 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$ = true;
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6303 = this;
  return new cljs.core.ObjMap(meta, this__6303.keys, this__6303.strobj, this__6303.update_count, this__6303.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$ = true;
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6304 = this;
  return this__6304.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6305 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__6305.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$ = true;
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__6306 = this;
  if(cljs.core.truth_(function() {
    var and__3822__auto____6307 = goog.isString.call(null, k);
    if(cljs.core.truth_(and__3822__auto____6307)) {
      return this__6306.strobj.hasOwnProperty(k)
    }else {
      return and__3822__auto____6307
    }
  }())) {
    var new_keys__6308 = cljs.core.aclone.call(null, this__6306.keys);
    var new_strobj__6309 = goog.object.clone.call(null, this__6306.strobj);
    new_keys__6308.splice(cljs.core.scan_array.call(null, 1, k, new_keys__6308), 1);
    cljs.core.js_delete.call(null, new_strobj__6309, k);
    return new cljs.core.ObjMap(this__6306.meta, new_keys__6308, new_strobj__6309, this__6306.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 7537551
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$ = true;
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6316 = this;
  var h__364__auto____6317 = this__6316.__hash;
  if(h__364__auto____6317 != null) {
    return h__364__auto____6317
  }else {
    var h__364__auto____6318 = cljs.core.hash_imap.call(null, coll);
    this__6316.__hash = h__364__auto____6318;
    return h__364__auto____6318
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$ = true;
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6319 = this;
  return cljs.core._lookup.call(null, coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6320 = this;
  var bucket__6321 = this__6320.hashobj[cljs.core.hash.call(null, k)];
  var i__6322 = cljs.core.truth_(bucket__6321) ? cljs.core.scan_array.call(null, 2, k, bucket__6321) : null;
  if(cljs.core.truth_(i__6322)) {
    return bucket__6321[i__6322 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$ = true;
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__6323 = this;
  var h__6324 = cljs.core.hash.call(null, k);
  var bucket__6325 = this__6323.hashobj[h__6324];
  if(cljs.core.truth_(bucket__6325)) {
    var new_bucket__6326 = cljs.core.aclone.call(null, bucket__6325);
    var new_hashobj__6327 = goog.object.clone.call(null, this__6323.hashobj);
    new_hashobj__6327[h__6324] = new_bucket__6326;
    var temp__3971__auto____6328 = cljs.core.scan_array.call(null, 2, k, new_bucket__6326);
    if(cljs.core.truth_(temp__3971__auto____6328)) {
      var i__6329 = temp__3971__auto____6328;
      new_bucket__6326[i__6329 + 1] = v;
      return new cljs.core.HashMap(this__6323.meta, this__6323.count, new_hashobj__6327, null)
    }else {
      new_bucket__6326.push(k, v);
      return new cljs.core.HashMap(this__6323.meta, this__6323.count + 1, new_hashobj__6327, null)
    }
  }else {
    var new_hashobj__6330 = goog.object.clone.call(null, this__6323.hashobj);
    new_hashobj__6330[h__6324] = [k, v];
    return new cljs.core.HashMap(this__6323.meta, this__6323.count + 1, new_hashobj__6330, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__6331 = this;
  var bucket__6332 = this__6331.hashobj[cljs.core.hash.call(null, k)];
  var i__6333 = cljs.core.truth_(bucket__6332) ? cljs.core.scan_array.call(null, 2, k, bucket__6332) : null;
  if(cljs.core.truth_(i__6333)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.cljs$core$IFn$ = true;
cljs.core.HashMap.prototype.call = function() {
  var G__6356 = null;
  var G__6356__2 = function(tsym6314, k) {
    var this__6334 = this;
    var tsym6314__6335 = this;
    var coll__6336 = tsym6314__6335;
    return cljs.core._lookup.call(null, coll__6336, k)
  };
  var G__6356__3 = function(tsym6315, k, not_found) {
    var this__6337 = this;
    var tsym6315__6338 = this;
    var coll__6339 = tsym6315__6338;
    return cljs.core._lookup.call(null, coll__6339, k, not_found)
  };
  G__6356 = function(tsym6315, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6356__2.call(this, tsym6315, k);
      case 3:
        return G__6356__3.call(this, tsym6315, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6356
}();
cljs.core.HashMap.prototype.apply = function(tsym6312, args6313) {
  return tsym6312.call.apply(tsym6312, [tsym6312].concat(cljs.core.aclone.call(null, args6313)))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$ = true;
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__6340 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__6341 = this;
  var this$__6342 = this;
  return cljs.core.pr_str.call(null, this$__6342)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$ = true;
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6343 = this;
  if(this__6343.count > 0) {
    var hashes__6344 = cljs.core.js_keys.call(null, this__6343.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__6311_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__6343.hashobj[p1__6311_SHARP_]))
    }, hashes__6344)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$ = true;
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6345 = this;
  return this__6345.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$ = true;
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6346 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$ = true;
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6347 = this;
  return new cljs.core.HashMap(meta, this__6347.count, this__6347.hashobj, this__6347.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$ = true;
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6348 = this;
  return this__6348.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6349 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__6349.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$ = true;
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__6350 = this;
  var h__6351 = cljs.core.hash.call(null, k);
  var bucket__6352 = this__6350.hashobj[h__6351];
  var i__6353 = cljs.core.truth_(bucket__6352) ? cljs.core.scan_array.call(null, 2, k, bucket__6352) : null;
  if(cljs.core.not.call(null, i__6353)) {
    return coll
  }else {
    var new_hashobj__6354 = goog.object.clone.call(null, this__6350.hashobj);
    if(3 > bucket__6352.length) {
      cljs.core.js_delete.call(null, new_hashobj__6354, h__6351)
    }else {
      var new_bucket__6355 = cljs.core.aclone.call(null, bucket__6352);
      new_bucket__6355.splice(i__6353, 2);
      new_hashobj__6354[h__6351] = new_bucket__6355
    }
    return new cljs.core.HashMap(this__6350.meta, this__6350.count - 1, new_hashobj__6354, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__6357 = ks.length;
  var i__6358 = 0;
  var out__6359 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__6358 < len__6357) {
      var G__6360 = i__6358 + 1;
      var G__6361 = cljs.core.assoc.call(null, out__6359, ks[i__6358], vs[i__6358]);
      i__6358 = G__6360;
      out__6359 = G__6361;
      continue
    }else {
      return out__6359
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__6362 = m.arr;
  var len__6363 = arr__6362.length;
  var i__6364 = 0;
  while(true) {
    if(len__6363 <= i__6364) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__6362[i__6364], k)) {
        return i__6364
      }else {
        if("\ufdd0'else") {
          var G__6365 = i__6364 + 2;
          i__6364 = G__6365;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
void 0;
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155545487
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__6370 = this;
  return new cljs.core.TransientArrayMap({}, this__6370.arr.length, cljs.core.aclone.call(null, this__6370.arr))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6371 = this;
  var h__364__auto____6372 = this__6371.__hash;
  if(h__364__auto____6372 != null) {
    return h__364__auto____6372
  }else {
    var h__364__auto____6373 = cljs.core.hash_imap.call(null, coll);
    this__6371.__hash = h__364__auto____6373;
    return h__364__auto____6373
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6374 = this;
  return cljs.core._lookup.call(null, coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6375 = this;
  var idx__6376 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__6376 === -1) {
    return not_found
  }else {
    return this__6375.arr[idx__6376 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__6377 = this;
  var idx__6378 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__6378 === -1) {
    if(this__6377.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__6377.meta, this__6377.cnt + 1, function() {
        var G__6379__6380 = cljs.core.aclone.call(null, this__6377.arr);
        G__6379__6380.push(k);
        G__6379__6380.push(v);
        return G__6379__6380
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__6377.arr[idx__6378 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__6377.meta, this__6377.cnt, function() {
          var G__6381__6382 = cljs.core.aclone.call(null, this__6377.arr);
          G__6381__6382[idx__6378 + 1] = v;
          return G__6381__6382
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__6383 = this;
  return cljs.core.array_map_index_of.call(null, coll, k) != -1
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$ = true;
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__6413 = null;
  var G__6413__2 = function(tsym6368, k) {
    var this__6384 = this;
    var tsym6368__6385 = this;
    var coll__6386 = tsym6368__6385;
    return cljs.core._lookup.call(null, coll__6386, k)
  };
  var G__6413__3 = function(tsym6369, k, not_found) {
    var this__6387 = this;
    var tsym6369__6388 = this;
    var coll__6389 = tsym6369__6388;
    return cljs.core._lookup.call(null, coll__6389, k, not_found)
  };
  G__6413 = function(tsym6369, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6413__2.call(this, tsym6369, k);
      case 3:
        return G__6413__3.call(this, tsym6369, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6413
}();
cljs.core.PersistentArrayMap.prototype.apply = function(tsym6366, args6367) {
  return tsym6366.call.apply(tsym6366, [tsym6366].concat(cljs.core.aclone.call(null, args6367)))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__6390 = this;
  var len__6391 = this__6390.arr.length;
  var i__6392 = 0;
  var init__6393 = init;
  while(true) {
    if(i__6392 < len__6391) {
      var init__6394 = f.call(null, init__6393, this__6390.arr[i__6392], this__6390.arr[i__6392 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__6394)) {
        return cljs.core.deref.call(null, init__6394)
      }else {
        var G__6414 = i__6392 + 2;
        var G__6415 = init__6394;
        i__6392 = G__6414;
        init__6393 = G__6415;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__6395 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__6396 = this;
  var this$__6397 = this;
  return cljs.core.pr_str.call(null, this$__6397)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6398 = this;
  if(this__6398.cnt > 0) {
    var len__6399 = this__6398.arr.length;
    var array_map_seq__6400 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__6399) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__6398.arr[i], this__6398.arr[i + 1]]), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      })
    };
    return array_map_seq__6400.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6401 = this;
  return this__6401.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6402 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6403 = this;
  return new cljs.core.PersistentArrayMap(meta, this__6403.cnt, this__6403.arr, this__6403.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6404 = this;
  return this__6404.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6405 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__6405.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__6406 = this;
  var idx__6407 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__6407 >= 0) {
    var len__6408 = this__6406.arr.length;
    var new_len__6409 = len__6408 - 2;
    if(new_len__6409 === 0) {
      return cljs.core._empty.call(null, coll)
    }else {
      var new_arr__6410 = cljs.core.make_array.call(null, new_len__6409);
      var s__6411 = 0;
      var d__6412 = 0;
      while(true) {
        if(s__6411 >= len__6408) {
          return new cljs.core.PersistentArrayMap(this__6406.meta, this__6406.cnt - 1, new_arr__6410, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__6406.arr[s__6411])) {
            var G__6416 = s__6411 + 2;
            var G__6417 = d__6412;
            s__6411 = G__6416;
            d__6412 = G__6417;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__6410[d__6412] = this__6406.arr[s__6411];
              new_arr__6410[d__6412 + 1] = this__6406.arr[s__6411 + 1];
              var G__6418 = s__6411 + 2;
              var G__6419 = d__6412 + 2;
              s__6411 = G__6418;
              d__6412 = G__6419;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__6420 = cljs.core.count.call(null, ks);
  var i__6421 = 0;
  var out__6422 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__6421 < len__6420) {
      var G__6423 = i__6421 + 1;
      var G__6424 = cljs.core.assoc_BANG_.call(null, out__6422, ks[i__6421], vs[i__6421]);
      i__6421 = G__6423;
      out__6422 = G__6424;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__6422)
    }
    break
  }
};
void 0;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 7;
  this.cljs$lang$protocol_mask$partition0$ = 130
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$ = true;
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__6425 = this;
  if(cljs.core.truth_(this__6425.editable_QMARK_)) {
    var idx__6426 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__6426 >= 0) {
      this__6425.arr[idx__6426] = this__6425.arr[this__6425.len - 2];
      this__6425.arr[idx__6426 + 1] = this__6425.arr[this__6425.len - 1];
      var G__6427__6428 = this__6425.arr;
      G__6427__6428.pop();
      G__6427__6428.pop();
      G__6427__6428;
      this__6425.len = this__6425.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$ = true;
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__6429 = this;
  if(cljs.core.truth_(this__6429.editable_QMARK_)) {
    var idx__6430 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__6430 === -1) {
      if(this__6429.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__6429.len = this__6429.len + 2;
        this__6429.arr.push(key);
        this__6429.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__6429.len, this__6429.arr), key, val)
      }
    }else {
      if(val === this__6429.arr[idx__6430 + 1]) {
        return tcoll
      }else {
        this__6429.arr[idx__6430 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$ = true;
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__6431 = this;
  if(cljs.core.truth_(this__6431.editable_QMARK_)) {
    if(function() {
      var G__6432__6433 = o;
      if(G__6432__6433 != null) {
        if(function() {
          var or__3824__auto____6434 = G__6432__6433.cljs$lang$protocol_mask$partition0$ & 1024;
          if(or__3824__auto____6434) {
            return or__3824__auto____6434
          }else {
            return G__6432__6433.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__6432__6433.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6432__6433)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6432__6433)
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__6435 = cljs.core.seq.call(null, o);
      var tcoll__6436 = tcoll;
      while(true) {
        var temp__3971__auto____6437 = cljs.core.first.call(null, es__6435);
        if(cljs.core.truth_(temp__3971__auto____6437)) {
          var e__6438 = temp__3971__auto____6437;
          var G__6444 = cljs.core.next.call(null, es__6435);
          var G__6445 = cljs.core._assoc_BANG_.call(null, tcoll__6436, cljs.core.key.call(null, e__6438), cljs.core.val.call(null, e__6438));
          es__6435 = G__6444;
          tcoll__6436 = G__6445;
          continue
        }else {
          return tcoll__6436
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__6439 = this;
  if(cljs.core.truth_(this__6439.editable_QMARK_)) {
    this__6439.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__6439.len, 2), this__6439.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$ = true;
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__6440 = this;
  return cljs.core._lookup.call(null, tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__6441 = this;
  if(cljs.core.truth_(this__6441.editable_QMARK_)) {
    var idx__6442 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__6442 === -1) {
      return not_found
    }else {
      return this__6441.arr[idx__6442 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$ = true;
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__6443 = this;
  if(cljs.core.truth_(this__6443.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__6443.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
void 0;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__6446 = cljs.core.transient$.call(null, cljs.core.ObjMap.fromObject([], {}));
  var i__6447 = 0;
  while(true) {
    if(i__6447 < len) {
      var G__6448 = cljs.core.assoc_BANG_.call(null, out__6446, arr[i__6447], arr[i__6447 + 1]);
      var G__6449 = i__6447 + 2;
      out__6446 = G__6448;
      i__6447 = G__6449;
      continue
    }else {
      return out__6446
    }
    break
  }
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__6450__6451 = cljs.core.aclone.call(null, arr);
    G__6450__6451[i] = a;
    return G__6450__6451
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__6452__6453 = cljs.core.aclone.call(null, arr);
    G__6452__6453[i] = a;
    G__6452__6453[j] = b;
    return G__6452__6453
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__6454 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__6454, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__6454, 2 * i, new_arr__6454.length - 2 * i);
  return new_arr__6454
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__6455 = inode.ensure_editable(edit);
    editable__6455.arr[i] = a;
    return editable__6455
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__6456 = inode.ensure_editable(edit);
    editable__6456.arr[i] = a;
    editable__6456.arr[j] = b;
    return editable__6456
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__6457 = arr.length;
  var i__6458 = 0;
  var init__6459 = init;
  while(true) {
    if(i__6458 < len__6457) {
      var init__6462 = function() {
        var k__6460 = arr[i__6458];
        if(k__6460 != null) {
          return f.call(null, init__6459, k__6460, arr[i__6458 + 1])
        }else {
          var node__6461 = arr[i__6458 + 1];
          if(node__6461 != null) {
            return node__6461.kv_reduce(f, init__6459)
          }else {
            return init__6459
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__6462)) {
        return cljs.core.deref.call(null, init__6462)
      }else {
        var G__6463 = i__6458 + 2;
        var G__6464 = init__6462;
        i__6458 = G__6463;
        init__6459 = G__6464;
        continue
      }
    }else {
      return init__6459
    }
    break
  }
};
void 0;
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__6465 = this;
  var inode__6466 = this;
  if(this__6465.bitmap === bit) {
    return null
  }else {
    var editable__6467 = inode__6466.ensure_editable(e);
    var earr__6468 = editable__6467.arr;
    var len__6469 = earr__6468.length;
    editable__6467.bitmap = bit ^ editable__6467.bitmap;
    cljs.core.array_copy.call(null, earr__6468, 2 * (i + 1), earr__6468, 2 * i, len__6469 - 2 * (i + 1));
    earr__6468[len__6469 - 2] = null;
    earr__6468[len__6469 - 1] = null;
    return editable__6467
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__6470 = this;
  var inode__6471 = this;
  var bit__6472 = 1 << (hash >>> shift & 31);
  var idx__6473 = cljs.core.bitmap_indexed_node_index.call(null, this__6470.bitmap, bit__6472);
  if((this__6470.bitmap & bit__6472) === 0) {
    var n__6474 = cljs.core.bit_count.call(null, this__6470.bitmap);
    if(2 * n__6474 < this__6470.arr.length) {
      var editable__6475 = inode__6471.ensure_editable(edit);
      var earr__6476 = editable__6475.arr;
      added_leaf_QMARK_[0] = true;
      cljs.core.array_copy_downward.call(null, earr__6476, 2 * idx__6473, earr__6476, 2 * (idx__6473 + 1), 2 * (n__6474 - idx__6473));
      earr__6476[2 * idx__6473] = key;
      earr__6476[2 * idx__6473 + 1] = val;
      editable__6475.bitmap = editable__6475.bitmap | bit__6472;
      return editable__6475
    }else {
      if(n__6474 >= 16) {
        var nodes__6477 = cljs.core.make_array.call(null, 32);
        var jdx__6478 = hash >>> shift & 31;
        nodes__6477[jdx__6478] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__6479 = 0;
        var j__6480 = 0;
        while(true) {
          if(i__6479 < 32) {
            if((this__6470.bitmap >>> i__6479 & 1) === 0) {
              var G__6533 = i__6479 + 1;
              var G__6534 = j__6480;
              i__6479 = G__6533;
              j__6480 = G__6534;
              continue
            }else {
              nodes__6477[i__6479] = null != this__6470.arr[j__6480] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__6470.arr[j__6480]), this__6470.arr[j__6480], this__6470.arr[j__6480 + 1], added_leaf_QMARK_) : this__6470.arr[j__6480 + 1];
              var G__6535 = i__6479 + 1;
              var G__6536 = j__6480 + 2;
              i__6479 = G__6535;
              j__6480 = G__6536;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__6474 + 1, nodes__6477)
      }else {
        if("\ufdd0'else") {
          var new_arr__6481 = cljs.core.make_array.call(null, 2 * (n__6474 + 4));
          cljs.core.array_copy.call(null, this__6470.arr, 0, new_arr__6481, 0, 2 * idx__6473);
          new_arr__6481[2 * idx__6473] = key;
          added_leaf_QMARK_[0] = true;
          new_arr__6481[2 * idx__6473 + 1] = val;
          cljs.core.array_copy.call(null, this__6470.arr, 2 * idx__6473, new_arr__6481, 2 * (idx__6473 + 1), 2 * (n__6474 - idx__6473));
          var editable__6482 = inode__6471.ensure_editable(edit);
          editable__6482.arr = new_arr__6481;
          editable__6482.bitmap = editable__6482.bitmap | bit__6472;
          return editable__6482
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__6483 = this__6470.arr[2 * idx__6473];
    var val_or_node__6484 = this__6470.arr[2 * idx__6473 + 1];
    if(null == key_or_nil__6483) {
      var n__6485 = val_or_node__6484.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__6485 === val_or_node__6484) {
        return inode__6471
      }else {
        return cljs.core.edit_and_set.call(null, inode__6471, edit, 2 * idx__6473 + 1, n__6485)
      }
    }else {
      if(cljs.core._EQ_.call(null, key, key_or_nil__6483)) {
        if(val === val_or_node__6484) {
          return inode__6471
        }else {
          return cljs.core.edit_and_set.call(null, inode__6471, edit, 2 * idx__6473 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_[0] = true;
          return cljs.core.edit_and_set.call(null, inode__6471, edit, 2 * idx__6473, null, 2 * idx__6473 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__6483, val_or_node__6484, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__6486 = this;
  var inode__6487 = this;
  return cljs.core.create_inode_seq.call(null, this__6486.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__6488 = this;
  var inode__6489 = this;
  var bit__6490 = 1 << (hash >>> shift & 31);
  if((this__6488.bitmap & bit__6490) === 0) {
    return inode__6489
  }else {
    var idx__6491 = cljs.core.bitmap_indexed_node_index.call(null, this__6488.bitmap, bit__6490);
    var key_or_nil__6492 = this__6488.arr[2 * idx__6491];
    var val_or_node__6493 = this__6488.arr[2 * idx__6491 + 1];
    if(null == key_or_nil__6492) {
      var n__6494 = val_or_node__6493.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__6494 === val_or_node__6493) {
        return inode__6489
      }else {
        if(null != n__6494) {
          return cljs.core.edit_and_set.call(null, inode__6489, edit, 2 * idx__6491 + 1, n__6494)
        }else {
          if(this__6488.bitmap === bit__6490) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__6489.edit_and_remove_pair(edit, bit__6490, idx__6491)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core._EQ_.call(null, key, key_or_nil__6492)) {
        removed_leaf_QMARK_[0] = true;
        return inode__6489.edit_and_remove_pair(edit, bit__6490, idx__6491)
      }else {
        if("\ufdd0'else") {
          return inode__6489
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__6495 = this;
  var inode__6496 = this;
  if(e === this__6495.edit) {
    return inode__6496
  }else {
    var n__6497 = cljs.core.bit_count.call(null, this__6495.bitmap);
    var new_arr__6498 = cljs.core.make_array.call(null, n__6497 < 0 ? 4 : 2 * (n__6497 + 1));
    cljs.core.array_copy.call(null, this__6495.arr, 0, new_arr__6498, 0, 2 * n__6497);
    return new cljs.core.BitmapIndexedNode(e, this__6495.bitmap, new_arr__6498)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__6499 = this;
  var inode__6500 = this;
  return cljs.core.inode_kv_reduce.call(null, this__6499.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function() {
  var G__6537 = null;
  var G__6537__3 = function(shift, hash, key) {
    var this__6501 = this;
    var inode__6502 = this;
    var bit__6503 = 1 << (hash >>> shift & 31);
    if((this__6501.bitmap & bit__6503) === 0) {
      return null
    }else {
      var idx__6504 = cljs.core.bitmap_indexed_node_index.call(null, this__6501.bitmap, bit__6503);
      var key_or_nil__6505 = this__6501.arr[2 * idx__6504];
      var val_or_node__6506 = this__6501.arr[2 * idx__6504 + 1];
      if(null == key_or_nil__6505) {
        return val_or_node__6506.inode_find(shift + 5, hash, key)
      }else {
        if(cljs.core._EQ_.call(null, key, key_or_nil__6505)) {
          return cljs.core.PersistentVector.fromArray([key_or_nil__6505, val_or_node__6506])
        }else {
          if("\ufdd0'else") {
            return null
          }else {
            return null
          }
        }
      }
    }
  };
  var G__6537__4 = function(shift, hash, key, not_found) {
    var this__6507 = this;
    var inode__6508 = this;
    var bit__6509 = 1 << (hash >>> shift & 31);
    if((this__6507.bitmap & bit__6509) === 0) {
      return not_found
    }else {
      var idx__6510 = cljs.core.bitmap_indexed_node_index.call(null, this__6507.bitmap, bit__6509);
      var key_or_nil__6511 = this__6507.arr[2 * idx__6510];
      var val_or_node__6512 = this__6507.arr[2 * idx__6510 + 1];
      if(null == key_or_nil__6511) {
        return val_or_node__6512.inode_find(shift + 5, hash, key, not_found)
      }else {
        if(cljs.core._EQ_.call(null, key, key_or_nil__6511)) {
          return cljs.core.PersistentVector.fromArray([key_or_nil__6511, val_or_node__6512])
        }else {
          if("\ufdd0'else") {
            return not_found
          }else {
            return null
          }
        }
      }
    }
  };
  G__6537 = function(shift, hash, key, not_found) {
    switch(arguments.length) {
      case 3:
        return G__6537__3.call(this, shift, hash, key);
      case 4:
        return G__6537__4.call(this, shift, hash, key, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6537
}();
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__6513 = this;
  var inode__6514 = this;
  var bit__6515 = 1 << (hash >>> shift & 31);
  if((this__6513.bitmap & bit__6515) === 0) {
    return inode__6514
  }else {
    var idx__6516 = cljs.core.bitmap_indexed_node_index.call(null, this__6513.bitmap, bit__6515);
    var key_or_nil__6517 = this__6513.arr[2 * idx__6516];
    var val_or_node__6518 = this__6513.arr[2 * idx__6516 + 1];
    if(null == key_or_nil__6517) {
      var n__6519 = val_or_node__6518.inode_without(shift + 5, hash, key);
      if(n__6519 === val_or_node__6518) {
        return inode__6514
      }else {
        if(null != n__6519) {
          return new cljs.core.BitmapIndexedNode(null, this__6513.bitmap, cljs.core.clone_and_set.call(null, this__6513.arr, 2 * idx__6516 + 1, n__6519))
        }else {
          if(this__6513.bitmap === bit__6515) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__6513.bitmap ^ bit__6515, cljs.core.remove_pair.call(null, this__6513.arr, idx__6516))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core._EQ_.call(null, key, key_or_nil__6517)) {
        return new cljs.core.BitmapIndexedNode(null, this__6513.bitmap ^ bit__6515, cljs.core.remove_pair.call(null, this__6513.arr, idx__6516))
      }else {
        if("\ufdd0'else") {
          return inode__6514
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__6520 = this;
  var inode__6521 = this;
  var bit__6522 = 1 << (hash >>> shift & 31);
  var idx__6523 = cljs.core.bitmap_indexed_node_index.call(null, this__6520.bitmap, bit__6522);
  if((this__6520.bitmap & bit__6522) === 0) {
    var n__6524 = cljs.core.bit_count.call(null, this__6520.bitmap);
    if(n__6524 >= 16) {
      var nodes__6525 = cljs.core.make_array.call(null, 32);
      var jdx__6526 = hash >>> shift & 31;
      nodes__6525[jdx__6526] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__6527 = 0;
      var j__6528 = 0;
      while(true) {
        if(i__6527 < 32) {
          if((this__6520.bitmap >>> i__6527 & 1) === 0) {
            var G__6538 = i__6527 + 1;
            var G__6539 = j__6528;
            i__6527 = G__6538;
            j__6528 = G__6539;
            continue
          }else {
            nodes__6525[i__6527] = null != this__6520.arr[j__6528] ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__6520.arr[j__6528]), this__6520.arr[j__6528], this__6520.arr[j__6528 + 1], added_leaf_QMARK_) : this__6520.arr[j__6528 + 1];
            var G__6540 = i__6527 + 1;
            var G__6541 = j__6528 + 2;
            i__6527 = G__6540;
            j__6528 = G__6541;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__6524 + 1, nodes__6525)
    }else {
      var new_arr__6529 = cljs.core.make_array.call(null, 2 * (n__6524 + 1));
      cljs.core.array_copy.call(null, this__6520.arr, 0, new_arr__6529, 0, 2 * idx__6523);
      new_arr__6529[2 * idx__6523] = key;
      added_leaf_QMARK_[0] = true;
      new_arr__6529[2 * idx__6523 + 1] = val;
      cljs.core.array_copy.call(null, this__6520.arr, 2 * idx__6523, new_arr__6529, 2 * (idx__6523 + 1), 2 * (n__6524 - idx__6523));
      return new cljs.core.BitmapIndexedNode(null, this__6520.bitmap | bit__6522, new_arr__6529)
    }
  }else {
    var key_or_nil__6530 = this__6520.arr[2 * idx__6523];
    var val_or_node__6531 = this__6520.arr[2 * idx__6523 + 1];
    if(null == key_or_nil__6530) {
      var n__6532 = val_or_node__6531.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__6532 === val_or_node__6531) {
        return inode__6521
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__6520.bitmap, cljs.core.clone_and_set.call(null, this__6520.arr, 2 * idx__6523 + 1, n__6532))
      }
    }else {
      if(cljs.core._EQ_.call(null, key, key_or_nil__6530)) {
        if(val === val_or_node__6531) {
          return inode__6521
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__6520.bitmap, cljs.core.clone_and_set.call(null, this__6520.arr, 2 * idx__6523 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_[0] = true;
          return new cljs.core.BitmapIndexedNode(null, this__6520.bitmap, cljs.core.clone_and_set.call(null, this__6520.arr, 2 * idx__6523, null, 2 * idx__6523 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__6530, val_or_node__6531, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__6542 = array_node.arr;
  var len__6543 = 2 * (array_node.cnt - 1);
  var new_arr__6544 = cljs.core.make_array.call(null, len__6543);
  var i__6545 = 0;
  var j__6546 = 1;
  var bitmap__6547 = 0;
  while(true) {
    if(i__6545 < len__6543) {
      if(function() {
        var and__3822__auto____6548 = i__6545 != idx;
        if(and__3822__auto____6548) {
          return null != arr__6542[i__6545]
        }else {
          return and__3822__auto____6548
        }
      }()) {
        new_arr__6544[j__6546] = arr__6542[i__6545];
        var G__6549 = i__6545 + 1;
        var G__6550 = j__6546 + 2;
        var G__6551 = bitmap__6547 | 1 << i__6545;
        i__6545 = G__6549;
        j__6546 = G__6550;
        bitmap__6547 = G__6551;
        continue
      }else {
        var G__6552 = i__6545 + 1;
        var G__6553 = j__6546;
        var G__6554 = bitmap__6547;
        i__6545 = G__6552;
        j__6546 = G__6553;
        bitmap__6547 = G__6554;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__6547, new_arr__6544)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__6555 = this;
  var inode__6556 = this;
  var idx__6557 = hash >>> shift & 31;
  var node__6558 = this__6555.arr[idx__6557];
  if(null == node__6558) {
    return new cljs.core.ArrayNode(null, this__6555.cnt + 1, cljs.core.clone_and_set.call(null, this__6555.arr, idx__6557, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__6559 = node__6558.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__6559 === node__6558) {
      return inode__6556
    }else {
      return new cljs.core.ArrayNode(null, this__6555.cnt, cljs.core.clone_and_set.call(null, this__6555.arr, idx__6557, n__6559))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__6560 = this;
  var inode__6561 = this;
  var idx__6562 = hash >>> shift & 31;
  var node__6563 = this__6560.arr[idx__6562];
  if(null != node__6563) {
    var n__6564 = node__6563.inode_without(shift + 5, hash, key);
    if(n__6564 === node__6563) {
      return inode__6561
    }else {
      if(n__6564 == null) {
        if(this__6560.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__6561, null, idx__6562)
        }else {
          return new cljs.core.ArrayNode(null, this__6560.cnt - 1, cljs.core.clone_and_set.call(null, this__6560.arr, idx__6562, n__6564))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__6560.cnt, cljs.core.clone_and_set.call(null, this__6560.arr, idx__6562, n__6564))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__6561
  }
};
cljs.core.ArrayNode.prototype.inode_find = function() {
  var G__6596 = null;
  var G__6596__3 = function(shift, hash, key) {
    var this__6565 = this;
    var inode__6566 = this;
    var idx__6567 = hash >>> shift & 31;
    var node__6568 = this__6565.arr[idx__6567];
    if(null != node__6568) {
      return node__6568.inode_find(shift + 5, hash, key)
    }else {
      return null
    }
  };
  var G__6596__4 = function(shift, hash, key, not_found) {
    var this__6569 = this;
    var inode__6570 = this;
    var idx__6571 = hash >>> shift & 31;
    var node__6572 = this__6569.arr[idx__6571];
    if(null != node__6572) {
      return node__6572.inode_find(shift + 5, hash, key, not_found)
    }else {
      return not_found
    }
  };
  G__6596 = function(shift, hash, key, not_found) {
    switch(arguments.length) {
      case 3:
        return G__6596__3.call(this, shift, hash, key);
      case 4:
        return G__6596__4.call(this, shift, hash, key, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6596
}();
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__6573 = this;
  var inode__6574 = this;
  return cljs.core.create_array_node_seq.call(null, this__6573.arr)
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__6575 = this;
  var inode__6576 = this;
  if(e === this__6575.edit) {
    return inode__6576
  }else {
    return new cljs.core.ArrayNode(e, this__6575.cnt, cljs.core.aclone.call(null, this__6575.arr))
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__6577 = this;
  var inode__6578 = this;
  var idx__6579 = hash >>> shift & 31;
  var node__6580 = this__6577.arr[idx__6579];
  if(null == node__6580) {
    var editable__6581 = cljs.core.edit_and_set.call(null, inode__6578, edit, idx__6579, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__6581.cnt = editable__6581.cnt + 1;
    return editable__6581
  }else {
    var n__6582 = node__6580.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__6582 === node__6580) {
      return inode__6578
    }else {
      return cljs.core.edit_and_set.call(null, inode__6578, edit, idx__6579, n__6582)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__6583 = this;
  var inode__6584 = this;
  var idx__6585 = hash >>> shift & 31;
  var node__6586 = this__6583.arr[idx__6585];
  if(null == node__6586) {
    return inode__6584
  }else {
    var n__6587 = node__6586.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__6587 === node__6586) {
      return inode__6584
    }else {
      if(null == n__6587) {
        if(this__6583.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__6584, edit, idx__6585)
        }else {
          var editable__6588 = cljs.core.edit_and_set.call(null, inode__6584, edit, idx__6585, n__6587);
          editable__6588.cnt = editable__6588.cnt - 1;
          return editable__6588
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__6584, edit, idx__6585, n__6587)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__6589 = this;
  var inode__6590 = this;
  var len__6591 = this__6589.arr.length;
  var i__6592 = 0;
  var init__6593 = init;
  while(true) {
    if(i__6592 < len__6591) {
      var node__6594 = this__6589.arr[i__6592];
      if(node__6594 != null) {
        var init__6595 = node__6594.kv_reduce(f, init__6593);
        if(cljs.core.reduced_QMARK_.call(null, init__6595)) {
          return cljs.core.deref.call(null, init__6595)
        }else {
          var G__6597 = i__6592 + 1;
          var G__6598 = init__6595;
          i__6592 = G__6597;
          init__6593 = G__6598;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__6593
    }
    break
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__6599 = 2 * cnt;
  var i__6600 = 0;
  while(true) {
    if(i__6600 < lim__6599) {
      if(cljs.core._EQ_.call(null, key, arr[i__6600])) {
        return i__6600
      }else {
        var G__6601 = i__6600 + 2;
        i__6600 = G__6601;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__6602 = this;
  var inode__6603 = this;
  if(hash === this__6602.collision_hash) {
    var idx__6604 = cljs.core.hash_collision_node_find_index.call(null, this__6602.arr, this__6602.cnt, key);
    if(idx__6604 === -1) {
      var len__6605 = this__6602.arr.length;
      var new_arr__6606 = cljs.core.make_array.call(null, len__6605 + 2);
      cljs.core.array_copy.call(null, this__6602.arr, 0, new_arr__6606, 0, len__6605);
      new_arr__6606[len__6605] = key;
      new_arr__6606[len__6605 + 1] = val;
      added_leaf_QMARK_[0] = true;
      return new cljs.core.HashCollisionNode(null, this__6602.collision_hash, this__6602.cnt + 1, new_arr__6606)
    }else {
      if(cljs.core._EQ_.call(null, this__6602.arr[idx__6604], val)) {
        return inode__6603
      }else {
        return new cljs.core.HashCollisionNode(null, this__6602.collision_hash, this__6602.cnt, cljs.core.clone_and_set.call(null, this__6602.arr, idx__6604 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__6602.collision_hash >>> shift & 31), [null, inode__6603])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__6607 = this;
  var inode__6608 = this;
  var idx__6609 = cljs.core.hash_collision_node_find_index.call(null, this__6607.arr, this__6607.cnt, key);
  if(idx__6609 === -1) {
    return inode__6608
  }else {
    if(this__6607.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__6607.collision_hash, this__6607.cnt - 1, cljs.core.remove_pair.call(null, this__6607.arr, cljs.core.quot.call(null, idx__6609, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function() {
  var G__6636 = null;
  var G__6636__3 = function(shift, hash, key) {
    var this__6610 = this;
    var inode__6611 = this;
    var idx__6612 = cljs.core.hash_collision_node_find_index.call(null, this__6610.arr, this__6610.cnt, key);
    if(idx__6612 < 0) {
      return null
    }else {
      if(cljs.core._EQ_.call(null, key, this__6610.arr[idx__6612])) {
        return cljs.core.PersistentVector.fromArray([this__6610.arr[idx__6612], this__6610.arr[idx__6612 + 1]])
      }else {
        if("\ufdd0'else") {
          return null
        }else {
          return null
        }
      }
    }
  };
  var G__6636__4 = function(shift, hash, key, not_found) {
    var this__6613 = this;
    var inode__6614 = this;
    var idx__6615 = cljs.core.hash_collision_node_find_index.call(null, this__6613.arr, this__6613.cnt, key);
    if(idx__6615 < 0) {
      return not_found
    }else {
      if(cljs.core._EQ_.call(null, key, this__6613.arr[idx__6615])) {
        return cljs.core.PersistentVector.fromArray([this__6613.arr[idx__6615], this__6613.arr[idx__6615 + 1]])
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  };
  G__6636 = function(shift, hash, key, not_found) {
    switch(arguments.length) {
      case 3:
        return G__6636__3.call(this, shift, hash, key);
      case 4:
        return G__6636__4.call(this, shift, hash, key, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6636
}();
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__6616 = this;
  var inode__6617 = this;
  return cljs.core.create_inode_seq.call(null, this__6616.arr)
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function() {
  var G__6637 = null;
  var G__6637__1 = function(e) {
    var this__6618 = this;
    var inode__6619 = this;
    if(e === this__6618.edit) {
      return inode__6619
    }else {
      var new_arr__6620 = cljs.core.make_array.call(null, 2 * (this__6618.cnt + 1));
      cljs.core.array_copy.call(null, this__6618.arr, 0, new_arr__6620, 0, 2 * this__6618.cnt);
      return new cljs.core.HashCollisionNode(e, this__6618.collision_hash, this__6618.cnt, new_arr__6620)
    }
  };
  var G__6637__3 = function(e, count, array) {
    var this__6621 = this;
    var inode__6622 = this;
    if(e === this__6621.edit) {
      this__6621.arr = array;
      this__6621.cnt = count;
      return inode__6622
    }else {
      return new cljs.core.HashCollisionNode(this__6621.edit, this__6621.collision_hash, count, array)
    }
  };
  G__6637 = function(e, count, array) {
    switch(arguments.length) {
      case 1:
        return G__6637__1.call(this, e);
      case 3:
        return G__6637__3.call(this, e, count, array)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6637
}();
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__6623 = this;
  var inode__6624 = this;
  if(hash === this__6623.collision_hash) {
    var idx__6625 = cljs.core.hash_collision_node_find_index.call(null, this__6623.arr, this__6623.cnt, key);
    if(idx__6625 === -1) {
      if(this__6623.arr.length > 2 * this__6623.cnt) {
        var editable__6626 = cljs.core.edit_and_set.call(null, inode__6624, edit, 2 * this__6623.cnt, key, 2 * this__6623.cnt + 1, val);
        added_leaf_QMARK_[0] = true;
        editable__6626.cnt = editable__6626.cnt + 1;
        return editable__6626
      }else {
        var len__6627 = this__6623.arr.length;
        var new_arr__6628 = cljs.core.make_array.call(null, len__6627 + 2);
        cljs.core.array_copy.call(null, this__6623.arr, 0, new_arr__6628, 0, len__6627);
        new_arr__6628[len__6627] = key;
        new_arr__6628[len__6627 + 1] = val;
        added_leaf_QMARK_[0] = true;
        return inode__6624.ensure_editable(edit, this__6623.cnt + 1, new_arr__6628)
      }
    }else {
      if(this__6623.arr[idx__6625 + 1] === val) {
        return inode__6624
      }else {
        return cljs.core.edit_and_set.call(null, inode__6624, edit, idx__6625 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__6623.collision_hash >>> shift & 31), [null, inode__6624, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__6629 = this;
  var inode__6630 = this;
  var idx__6631 = cljs.core.hash_collision_node_find_index.call(null, this__6629.arr, this__6629.cnt, key);
  if(idx__6631 === -1) {
    return inode__6630
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__6629.cnt === 1) {
      return null
    }else {
      var editable__6632 = inode__6630.ensure_editable(edit);
      var earr__6633 = editable__6632.arr;
      earr__6633[idx__6631] = earr__6633[2 * this__6629.cnt - 2];
      earr__6633[idx__6631 + 1] = earr__6633[2 * this__6629.cnt - 1];
      earr__6633[2 * this__6629.cnt - 1] = null;
      earr__6633[2 * this__6629.cnt - 2] = null;
      editable__6632.cnt = editable__6632.cnt - 1;
      return editable__6632
    }
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__6634 = this;
  var inode__6635 = this;
  return cljs.core.inode_kv_reduce.call(null, this__6634.arr, f, init)
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__6638 = cljs.core.hash.call(null, key1);
    if(key1hash__6638 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__6638, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___6639 = [false];
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__6638, key1, val1, added_leaf_QMARK___6639).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___6639)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__6640 = cljs.core.hash.call(null, key1);
    if(key1hash__6640 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__6640, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___6641 = [false];
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__6640, key1, val1, added_leaf_QMARK___6641).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___6641)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15925324
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6642 = this;
  var h__364__auto____6643 = this__6642.__hash;
  if(h__364__auto____6643 != null) {
    return h__364__auto____6643
  }else {
    var h__364__auto____6644 = cljs.core.hash_coll.call(null, coll);
    this__6642.__hash = h__364__auto____6644;
    return h__364__auto____6644
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISequential$ = true;
cljs.core.NodeSeq.prototype.cljs$core$ICollection$ = true;
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6645 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__6646 = this;
  var this$__6647 = this;
  return cljs.core.pr_str.call(null, this$__6647)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__6648 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$ = true;
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__6649 = this;
  if(this__6649.s == null) {
    return cljs.core.PersistentVector.fromArray([this__6649.nodes[this__6649.i], this__6649.nodes[this__6649.i + 1]])
  }else {
    return cljs.core.first.call(null, this__6649.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__6650 = this;
  if(this__6650.s == null) {
    return cljs.core.create_inode_seq.call(null, this__6650.nodes, this__6650.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__6650.nodes, this__6650.i, cljs.core.next.call(null, this__6650.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6651 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6652 = this;
  return new cljs.core.NodeSeq(meta, this__6652.nodes, this__6652.i, this__6652.s, this__6652.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6653 = this;
  return this__6653.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6654 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__6654.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__6655 = nodes.length;
      var j__6656 = i;
      while(true) {
        if(j__6656 < len__6655) {
          if(null != nodes[j__6656]) {
            return new cljs.core.NodeSeq(null, nodes, j__6656, null, null)
          }else {
            var temp__3971__auto____6657 = nodes[j__6656 + 1];
            if(cljs.core.truth_(temp__3971__auto____6657)) {
              var node__6658 = temp__3971__auto____6657;
              var temp__3971__auto____6659 = node__6658.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____6659)) {
                var node_seq__6660 = temp__3971__auto____6659;
                return new cljs.core.NodeSeq(null, nodes, j__6656 + 2, node_seq__6660, null)
              }else {
                var G__6661 = j__6656 + 2;
                j__6656 = G__6661;
                continue
              }
            }else {
              var G__6662 = j__6656 + 2;
              j__6656 = G__6662;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15925324
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6663 = this;
  var h__364__auto____6664 = this__6663.__hash;
  if(h__364__auto____6664 != null) {
    return h__364__auto____6664
  }else {
    var h__364__auto____6665 = cljs.core.hash_coll.call(null, coll);
    this__6663.__hash = h__364__auto____6665;
    return h__364__auto____6665
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISequential$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6666 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__6667 = this;
  var this$__6668 = this;
  return cljs.core.pr_str.call(null, this$__6668)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__6669 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__6670 = this;
  return cljs.core.first.call(null, this__6670.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__6671 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__6671.nodes, this__6671.i, cljs.core.next.call(null, this__6671.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6672 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6673 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__6673.nodes, this__6673.i, this__6673.s, this__6673.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6674 = this;
  return this__6674.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6675 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__6675.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__6676 = nodes.length;
      var j__6677 = i;
      while(true) {
        if(j__6677 < len__6676) {
          var temp__3971__auto____6678 = nodes[j__6677];
          if(cljs.core.truth_(temp__3971__auto____6678)) {
            var nj__6679 = temp__3971__auto____6678;
            var temp__3971__auto____6680 = nj__6679.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____6680)) {
              var ns__6681 = temp__3971__auto____6680;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__6677 + 1, ns__6681, null)
            }else {
              var G__6682 = j__6677 + 1;
              j__6677 = G__6682;
              continue
            }
          }else {
            var G__6683 = j__6677 + 1;
            j__6677 = G__6683;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
void 0;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155545487
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__6688 = this;
  return new cljs.core.TransientHashMap({}, this__6688.root, this__6688.cnt, this__6688.has_nil_QMARK_, this__6688.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6689 = this;
  var h__364__auto____6690 = this__6689.__hash;
  if(h__364__auto____6690 != null) {
    return h__364__auto____6690
  }else {
    var h__364__auto____6691 = cljs.core.hash_imap.call(null, coll);
    this__6689.__hash = h__364__auto____6691;
    return h__364__auto____6691
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6692 = this;
  return cljs.core._lookup.call(null, coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6693 = this;
  if(k == null) {
    if(cljs.core.truth_(this__6693.has_nil_QMARK_)) {
      return this__6693.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__6693.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return cljs.core.nth.call(null, this__6693.root.inode_find(0, cljs.core.hash.call(null, k), k, [null, not_found]), 1)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__6694 = this;
  if(k == null) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____6695 = this__6694.has_nil_QMARK_;
      if(cljs.core.truth_(and__3822__auto____6695)) {
        return v === this__6694.nil_val
      }else {
        return and__3822__auto____6695
      }
    }())) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__6694.meta, cljs.core.truth_(this__6694.has_nil_QMARK_) ? this__6694.cnt : this__6694.cnt + 1, this__6694.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___6696 = [false];
    var new_root__6697 = (this__6694.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__6694.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___6696);
    if(new_root__6697 === this__6694.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__6694.meta, cljs.core.truth_(added_leaf_QMARK___6696[0]) ? this__6694.cnt + 1 : this__6694.cnt, new_root__6697, this__6694.has_nil_QMARK_, this__6694.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__6698 = this;
  if(k == null) {
    return this__6698.has_nil_QMARK_
  }else {
    if(this__6698.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return cljs.core.not.call(null, this__6698.root.inode_find(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$ = true;
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__6719 = null;
  var G__6719__2 = function(tsym6686, k) {
    var this__6699 = this;
    var tsym6686__6700 = this;
    var coll__6701 = tsym6686__6700;
    return cljs.core._lookup.call(null, coll__6701, k)
  };
  var G__6719__3 = function(tsym6687, k, not_found) {
    var this__6702 = this;
    var tsym6687__6703 = this;
    var coll__6704 = tsym6687__6703;
    return cljs.core._lookup.call(null, coll__6704, k, not_found)
  };
  G__6719 = function(tsym6687, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6719__2.call(this, tsym6687, k);
      case 3:
        return G__6719__3.call(this, tsym6687, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6719
}();
cljs.core.PersistentHashMap.prototype.apply = function(tsym6684, args6685) {
  return tsym6684.call.apply(tsym6684, [tsym6684].concat(cljs.core.aclone.call(null, args6685)))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__6705 = this;
  var init__6706 = cljs.core.truth_(this__6705.has_nil_QMARK_) ? f.call(null, init, null, this__6705.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__6706)) {
    return cljs.core.deref.call(null, init__6706)
  }else {
    if(null != this__6705.root) {
      return this__6705.root.kv_reduce(f, init__6706)
    }else {
      if("\ufdd0'else") {
        return init__6706
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__6707 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__6708 = this;
  var this$__6709 = this;
  return cljs.core.pr_str.call(null, this$__6709)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6710 = this;
  if(this__6710.cnt > 0) {
    var s__6711 = null != this__6710.root ? this__6710.root.inode_seq() : null;
    if(cljs.core.truth_(this__6710.has_nil_QMARK_)) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__6710.nil_val]), s__6711)
    }else {
      return s__6711
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6712 = this;
  return this__6712.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6713 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6714 = this;
  return new cljs.core.PersistentHashMap(meta, this__6714.cnt, this__6714.root, this__6714.has_nil_QMARK_, this__6714.nil_val, this__6714.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6715 = this;
  return this__6715.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6716 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__6716.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__6717 = this;
  if(k == null) {
    if(cljs.core.truth_(this__6717.has_nil_QMARK_)) {
      return new cljs.core.PersistentHashMap(this__6717.meta, this__6717.cnt - 1, this__6717.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__6717.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__6718 = this__6717.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__6718 === this__6717.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__6717.meta, this__6717.cnt - 1, new_root__6718, this__6717.has_nil_QMARK_, this__6717.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__6720 = ks.length;
  var i__6721 = 0;
  var out__6722 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__6721 < len__6720) {
      var G__6723 = i__6721 + 1;
      var G__6724 = cljs.core.assoc_BANG_.call(null, out__6722, ks[i__6721], vs[i__6721]);
      i__6721 = G__6723;
      out__6722 = G__6724;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__6722)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 7;
  this.cljs$lang$protocol_mask$partition0$ = 130
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$ = true;
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__6725 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$ = true;
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__6726 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$ = true;
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__6727 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__6728 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$ = true;
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__6729 = this;
  if(k == null) {
    if(cljs.core.truth_(this__6729.has_nil_QMARK_)) {
      return this__6729.nil_val
    }else {
      return null
    }
  }else {
    if(this__6729.root == null) {
      return null
    }else {
      return cljs.core.nth.call(null, this__6729.root.inode_find(0, cljs.core.hash.call(null, k), k), 1)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__6730 = this;
  if(k == null) {
    if(cljs.core.truth_(this__6730.has_nil_QMARK_)) {
      return this__6730.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__6730.root == null) {
      return not_found
    }else {
      return cljs.core.nth.call(null, this__6730.root.inode_find(0, cljs.core.hash.call(null, k), k, [null, not_found]), 1)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$ = true;
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6731 = this;
  if(cljs.core.truth_(this__6731.edit)) {
    return this__6731.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__6732 = this;
  var tcoll__6733 = this;
  if(cljs.core.truth_(this__6732.edit)) {
    if(function() {
      var G__6734__6735 = o;
      if(G__6734__6735 != null) {
        if(function() {
          var or__3824__auto____6736 = G__6734__6735.cljs$lang$protocol_mask$partition0$ & 1024;
          if(or__3824__auto____6736) {
            return or__3824__auto____6736
          }else {
            return G__6734__6735.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__6734__6735.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6734__6735)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__6734__6735)
      }
    }()) {
      return tcoll__6733.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__6737 = cljs.core.seq.call(null, o);
      var tcoll__6738 = tcoll__6733;
      while(true) {
        var temp__3971__auto____6739 = cljs.core.first.call(null, es__6737);
        if(cljs.core.truth_(temp__3971__auto____6739)) {
          var e__6740 = temp__3971__auto____6739;
          var G__6751 = cljs.core.next.call(null, es__6737);
          var G__6752 = tcoll__6738.assoc_BANG_(cljs.core.key.call(null, e__6740), cljs.core.val.call(null, e__6740));
          es__6737 = G__6751;
          tcoll__6738 = G__6752;
          continue
        }else {
          return tcoll__6738
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__6741 = this;
  var tcoll__6742 = this;
  if(cljs.core.truth_(this__6741.edit)) {
    if(k == null) {
      if(this__6741.nil_val === v) {
      }else {
        this__6741.nil_val = v
      }
      if(cljs.core.truth_(this__6741.has_nil_QMARK_)) {
      }else {
        this__6741.count = this__6741.count + 1;
        this__6741.has_nil_QMARK_ = true
      }
      return tcoll__6742
    }else {
      var added_leaf_QMARK___6743 = [false];
      var node__6744 = (this__6741.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__6741.root).inode_assoc_BANG_(this__6741.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___6743);
      if(node__6744 === this__6741.root) {
      }else {
        this__6741.root = node__6744
      }
      if(cljs.core.truth_(added_leaf_QMARK___6743[0])) {
        this__6741.count = this__6741.count + 1
      }else {
      }
      return tcoll__6742
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__6745 = this;
  var tcoll__6746 = this;
  if(cljs.core.truth_(this__6745.edit)) {
    if(k == null) {
      if(cljs.core.truth_(this__6745.has_nil_QMARK_)) {
        this__6745.has_nil_QMARK_ = false;
        this__6745.nil_val = null;
        this__6745.count = this__6745.count - 1;
        return tcoll__6746
      }else {
        return tcoll__6746
      }
    }else {
      if(this__6745.root == null) {
        return tcoll__6746
      }else {
        var removed_leaf_QMARK___6747 = [false];
        var node__6748 = this__6745.root.inode_without_BANG_(this__6745.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___6747);
        if(node__6748 === this__6745.root) {
        }else {
          this__6745.root = node__6748
        }
        if(cljs.core.truth_(removed_leaf_QMARK___6747[0])) {
          this__6745.count = this__6745.count - 1
        }else {
        }
        return tcoll__6746
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__6749 = this;
  var tcoll__6750 = this;
  if(cljs.core.truth_(this__6749.edit)) {
    this__6749.edit = null;
    return new cljs.core.PersistentHashMap(null, this__6749.count, this__6749.root, this__6749.has_nil_QMARK_, this__6749.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__6753 = node;
  var stack__6754 = stack;
  while(true) {
    if(t__6753 != null) {
      var G__6755 = cljs.core.truth_(ascending_QMARK_) ? t__6753.left : t__6753.right;
      var G__6756 = cljs.core.conj.call(null, stack__6754, t__6753);
      t__6753 = G__6755;
      stack__6754 = G__6756;
      continue
    }else {
      return stack__6754
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15925322
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6757 = this;
  var h__364__auto____6758 = this__6757.__hash;
  if(h__364__auto____6758 != null) {
    return h__364__auto____6758
  }else {
    var h__364__auto____6759 = cljs.core.hash_coll.call(null, coll);
    this__6757.__hash = h__364__auto____6759;
    return h__364__auto____6759
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISequential$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__6760 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__6761 = this;
  var this$__6762 = this;
  return cljs.core.pr_str.call(null, this$__6762)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__6763 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6764 = this;
  if(this__6764.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__6764.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__6765 = this;
  return cljs.core.peek.call(null, this__6765.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__6766 = this;
  var t__6767 = cljs.core.peek.call(null, this__6766.stack);
  var next_stack__6768 = cljs.core.tree_map_seq_push.call(null, cljs.core.truth_(this__6766.ascending_QMARK_) ? t__6767.right : t__6767.left, cljs.core.pop.call(null, this__6766.stack), this__6766.ascending_QMARK_);
  if(next_stack__6768 != null) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__6768, this__6766.ascending_QMARK_, this__6766.cnt - 1, null)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6769 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6770 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__6770.stack, this__6770.ascending_QMARK_, this__6770.cnt, this__6770.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6771 = this;
  return this__6771.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
void 0;
void 0;
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____6772 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____6772) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____6772
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____6773 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____6773) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____6773
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__6774 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__6774)) {
    return cljs.core.deref.call(null, init__6774)
  }else {
    var init__6775 = node.left != null ? tree_map_kv_reduce.call(null, node.left, f, init__6774) : init__6774;
    if(cljs.core.reduced_QMARK_.call(null, init__6775)) {
      return cljs.core.deref.call(null, init__6775)
    }else {
      var init__6776 = node.right != null ? tree_map_kv_reduce.call(null, node.right, f, init__6775) : init__6775;
      if(cljs.core.reduced_QMARK_.call(null, init__6776)) {
        return cljs.core.deref.call(null, init__6776)
      }else {
        return init__6776
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 16201119
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$ = true;
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6781 = this;
  var h__364__auto____6782 = this__6781.__hash;
  if(h__364__auto____6782 != null) {
    return h__364__auto____6782
  }else {
    var h__364__auto____6783 = cljs.core.hash_coll.call(null, coll);
    this__6781.__hash = h__364__auto____6783;
    return h__364__auto____6783
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$ = true;
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__6784 = this;
  return cljs.core._nth.call(null, node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__6785 = this;
  return cljs.core._nth.call(null, node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$ = true;
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__6786 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__6786.key, this__6786.val]), k, v)
};
cljs.core.BlackNode.prototype.cljs$core$IFn$ = true;
cljs.core.BlackNode.prototype.call = function() {
  var G__6833 = null;
  var G__6833__2 = function(tsym6779, k) {
    var this__6787 = this;
    var tsym6779__6788 = this;
    var node__6789 = tsym6779__6788;
    return cljs.core._lookup.call(null, node__6789, k)
  };
  var G__6833__3 = function(tsym6780, k, not_found) {
    var this__6790 = this;
    var tsym6780__6791 = this;
    var node__6792 = tsym6780__6791;
    return cljs.core._lookup.call(null, node__6792, k, not_found)
  };
  G__6833 = function(tsym6780, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6833__2.call(this, tsym6780, k);
      case 3:
        return G__6833__3.call(this, tsym6780, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6833
}();
cljs.core.BlackNode.prototype.apply = function(tsym6777, args6778) {
  return tsym6777.call.apply(tsym6777, [tsym6777].concat(cljs.core.aclone.call(null, args6778)))
};
cljs.core.BlackNode.prototype.cljs$core$ISequential$ = true;
cljs.core.BlackNode.prototype.cljs$core$ICollection$ = true;
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__6793 = this;
  return cljs.core.PersistentVector.fromArray([this__6793.key, this__6793.val, o])
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$ = true;
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__6794 = this;
  return this__6794.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__6795 = this;
  return this__6795.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__6796 = this;
  var node__6797 = this;
  return ins.balance_right(node__6797)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__6798 = this;
  var node__6799 = this;
  return new cljs.core.RedNode(this__6798.key, this__6798.val, this__6798.left, this__6798.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__6800 = this;
  var node__6801 = this;
  return cljs.core.balance_right_del.call(null, this__6800.key, this__6800.val, this__6800.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__6802 = this;
  var node__6803 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__6804 = this;
  var node__6805 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__6805, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__6806 = this;
  var node__6807 = this;
  return cljs.core.balance_left_del.call(null, this__6806.key, this__6806.val, del, this__6806.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__6808 = this;
  var node__6809 = this;
  return ins.balance_left(node__6809)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__6810 = this;
  var node__6811 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__6811, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__6834 = null;
  var G__6834__0 = function() {
    var this__6814 = this;
    var this$__6815 = this;
    return cljs.core.pr_str.call(null, this$__6815)
  };
  G__6834 = function() {
    switch(arguments.length) {
      case 0:
        return G__6834__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6834
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__6816 = this;
  var node__6817 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__6817, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__6818 = this;
  var node__6819 = this;
  return node__6819
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$ = true;
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__6820 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__6821 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$ = true;
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__6822 = this;
  return cljs.core.list.call(null, this__6822.key, this__6822.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$ = true;
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__6824 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$ = true;
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__6825 = this;
  return this__6825.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__6826 = this;
  return cljs.core.PersistentVector.fromArray([this__6826.key])
};
cljs.core.BlackNode.prototype.cljs$core$IVector$ = true;
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__6827 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__6827.key, this__6827.val]), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$ = true;
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6828 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$ = true;
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__6829 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__6829.key, this__6829.val]), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$ = true;
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__6830 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$ = true;
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__6831 = this;
  if(n === 0) {
    return this__6831.key
  }else {
    if(n === 1) {
      return this__6831.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__6832 = this;
  if(n === 0) {
    return this__6832.key
  }else {
    if(n === 1) {
      return this__6832.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__6823 = this;
  return cljs.core.PersistentVector.fromArray([])
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 16201119
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$ = true;
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6839 = this;
  var h__364__auto____6840 = this__6839.__hash;
  if(h__364__auto____6840 != null) {
    return h__364__auto____6840
  }else {
    var h__364__auto____6841 = cljs.core.hash_coll.call(null, coll);
    this__6839.__hash = h__364__auto____6841;
    return h__364__auto____6841
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$ = true;
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__6842 = this;
  return cljs.core._nth.call(null, node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__6843 = this;
  return cljs.core._nth.call(null, node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$ = true;
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__6844 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__6844.key, this__6844.val]), k, v)
};
cljs.core.RedNode.prototype.cljs$core$IFn$ = true;
cljs.core.RedNode.prototype.call = function() {
  var G__6891 = null;
  var G__6891__2 = function(tsym6837, k) {
    var this__6845 = this;
    var tsym6837__6846 = this;
    var node__6847 = tsym6837__6846;
    return cljs.core._lookup.call(null, node__6847, k)
  };
  var G__6891__3 = function(tsym6838, k, not_found) {
    var this__6848 = this;
    var tsym6838__6849 = this;
    var node__6850 = tsym6838__6849;
    return cljs.core._lookup.call(null, node__6850, k, not_found)
  };
  G__6891 = function(tsym6838, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6891__2.call(this, tsym6838, k);
      case 3:
        return G__6891__3.call(this, tsym6838, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6891
}();
cljs.core.RedNode.prototype.apply = function(tsym6835, args6836) {
  return tsym6835.call.apply(tsym6835, [tsym6835].concat(cljs.core.aclone.call(null, args6836)))
};
cljs.core.RedNode.prototype.cljs$core$ISequential$ = true;
cljs.core.RedNode.prototype.cljs$core$ICollection$ = true;
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__6851 = this;
  return cljs.core.PersistentVector.fromArray([this__6851.key, this__6851.val, o])
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$ = true;
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__6852 = this;
  return this__6852.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__6853 = this;
  return this__6853.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__6854 = this;
  var node__6855 = this;
  return new cljs.core.RedNode(this__6854.key, this__6854.val, this__6854.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__6856 = this;
  var node__6857 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__6858 = this;
  var node__6859 = this;
  return new cljs.core.RedNode(this__6858.key, this__6858.val, this__6858.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__6860 = this;
  var node__6861 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__6862 = this;
  var node__6863 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__6863, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__6864 = this;
  var node__6865 = this;
  return new cljs.core.RedNode(this__6864.key, this__6864.val, del, this__6864.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__6866 = this;
  var node__6867 = this;
  return new cljs.core.RedNode(this__6866.key, this__6866.val, ins, this__6866.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__6868 = this;
  var node__6869 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__6868.left)) {
    return new cljs.core.RedNode(this__6868.key, this__6868.val, this__6868.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__6868.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__6868.right)) {
      return new cljs.core.RedNode(this__6868.right.key, this__6868.right.val, new cljs.core.BlackNode(this__6868.key, this__6868.val, this__6868.left, this__6868.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__6868.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__6869, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__6892 = null;
  var G__6892__0 = function() {
    var this__6872 = this;
    var this$__6873 = this;
    return cljs.core.pr_str.call(null, this$__6873)
  };
  G__6892 = function() {
    switch(arguments.length) {
      case 0:
        return G__6892__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6892
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__6874 = this;
  var node__6875 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__6874.right)) {
    return new cljs.core.RedNode(this__6874.key, this__6874.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__6874.left, null), this__6874.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__6874.left)) {
      return new cljs.core.RedNode(this__6874.left.key, this__6874.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__6874.left.left, null), new cljs.core.BlackNode(this__6874.key, this__6874.val, this__6874.left.right, this__6874.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__6875, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__6876 = this;
  var node__6877 = this;
  return new cljs.core.BlackNode(this__6876.key, this__6876.val, this__6876.left, this__6876.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$ = true;
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__6878 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__6879 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$ = true;
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__6880 = this;
  return cljs.core.list.call(null, this__6880.key, this__6880.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$ = true;
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__6882 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$ = true;
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__6883 = this;
  return this__6883.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__6884 = this;
  return cljs.core.PersistentVector.fromArray([this__6884.key])
};
cljs.core.RedNode.prototype.cljs$core$IVector$ = true;
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__6885 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__6885.key, this__6885.val]), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$ = true;
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6886 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$ = true;
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__6887 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__6887.key, this__6887.val]), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$ = true;
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__6888 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$ = true;
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__6889 = this;
  if(n === 0) {
    return this__6889.key
  }else {
    if(n === 1) {
      return this__6889.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__6890 = this;
  if(n === 0) {
    return this__6890.key
  }else {
    if(n === 1) {
      return this__6890.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__6881 = this;
  return cljs.core.PersistentVector.fromArray([])
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__6893 = comp.call(null, k, tree.key);
    if(c__6893 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__6893 < 0) {
        var ins__6894 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(ins__6894 != null) {
          return tree.add_left(ins__6894)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__6895 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(ins__6895 != null) {
            return tree.add_right(ins__6895)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__6896 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__6896)) {
            return new cljs.core.RedNode(app__6896.key, app__6896.val, new cljs.core.RedNode(left.key, left.val, left.left, app__6896.left), new cljs.core.RedNode(right.key, right.val, app__6896.right, right.right), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__6896, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__6897 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__6897)) {
              return new cljs.core.RedNode(app__6897.key, app__6897.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__6897.left, null), new cljs.core.BlackNode(right.key, right.val, app__6897.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__6897, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(tree != null) {
    var c__6898 = comp.call(null, k, tree.key);
    if(c__6898 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__6898 < 0) {
        var del__6899 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____6900 = del__6899 != null;
          if(or__3824__auto____6900) {
            return or__3824__auto____6900
          }else {
            return found[0] != null
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__6899, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__6899, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__6901 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____6902 = del__6901 != null;
            if(or__3824__auto____6902) {
              return or__3824__auto____6902
            }else {
              return found[0] != null
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__6901)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__6901, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__6903 = tree.key;
  var c__6904 = comp.call(null, k, tk__6903);
  if(c__6904 === 0) {
    return tree.replace(tk__6903, v, tree.left, tree.right)
  }else {
    if(c__6904 < 0) {
      return tree.replace(tk__6903, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__6903, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 209388431
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__6909 = this;
  var h__364__auto____6910 = this__6909.__hash;
  if(h__364__auto____6910 != null) {
    return h__364__auto____6910
  }else {
    var h__364__auto____6911 = cljs.core.hash_imap.call(null, coll);
    this__6909.__hash = h__364__auto____6911;
    return h__364__auto____6911
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__6912 = this;
  return cljs.core._lookup.call(null, coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__6913 = this;
  var n__6914 = coll.entry_at(k);
  if(n__6914 != null) {
    return n__6914.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__6915 = this;
  var found__6916 = [null];
  var t__6917 = cljs.core.tree_map_add.call(null, this__6915.comp, this__6915.tree, k, v, found__6916);
  if(t__6917 == null) {
    var found_node__6918 = cljs.core.nth.call(null, found__6916, 0);
    if(cljs.core._EQ_.call(null, v, found_node__6918.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__6915.comp, cljs.core.tree_map_replace.call(null, this__6915.comp, this__6915.tree, k, v), this__6915.cnt, this__6915.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__6915.comp, t__6917.blacken(), this__6915.cnt + 1, this__6915.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__6919 = this;
  return coll.entry_at(k) != null
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$ = true;
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__6951 = null;
  var G__6951__2 = function(tsym6907, k) {
    var this__6920 = this;
    var tsym6907__6921 = this;
    var coll__6922 = tsym6907__6921;
    return cljs.core._lookup.call(null, coll__6922, k)
  };
  var G__6951__3 = function(tsym6908, k, not_found) {
    var this__6923 = this;
    var tsym6908__6924 = this;
    var coll__6925 = tsym6908__6924;
    return cljs.core._lookup.call(null, coll__6925, k, not_found)
  };
  G__6951 = function(tsym6908, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6951__2.call(this, tsym6908, k);
      case 3:
        return G__6951__3.call(this, tsym6908, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__6951
}();
cljs.core.PersistentTreeMap.prototype.apply = function(tsym6905, args6906) {
  return tsym6905.call.apply(tsym6905, [tsym6905].concat(cljs.core.aclone.call(null, args6906)))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__6926 = this;
  if(this__6926.tree != null) {
    return cljs.core.tree_map_kv_reduce.call(null, this__6926.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__6927 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__6928 = this;
  if(this__6928.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__6928.tree, false, this__6928.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__6929 = this;
  var this$__6930 = this;
  return cljs.core.pr_str.call(null, this$__6930)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__6931 = this;
  var coll__6932 = this;
  var t__6933 = this__6931.tree;
  while(true) {
    if(t__6933 != null) {
      var c__6934 = this__6931.comp.call(null, k, t__6933.key);
      if(c__6934 === 0) {
        return t__6933
      }else {
        if(c__6934 < 0) {
          var G__6952 = t__6933.left;
          t__6933 = G__6952;
          continue
        }else {
          if("\ufdd0'else") {
            var G__6953 = t__6933.right;
            t__6933 = G__6953;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__6935 = this;
  if(this__6935.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__6935.tree, ascending_QMARK_, this__6935.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__6936 = this;
  if(this__6936.cnt > 0) {
    var stack__6937 = null;
    var t__6938 = this__6936.tree;
    while(true) {
      if(t__6938 != null) {
        var c__6939 = this__6936.comp.call(null, k, t__6938.key);
        if(c__6939 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__6937, t__6938), ascending_QMARK_, -1)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__6939 < 0) {
              var G__6954 = cljs.core.conj.call(null, stack__6937, t__6938);
              var G__6955 = t__6938.left;
              stack__6937 = G__6954;
              t__6938 = G__6955;
              continue
            }else {
              var G__6956 = stack__6937;
              var G__6957 = t__6938.right;
              stack__6937 = G__6956;
              t__6938 = G__6957;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__6939 > 0) {
                var G__6958 = cljs.core.conj.call(null, stack__6937, t__6938);
                var G__6959 = t__6938.right;
                stack__6937 = G__6958;
                t__6938 = G__6959;
                continue
              }else {
                var G__6960 = stack__6937;
                var G__6961 = t__6938.left;
                stack__6937 = G__6960;
                t__6938 = G__6961;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__6937 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__6937, ascending_QMARK_, -1)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__6940 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__6941 = this;
  return this__6941.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__6942 = this;
  if(this__6942.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__6942.tree, true, this__6942.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__6943 = this;
  return this__6943.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__6944 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__6945 = this;
  return new cljs.core.PersistentTreeMap(this__6945.comp, this__6945.tree, this__6945.cnt, meta, this__6945.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__6949 = this;
  return this__6949.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__6950 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__6950.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__6946 = this;
  var found__6947 = [null];
  var t__6948 = cljs.core.tree_map_remove.call(null, this__6946.comp, this__6946.tree, k, found__6947);
  if(t__6948 == null) {
    if(cljs.core.nth.call(null, found__6947, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__6946.comp, null, 0, this__6946.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__6946.comp, t__6948.blacken(), this__6946.cnt - 1, this__6946.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$__6962 = cljs.core.seq.call(null, keyvals);
    var out__6963 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(cljs.core.truth_(in$__6962)) {
        var G__6964 = cljs.core.nnext.call(null, in$__6962);
        var G__6965 = cljs.core.assoc_BANG_.call(null, out__6963, cljs.core.first.call(null, in$__6962), cljs.core.second.call(null, in$__6962));
        in$__6962 = G__6964;
        out__6963 = G__6965;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__6963)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__6966) {
    var keyvals = cljs.core.seq(arglist__6966);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__6967) {
    var keyvals = cljs.core.seq(arglist__6967);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$__6968 = cljs.core.seq.call(null, keyvals);
    var out__6969 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(cljs.core.truth_(in$__6968)) {
        var G__6970 = cljs.core.nnext.call(null, in$__6968);
        var G__6971 = cljs.core.assoc.call(null, out__6969, cljs.core.first.call(null, in$__6968), cljs.core.second.call(null, in$__6968));
        in$__6968 = G__6970;
        out__6969 = G__6971;
        continue
      }else {
        return out__6969
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__6972) {
    var keyvals = cljs.core.seq(arglist__6972);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$__6973 = cljs.core.seq.call(null, keyvals);
    var out__6974 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(cljs.core.truth_(in$__6973)) {
        var G__6975 = cljs.core.nnext.call(null, in$__6973);
        var G__6976 = cljs.core.assoc.call(null, out__6974, cljs.core.first.call(null, in$__6973), cljs.core.second.call(null, in$__6973));
        in$__6973 = G__6975;
        out__6974 = G__6976;
        continue
      }else {
        return out__6974
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__6977) {
    var comparator = cljs.core.first(arglist__6977);
    var keyvals = cljs.core.rest(arglist__6977);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__6978_SHARP_, p2__6979_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____6980 = p1__6978_SHARP_;
          if(cljs.core.truth_(or__3824__auto____6980)) {
            return or__3824__auto____6980
          }else {
            return cljs.core.ObjMap.fromObject([], {})
          }
        }(), p2__6979_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__6981) {
    var maps = cljs.core.seq(arglist__6981);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__6984 = function(m, e) {
        var k__6982 = cljs.core.first.call(null, e);
        var v__6983 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__6982)) {
          return cljs.core.assoc.call(null, m, k__6982, f.call(null, cljs.core.get.call(null, m, k__6982), v__6983))
        }else {
          return cljs.core.assoc.call(null, m, k__6982, v__6983)
        }
      };
      var merge2__6986 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__6984, function() {
          var or__3824__auto____6985 = m1;
          if(cljs.core.truth_(or__3824__auto____6985)) {
            return or__3824__auto____6985
          }else {
            return cljs.core.ObjMap.fromObject([], {})
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__6986, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__6987) {
    var f = cljs.core.first(arglist__6987);
    var maps = cljs.core.rest(arglist__6987);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__6988 = cljs.core.ObjMap.fromObject([], {});
  var keys__6989 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(cljs.core.truth_(keys__6989)) {
      var key__6990 = cljs.core.first.call(null, keys__6989);
      var entry__6991 = cljs.core.get.call(null, map, key__6990, "\ufdd0'user/not-found");
      var G__6992 = cljs.core.not_EQ_.call(null, entry__6991, "\ufdd0'user/not-found") ? cljs.core.assoc.call(null, ret__6988, key__6990, entry__6991) : ret__6988;
      var G__6993 = cljs.core.next.call(null, keys__6989);
      ret__6988 = G__6992;
      keys__6989 = G__6993;
      continue
    }else {
      return ret__6988
    }
    break
  }
};
void 0;
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155022479
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__6999 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__6999.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7000 = this;
  var h__364__auto____7001 = this__7000.__hash;
  if(h__364__auto____7001 != null) {
    return h__364__auto____7001
  }else {
    var h__364__auto____7002 = cljs.core.hash_iset.call(null, coll);
    this__7000.__hash = h__364__auto____7002;
    return h__364__auto____7002
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__7003 = this;
  return cljs.core._lookup.call(null, coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__7004 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__7004.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$ = true;
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__7023 = null;
  var G__7023__2 = function(tsym6997, k) {
    var this__7005 = this;
    var tsym6997__7006 = this;
    var coll__7007 = tsym6997__7006;
    return cljs.core._lookup.call(null, coll__7007, k)
  };
  var G__7023__3 = function(tsym6998, k, not_found) {
    var this__7008 = this;
    var tsym6998__7009 = this;
    var coll__7010 = tsym6998__7009;
    return cljs.core._lookup.call(null, coll__7010, k, not_found)
  };
  G__7023 = function(tsym6998, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7023__2.call(this, tsym6998, k);
      case 3:
        return G__7023__3.call(this, tsym6998, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7023
}();
cljs.core.PersistentHashSet.prototype.apply = function(tsym6995, args6996) {
  return tsym6995.call.apply(tsym6995, [tsym6995].concat(cljs.core.aclone.call(null, args6996)))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7011 = this;
  return new cljs.core.PersistentHashSet(this__7011.meta, cljs.core.assoc.call(null, this__7011.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__7012 = this;
  var this$__7013 = this;
  return cljs.core.pr_str.call(null, this$__7013)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7014 = this;
  return cljs.core.keys.call(null, this__7014.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__7015 = this;
  return new cljs.core.PersistentHashSet(this__7015.meta, cljs.core.dissoc.call(null, this__7015.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7016 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7017 = this;
  var and__3822__auto____7018 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____7018) {
    var and__3822__auto____7019 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____7019) {
      return cljs.core.every_QMARK_.call(null, function(p1__6994_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__6994_SHARP_)
      }, other)
    }else {
      return and__3822__auto____7019
    }
  }else {
    return and__3822__auto____7018
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7020 = this;
  return new cljs.core.PersistentHashSet(meta, this__7020.hash_map, this__7020.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7021 = this;
  return this__7021.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7022 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__7022.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 131;
  this.cljs$lang$protocol_mask$partition1$ = 17
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.TransientHashSet")
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$ = true;
cljs.core.TransientHashSet.prototype.call = function() {
  var G__7041 = null;
  var G__7041__2 = function(tsym7027, k) {
    var this__7029 = this;
    var tsym7027__7030 = this;
    var tcoll__7031 = tsym7027__7030;
    if(cljs.core._lookup.call(null, this__7029.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__7041__3 = function(tsym7028, k, not_found) {
    var this__7032 = this;
    var tsym7028__7033 = this;
    var tcoll__7034 = tsym7028__7033;
    if(cljs.core._lookup.call(null, this__7032.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__7041 = function(tsym7028, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7041__2.call(this, tsym7028, k);
      case 3:
        return G__7041__3.call(this, tsym7028, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7041
}();
cljs.core.TransientHashSet.prototype.apply = function(tsym7025, args7026) {
  return tsym7025.call.apply(tsym7025, [tsym7025].concat(cljs.core.aclone.call(null, args7026)))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$ = true;
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__7035 = this;
  return cljs.core._lookup.call(null, tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__7036 = this;
  if(cljs.core._lookup.call(null, this__7036.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$ = true;
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__7037 = this;
  return cljs.core.count.call(null, this__7037.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$ = true;
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__7038 = this;
  this__7038.transient_map = cljs.core.dissoc_BANG_.call(null, this__7038.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$ = true;
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__7039 = this;
  this__7039.transient_map = cljs.core.assoc_BANG_.call(null, this__7039.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__7040 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__7040.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 208865423
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7046 = this;
  var h__364__auto____7047 = this__7046.__hash;
  if(h__364__auto____7047 != null) {
    return h__364__auto____7047
  }else {
    var h__364__auto____7048 = cljs.core.hash_iset.call(null, coll);
    this__7046.__hash = h__364__auto____7048;
    return h__364__auto____7048
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__7049 = this;
  return cljs.core._lookup.call(null, coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__7050 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__7050.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$ = true;
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__7074 = null;
  var G__7074__2 = function(tsym7044, k) {
    var this__7051 = this;
    var tsym7044__7052 = this;
    var coll__7053 = tsym7044__7052;
    return cljs.core._lookup.call(null, coll__7053, k)
  };
  var G__7074__3 = function(tsym7045, k, not_found) {
    var this__7054 = this;
    var tsym7045__7055 = this;
    var coll__7056 = tsym7045__7055;
    return cljs.core._lookup.call(null, coll__7056, k, not_found)
  };
  G__7074 = function(tsym7045, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7074__2.call(this, tsym7045, k);
      case 3:
        return G__7074__3.call(this, tsym7045, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7074
}();
cljs.core.PersistentTreeSet.prototype.apply = function(tsym7042, args7043) {
  return tsym7042.call.apply(tsym7042, [tsym7042].concat(cljs.core.aclone.call(null, args7043)))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7057 = this;
  return new cljs.core.PersistentTreeSet(this__7057.meta, cljs.core.assoc.call(null, this__7057.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7058 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__7058.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__7059 = this;
  var this$__7060 = this;
  return cljs.core.pr_str.call(null, this$__7060)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__7061 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__7061.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__7062 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__7062.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__7063 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__7064 = this;
  return cljs.core._comparator.call(null, this__7064.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__7065 = this;
  return cljs.core.keys.call(null, this__7065.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__7066 = this;
  return new cljs.core.PersistentTreeSet(this__7066.meta, cljs.core.dissoc.call(null, this__7066.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__7067 = this;
  return cljs.core.count.call(null, this__7067.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7068 = this;
  var and__3822__auto____7069 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____7069) {
    var and__3822__auto____7070 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____7070) {
      return cljs.core.every_QMARK_.call(null, function(p1__7024_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__7024_SHARP_)
      }, other)
    }else {
      return and__3822__auto____7070
    }
  }else {
    return and__3822__auto____7069
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__7071 = this;
  return new cljs.core.PersistentTreeSet(meta, this__7071.tree_map, this__7071.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__7072 = this;
  return this__7072.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__7073 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__7073.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.set = function set(coll) {
  var in$__7075 = cljs.core.seq.call(null, coll);
  var out__7076 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(cljs.core.truth_(cljs.core.seq.call(null, in$__7075))) {
      var G__7077 = cljs.core.next.call(null, in$__7075);
      var G__7078 = cljs.core.conj_BANG_.call(null, out__7076, cljs.core.first.call(null, in$__7075));
      in$__7075 = G__7077;
      out__7076 = G__7078;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__7076)
    }
    break
  }
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__7079) {
    var keys = cljs.core.seq(arglist__7079);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__7081) {
    var comparator = cljs.core.first(arglist__7081);
    var keys = cljs.core.rest(arglist__7081);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__7082 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____7083 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____7083)) {
        var e__7084 = temp__3971__auto____7083;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__7084))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__7082, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__7080_SHARP_) {
      var temp__3971__auto____7085 = cljs.core.find.call(null, smap, p1__7080_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____7085)) {
        var e__7086 = temp__3971__auto____7085;
        return cljs.core.second.call(null, e__7086)
      }else {
        return p1__7080_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__7094 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__7087, seen) {
        while(true) {
          var vec__7088__7089 = p__7087;
          var f__7090 = cljs.core.nth.call(null, vec__7088__7089, 0, null);
          var xs__7091 = vec__7088__7089;
          var temp__3974__auto____7092 = cljs.core.seq.call(null, xs__7091);
          if(cljs.core.truth_(temp__3974__auto____7092)) {
            var s__7093 = temp__3974__auto____7092;
            if(cljs.core.contains_QMARK_.call(null, seen, f__7090)) {
              var G__7095 = cljs.core.rest.call(null, s__7093);
              var G__7096 = seen;
              p__7087 = G__7095;
              seen = G__7096;
              continue
            }else {
              return cljs.core.cons.call(null, f__7090, step.call(null, cljs.core.rest.call(null, s__7093), cljs.core.conj.call(null, seen, f__7090)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    })
  };
  return step__7094.call(null, coll, cljs.core.set([]))
};
cljs.core.butlast = function butlast(s) {
  var ret__7097 = cljs.core.PersistentVector.fromArray([]);
  var s__7098 = s;
  while(true) {
    if(cljs.core.truth_(cljs.core.next.call(null, s__7098))) {
      var G__7099 = cljs.core.conj.call(null, ret__7097, cljs.core.first.call(null, s__7098));
      var G__7100 = cljs.core.next.call(null, s__7098);
      ret__7097 = G__7099;
      s__7098 = G__7100;
      continue
    }else {
      return cljs.core.seq.call(null, ret__7097)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____7101 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____7101) {
        return or__3824__auto____7101
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__7102 = x.lastIndexOf("/");
      if(i__7102 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__7102 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____7103 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____7103) {
      return or__3824__auto____7103
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__7104 = x.lastIndexOf("/");
    if(i__7104 > -1) {
      return cljs.core.subs.call(null, x, 2, i__7104)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__7107 = cljs.core.ObjMap.fromObject([], {});
  var ks__7108 = cljs.core.seq.call(null, keys);
  var vs__7109 = cljs.core.seq.call(null, vals);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7110 = ks__7108;
      if(cljs.core.truth_(and__3822__auto____7110)) {
        return vs__7109
      }else {
        return and__3822__auto____7110
      }
    }())) {
      var G__7111 = cljs.core.assoc.call(null, map__7107, cljs.core.first.call(null, ks__7108), cljs.core.first.call(null, vs__7109));
      var G__7112 = cljs.core.next.call(null, ks__7108);
      var G__7113 = cljs.core.next.call(null, vs__7109);
      map__7107 = G__7111;
      ks__7108 = G__7112;
      vs__7109 = G__7113;
      continue
    }else {
      return map__7107
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__7116__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__7105_SHARP_, p2__7106_SHARP_) {
        return max_key.call(null, k, p1__7105_SHARP_, p2__7106_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__7116 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7116__delegate.call(this, k, x, y, more)
    };
    G__7116.cljs$lang$maxFixedArity = 3;
    G__7116.cljs$lang$applyTo = function(arglist__7117) {
      var k = cljs.core.first(arglist__7117);
      var x = cljs.core.first(cljs.core.next(arglist__7117));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7117)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7117)));
      return G__7116__delegate(k, x, y, more)
    };
    G__7116.cljs$lang$arity$variadic = G__7116__delegate;
    return G__7116
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__7118__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__7114_SHARP_, p2__7115_SHARP_) {
        return min_key.call(null, k, p1__7114_SHARP_, p2__7115_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__7118 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7118__delegate.call(this, k, x, y, more)
    };
    G__7118.cljs$lang$maxFixedArity = 3;
    G__7118.cljs$lang$applyTo = function(arglist__7119) {
      var k = cljs.core.first(arglist__7119);
      var x = cljs.core.first(cljs.core.next(arglist__7119));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7119)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7119)));
      return G__7118__delegate(k, x, y, more)
    };
    G__7118.cljs$lang$arity$variadic = G__7118__delegate;
    return G__7118
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____7120 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____7120)) {
        var s__7121 = temp__3974__auto____7120;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__7121), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__7121)))
      }else {
        return null
      }
    })
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____7122 = cljs.core.seq.call(null, coll);
    if(cljs.core.truth_(temp__3974__auto____7122)) {
      var s__7123 = temp__3974__auto____7122;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__7123)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__7123), take_while.call(null, pred, cljs.core.rest.call(null, s__7123)))
      }else {
        return null
      }
    }else {
      return null
    }
  })
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__7124 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__7124.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__7125 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____7126 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____7126)) {
        var vec__7127__7128 = temp__3974__auto____7126;
        var e__7129 = cljs.core.nth.call(null, vec__7127__7128, 0, null);
        var s__7130 = vec__7127__7128;
        if(cljs.core.truth_(include__7125.call(null, e__7129))) {
          return s__7130
        }else {
          return cljs.core.next.call(null, s__7130)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__7125, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____7131 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____7131)) {
      var vec__7132__7133 = temp__3974__auto____7131;
      var e__7134 = cljs.core.nth.call(null, vec__7132__7133, 0, null);
      var s__7135 = vec__7132__7133;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__7134)) ? s__7135 : cljs.core.next.call(null, s__7135))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__7136 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____7137 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____7137)) {
        var vec__7138__7139 = temp__3974__auto____7137;
        var e__7140 = cljs.core.nth.call(null, vec__7138__7139, 0, null);
        var s__7141 = vec__7138__7139;
        if(cljs.core.truth_(include__7136.call(null, e__7140))) {
          return s__7141
        }else {
          return cljs.core.next.call(null, s__7141)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__7136, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____7142 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____7142)) {
      var vec__7143__7144 = temp__3974__auto____7142;
      var e__7145 = cljs.core.nth.call(null, vec__7143__7144, 0, null);
      var s__7146 = vec__7143__7144;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__7145)) ? s__7146 : cljs.core.next.call(null, s__7146))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 16187486
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.Range")
};
cljs.core.Range.prototype.cljs$core$IHash$ = true;
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__7147 = this;
  var h__364__auto____7148 = this__7147.__hash;
  if(h__364__auto____7148 != null) {
    return h__364__auto____7148
  }else {
    var h__364__auto____7149 = cljs.core.hash_coll.call(null, rng);
    this__7147.__hash = h__364__auto____7149;
    return h__364__auto____7149
  }
};
cljs.core.Range.prototype.cljs$core$ISequential$ = true;
cljs.core.Range.prototype.cljs$core$ICollection$ = true;
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__7150 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__7151 = this;
  var this$__7152 = this;
  return cljs.core.pr_str.call(null, this$__7152)
};
cljs.core.Range.prototype.cljs$core$IReduce$ = true;
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__7153 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__7154 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$ = true;
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__7155 = this;
  var comp__7156 = this__7155.step > 0 ? cljs.core._LT_ : cljs.core._GT_;
  if(cljs.core.truth_(comp__7156.call(null, this__7155.start, this__7155.end))) {
    return rng
  }else {
    return null
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$ = true;
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__7157 = this;
  if(cljs.core.not.call(null, cljs.core._seq.call(null, rng))) {
    return 0
  }else {
    return Math["ceil"]((this__7157.end - this__7157.start) / this__7157.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$ = true;
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__7158 = this;
  return this__7158.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__7159 = this;
  if(cljs.core.truth_(cljs.core._seq.call(null, rng))) {
    return new cljs.core.Range(this__7159.meta, this__7159.start + this__7159.step, this__7159.end, this__7159.step, null)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$ = true;
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__7160 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$ = true;
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__7161 = this;
  return new cljs.core.Range(meta, this__7161.start, this__7161.end, this__7161.step, this__7161.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$ = true;
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__7162 = this;
  return this__7162.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$ = true;
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__7163 = this;
  if(n < cljs.core._count.call(null, rng)) {
    return this__7163.start + n * this__7163.step
  }else {
    if(function() {
      var and__3822__auto____7164 = this__7163.start > this__7163.end;
      if(and__3822__auto____7164) {
        return this__7163.step === 0
      }else {
        return and__3822__auto____7164
      }
    }()) {
      return this__7163.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__7165 = this;
  if(n < cljs.core._count.call(null, rng)) {
    return this__7165.start + n * this__7165.step
  }else {
    if(function() {
      var and__3822__auto____7166 = this__7165.start > this__7165.end;
      if(and__3822__auto____7166) {
        return this__7165.step === 0
      }else {
        return and__3822__auto____7166
      }
    }()) {
      return this__7165.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$ = true;
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__7167 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__7167.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number["MAX_VALUE"], 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____7168 = cljs.core.seq.call(null, coll);
    if(cljs.core.truth_(temp__3974__auto____7168)) {
      var s__7169 = temp__3974__auto____7168;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__7169), take_nth.call(null, n, cljs.core.drop.call(null, n, s__7169)))
    }else {
      return null
    }
  })
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)])
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____7171 = cljs.core.seq.call(null, coll);
    if(cljs.core.truth_(temp__3974__auto____7171)) {
      var s__7172 = temp__3974__auto____7171;
      var fst__7173 = cljs.core.first.call(null, s__7172);
      var fv__7174 = f.call(null, fst__7173);
      var run__7175 = cljs.core.cons.call(null, fst__7173, cljs.core.take_while.call(null, function(p1__7170_SHARP_) {
        return cljs.core._EQ_.call(null, fv__7174, f.call(null, p1__7170_SHARP_))
      }, cljs.core.next.call(null, s__7172)));
      return cljs.core.cons.call(null, run__7175, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__7175), s__7172))))
    }else {
      return null
    }
  })
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.fromObject([], {})), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____7186 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3971__auto____7186)) {
        var s__7187 = temp__3971__auto____7186;
        return reductions.call(null, f, cljs.core.first.call(null, s__7187), cljs.core.rest.call(null, s__7187))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    })
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____7188 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(temp__3974__auto____7188)) {
        var s__7189 = temp__3974__auto____7188;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__7189)), cljs.core.rest.call(null, s__7189))
      }else {
        return null
      }
    }))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__7191 = null;
      var G__7191__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__7191__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__7191__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__7191__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__7191__4 = function() {
        var G__7192__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__7192 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7192__delegate.call(this, x, y, z, args)
        };
        G__7192.cljs$lang$maxFixedArity = 3;
        G__7192.cljs$lang$applyTo = function(arglist__7193) {
          var x = cljs.core.first(arglist__7193);
          var y = cljs.core.first(cljs.core.next(arglist__7193));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7193)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7193)));
          return G__7192__delegate(x, y, z, args)
        };
        G__7192.cljs$lang$arity$variadic = G__7192__delegate;
        return G__7192
      }();
      G__7191 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7191__0.call(this);
          case 1:
            return G__7191__1.call(this, x);
          case 2:
            return G__7191__2.call(this, x, y);
          case 3:
            return G__7191__3.call(this, x, y, z);
          default:
            return G__7191__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7191.cljs$lang$maxFixedArity = 3;
      G__7191.cljs$lang$applyTo = G__7191__4.cljs$lang$applyTo;
      return G__7191
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__7194 = null;
      var G__7194__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__7194__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__7194__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__7194__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__7194__4 = function() {
        var G__7195__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__7195 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7195__delegate.call(this, x, y, z, args)
        };
        G__7195.cljs$lang$maxFixedArity = 3;
        G__7195.cljs$lang$applyTo = function(arglist__7196) {
          var x = cljs.core.first(arglist__7196);
          var y = cljs.core.first(cljs.core.next(arglist__7196));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7196)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7196)));
          return G__7195__delegate(x, y, z, args)
        };
        G__7195.cljs$lang$arity$variadic = G__7195__delegate;
        return G__7195
      }();
      G__7194 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7194__0.call(this);
          case 1:
            return G__7194__1.call(this, x);
          case 2:
            return G__7194__2.call(this, x, y);
          case 3:
            return G__7194__3.call(this, x, y, z);
          default:
            return G__7194__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7194.cljs$lang$maxFixedArity = 3;
      G__7194.cljs$lang$applyTo = G__7194__4.cljs$lang$applyTo;
      return G__7194
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__7197 = null;
      var G__7197__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__7197__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__7197__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__7197__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__7197__4 = function() {
        var G__7198__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__7198 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__7198__delegate.call(this, x, y, z, args)
        };
        G__7198.cljs$lang$maxFixedArity = 3;
        G__7198.cljs$lang$applyTo = function(arglist__7199) {
          var x = cljs.core.first(arglist__7199);
          var y = cljs.core.first(cljs.core.next(arglist__7199));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7199)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7199)));
          return G__7198__delegate(x, y, z, args)
        };
        G__7198.cljs$lang$arity$variadic = G__7198__delegate;
        return G__7198
      }();
      G__7197 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7197__0.call(this);
          case 1:
            return G__7197__1.call(this, x);
          case 2:
            return G__7197__2.call(this, x, y);
          case 3:
            return G__7197__3.call(this, x, y, z);
          default:
            return G__7197__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__7197.cljs$lang$maxFixedArity = 3;
      G__7197.cljs$lang$applyTo = G__7197__4.cljs$lang$applyTo;
      return G__7197
    }()
  };
  var juxt__4 = function() {
    var G__7200__delegate = function(f, g, h, fs) {
      var fs__7190 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__7201 = null;
        var G__7201__0 = function() {
          return cljs.core.reduce.call(null, function(p1__7176_SHARP_, p2__7177_SHARP_) {
            return cljs.core.conj.call(null, p1__7176_SHARP_, p2__7177_SHARP_.call(null))
          }, cljs.core.PersistentVector.fromArray([]), fs__7190)
        };
        var G__7201__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__7178_SHARP_, p2__7179_SHARP_) {
            return cljs.core.conj.call(null, p1__7178_SHARP_, p2__7179_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.fromArray([]), fs__7190)
        };
        var G__7201__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__7180_SHARP_, p2__7181_SHARP_) {
            return cljs.core.conj.call(null, p1__7180_SHARP_, p2__7181_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.fromArray([]), fs__7190)
        };
        var G__7201__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__7182_SHARP_, p2__7183_SHARP_) {
            return cljs.core.conj.call(null, p1__7182_SHARP_, p2__7183_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.fromArray([]), fs__7190)
        };
        var G__7201__4 = function() {
          var G__7202__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__7184_SHARP_, p2__7185_SHARP_) {
              return cljs.core.conj.call(null, p1__7184_SHARP_, cljs.core.apply.call(null, p2__7185_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.fromArray([]), fs__7190)
          };
          var G__7202 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__7202__delegate.call(this, x, y, z, args)
          };
          G__7202.cljs$lang$maxFixedArity = 3;
          G__7202.cljs$lang$applyTo = function(arglist__7203) {
            var x = cljs.core.first(arglist__7203);
            var y = cljs.core.first(cljs.core.next(arglist__7203));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7203)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7203)));
            return G__7202__delegate(x, y, z, args)
          };
          G__7202.cljs$lang$arity$variadic = G__7202__delegate;
          return G__7202
        }();
        G__7201 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__7201__0.call(this);
            case 1:
              return G__7201__1.call(this, x);
            case 2:
              return G__7201__2.call(this, x, y);
            case 3:
              return G__7201__3.call(this, x, y, z);
            default:
              return G__7201__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__7201.cljs$lang$maxFixedArity = 3;
        G__7201.cljs$lang$applyTo = G__7201__4.cljs$lang$applyTo;
        return G__7201
      }()
    };
    var G__7200 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__7200__delegate.call(this, f, g, h, fs)
    };
    G__7200.cljs$lang$maxFixedArity = 3;
    G__7200.cljs$lang$applyTo = function(arglist__7204) {
      var f = cljs.core.first(arglist__7204);
      var g = cljs.core.first(cljs.core.next(arglist__7204));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7204)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7204)));
      return G__7200__delegate(f, g, h, fs)
    };
    G__7200.cljs$lang$arity$variadic = G__7200__delegate;
    return G__7200
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.truth_(cljs.core.seq.call(null, coll))) {
        var G__7206 = cljs.core.next.call(null, coll);
        coll = G__7206;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____7205 = cljs.core.seq.call(null, coll);
        if(cljs.core.truth_(and__3822__auto____7205)) {
          return n > 0
        }else {
          return and__3822__auto____7205
        }
      }())) {
        var G__7207 = n - 1;
        var G__7208 = cljs.core.next.call(null, coll);
        n = G__7207;
        coll = G__7208;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.re_matches = function re_matches(re, s) {
  var matches__7209 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__7209), s)) {
    if(cljs.core.count.call(null, matches__7209) === 1) {
      return cljs.core.first.call(null, matches__7209)
    }else {
      return cljs.core.vec.call(null, matches__7209)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__7210 = re.exec(s);
  if(matches__7210 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__7210) === 1) {
      return cljs.core.first.call(null, matches__7210)
    }else {
      return cljs.core.vec.call(null, matches__7210)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__7211 = cljs.core.re_find.call(null, re, s);
  var match_idx__7212 = s.search(re);
  var match_str__7213 = cljs.core.coll_QMARK_.call(null, match_data__7211) ? cljs.core.first.call(null, match_data__7211) : match_data__7211;
  var post_match__7214 = cljs.core.subs.call(null, s, match_idx__7212 + cljs.core.count.call(null, match_str__7213));
  if(cljs.core.truth_(match_data__7211)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__7211, re_seq.call(null, re, post_match__7214))
    })
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__7216__7217 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___7218 = cljs.core.nth.call(null, vec__7216__7217, 0, null);
  var flags__7219 = cljs.core.nth.call(null, vec__7216__7217, 1, null);
  var pattern__7220 = cljs.core.nth.call(null, vec__7216__7217, 2, null);
  return new RegExp(pattern__7220, flags__7219)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin]), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep]), cljs.core.map.call(null, function(p1__7215_SHARP_) {
    return print_one.call(null, p1__7215_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end]))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____7221 = cljs.core.get.call(null, opts, "\ufdd0'meta");
          if(cljs.core.truth_(and__3822__auto____7221)) {
            var and__3822__auto____7225 = function() {
              var G__7222__7223 = obj;
              if(G__7222__7223 != null) {
                if(function() {
                  var or__3824__auto____7224 = G__7222__7223.cljs$lang$protocol_mask$partition0$ & 65536;
                  if(or__3824__auto____7224) {
                    return or__3824__auto____7224
                  }else {
                    return G__7222__7223.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__7222__7223.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7222__7223)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__7222__7223)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____7225)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____7225
            }
          }else {
            return and__3822__auto____7221
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"]), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "])) : null, cljs.core.truth_(function() {
          var and__3822__auto____7226 = obj != null;
          if(and__3822__auto____7226) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____7226
          }
        }()) ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__7227__7228 = obj;
          if(G__7227__7228 != null) {
            if(function() {
              var or__3824__auto____7229 = G__7227__7228.cljs$lang$protocol_mask$partition0$ & 268435456;
              if(or__3824__auto____7229) {
                return or__3824__auto____7229
              }else {
                return G__7227__7228.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__7227__7228.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__7227__7228)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__7227__7228)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var first_obj__7230 = cljs.core.first.call(null, objs);
  var sb__7231 = new goog.string.StringBuffer;
  var G__7232__7233 = cljs.core.seq.call(null, objs);
  if(cljs.core.truth_(G__7232__7233)) {
    var obj__7234 = cljs.core.first.call(null, G__7232__7233);
    var G__7232__7235 = G__7232__7233;
    while(true) {
      if(obj__7234 === first_obj__7230) {
      }else {
        sb__7231.append(" ")
      }
      var G__7236__7237 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__7234, opts));
      if(cljs.core.truth_(G__7236__7237)) {
        var string__7238 = cljs.core.first.call(null, G__7236__7237);
        var G__7236__7239 = G__7236__7237;
        while(true) {
          sb__7231.append(string__7238);
          var temp__3974__auto____7240 = cljs.core.next.call(null, G__7236__7239);
          if(cljs.core.truth_(temp__3974__auto____7240)) {
            var G__7236__7241 = temp__3974__auto____7240;
            var G__7244 = cljs.core.first.call(null, G__7236__7241);
            var G__7245 = G__7236__7241;
            string__7238 = G__7244;
            G__7236__7239 = G__7245;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____7242 = cljs.core.next.call(null, G__7232__7235);
      if(cljs.core.truth_(temp__3974__auto____7242)) {
        var G__7232__7243 = temp__3974__auto____7242;
        var G__7246 = cljs.core.first.call(null, G__7232__7243);
        var G__7247 = G__7232__7243;
        obj__7234 = G__7246;
        G__7232__7235 = G__7247;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__7231
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__7248 = cljs.core.pr_sb.call(null, objs, opts);
  sb__7248.append("\n");
  return[cljs.core.str(sb__7248)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var first_obj__7249 = cljs.core.first.call(null, objs);
  var G__7250__7251 = cljs.core.seq.call(null, objs);
  if(cljs.core.truth_(G__7250__7251)) {
    var obj__7252 = cljs.core.first.call(null, G__7250__7251);
    var G__7250__7253 = G__7250__7251;
    while(true) {
      if(obj__7252 === first_obj__7249) {
      }else {
        cljs.core.string_print.call(null, " ")
      }
      var G__7254__7255 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__7252, opts));
      if(cljs.core.truth_(G__7254__7255)) {
        var string__7256 = cljs.core.first.call(null, G__7254__7255);
        var G__7254__7257 = G__7254__7255;
        while(true) {
          cljs.core.string_print.call(null, string__7256);
          var temp__3974__auto____7258 = cljs.core.next.call(null, G__7254__7257);
          if(cljs.core.truth_(temp__3974__auto____7258)) {
            var G__7254__7259 = temp__3974__auto____7258;
            var G__7262 = cljs.core.first.call(null, G__7254__7259);
            var G__7263 = G__7254__7259;
            string__7256 = G__7262;
            G__7254__7257 = G__7263;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____7260 = cljs.core.next.call(null, G__7250__7253);
      if(cljs.core.truth_(temp__3974__auto____7260)) {
        var G__7250__7261 = temp__3974__auto____7260;
        var G__7264 = cljs.core.first.call(null, G__7250__7261);
        var G__7265 = G__7250__7261;
        obj__7252 = G__7264;
        G__7250__7253 = G__7265;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, "\ufdd0'flush-on-newline"))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__7266) {
    var objs = cljs.core.seq(arglist__7266);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__7267) {
    var objs = cljs.core.seq(arglist__7267);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__7268) {
    var objs = cljs.core.seq(arglist__7268);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__7269) {
    var objs = cljs.core.seq(arglist__7269);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__7270) {
    var objs = cljs.core.seq(arglist__7270);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__7271) {
    var objs = cljs.core.seq(arglist__7271);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__7272) {
    var objs = cljs.core.seq(arglist__7272);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__7273) {
    var objs = cljs.core.seq(arglist__7273);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__7274 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__7274, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__7275 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__7275, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__7276 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__7276, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____7277 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____7277)) {
        var nspc__7278 = temp__3974__auto____7277;
        return[cljs.core.str(nspc__7278), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____7279 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____7279)) {
          var nspc__7280 = temp__3974__auto____7279;
          return[cljs.core.str(nspc__7280), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_("\ufdd0'readably".call(null, opts)) ? goog.string.quote.call(null, obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__7281 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__7281, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__7282 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__7282, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1345404928
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$ = true;
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__7283 = this;
  return goog.getUid.call(null, this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$ = true;
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__7284 = this;
  var G__7285__7286 = cljs.core.seq.call(null, this__7284.watches);
  if(cljs.core.truth_(G__7285__7286)) {
    var G__7288__7290 = cljs.core.first.call(null, G__7285__7286);
    var vec__7289__7291 = G__7288__7290;
    var key__7292 = cljs.core.nth.call(null, vec__7289__7291, 0, null);
    var f__7293 = cljs.core.nth.call(null, vec__7289__7291, 1, null);
    var G__7285__7294 = G__7285__7286;
    var G__7288__7295 = G__7288__7290;
    var G__7285__7296 = G__7285__7294;
    while(true) {
      var vec__7297__7298 = G__7288__7295;
      var key__7299 = cljs.core.nth.call(null, vec__7297__7298, 0, null);
      var f__7300 = cljs.core.nth.call(null, vec__7297__7298, 1, null);
      var G__7285__7301 = G__7285__7296;
      f__7300.call(null, key__7299, this$, oldval, newval);
      var temp__3974__auto____7302 = cljs.core.next.call(null, G__7285__7301);
      if(cljs.core.truth_(temp__3974__auto____7302)) {
        var G__7285__7303 = temp__3974__auto____7302;
        var G__7310 = cljs.core.first.call(null, G__7285__7303);
        var G__7311 = G__7285__7303;
        G__7288__7295 = G__7310;
        G__7285__7296 = G__7311;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__7304 = this;
  return this$.watches = cljs.core.assoc.call(null, this__7304.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__7305 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__7305.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__7306 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "]), cljs.core._pr_seq.call(null, this__7306.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$ = true;
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__7307 = this;
  return this__7307.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__7308 = this;
  return this__7308.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$ = true;
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__7309 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__7318__delegate = function(x, p__7312) {
      var map__7313__7314 = p__7312;
      var map__7313__7315 = cljs.core.seq_QMARK_.call(null, map__7313__7314) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7313__7314) : map__7313__7314;
      var validator__7316 = cljs.core.get.call(null, map__7313__7315, "\ufdd0'validator");
      var meta__7317 = cljs.core.get.call(null, map__7313__7315, "\ufdd0'meta");
      return new cljs.core.Atom(x, meta__7317, validator__7316, null)
    };
    var G__7318 = function(x, var_args) {
      var p__7312 = null;
      if(goog.isDef(var_args)) {
        p__7312 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7318__delegate.call(this, x, p__7312)
    };
    G__7318.cljs$lang$maxFixedArity = 1;
    G__7318.cljs$lang$applyTo = function(arglist__7319) {
      var x = cljs.core.first(arglist__7319);
      var p__7312 = cljs.core.rest(arglist__7319);
      return G__7318__delegate(x, p__7312)
    };
    G__7318.cljs$lang$arity$variadic = G__7318__delegate;
    return G__7318
  }();
  atom = function(x, var_args) {
    var p__7312 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____7320 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____7320)) {
    var validate__7321 = temp__3974__auto____7320;
    if(cljs.core.truth_(validate__7321.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 5917))))].join(""));
    }
  }else {
  }
  var old_value__7322 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__7322, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__7323__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__7323 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__7323__delegate.call(this, a, f, x, y, z, more)
    };
    G__7323.cljs$lang$maxFixedArity = 5;
    G__7323.cljs$lang$applyTo = function(arglist__7324) {
      var a = cljs.core.first(arglist__7324);
      var f = cljs.core.first(cljs.core.next(arglist__7324));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7324)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7324))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7324)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7324)))));
      return G__7323__delegate(a, f, x, y, z, more)
    };
    G__7323.cljs$lang$arity$variadic = G__7323__delegate;
    return G__7323
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__7325) {
    var iref = cljs.core.first(arglist__7325);
    var f = cljs.core.first(cljs.core.next(arglist__7325));
    var args = cljs.core.rest(cljs.core.next(arglist__7325));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 536887296
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$ = true;
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__7326 = this;
  return"\ufdd0'done".call(null, cljs.core.deref.call(null, this__7326.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$ = true;
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__7327 = this;
  return"\ufdd0'value".call(null, cljs.core.swap_BANG_.call(null, this__7327.state, function(p__7328) {
    var curr_state__7329 = p__7328;
    var curr_state__7330 = cljs.core.seq_QMARK_.call(null, curr_state__7329) ? cljs.core.apply.call(null, cljs.core.hash_map, curr_state__7329) : curr_state__7329;
    var done__7331 = cljs.core.get.call(null, curr_state__7330, "\ufdd0'done");
    if(cljs.core.truth_(done__7331)) {
      return curr_state__7330
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__7327.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__7332__7333 = options;
    var map__7332__7334 = cljs.core.seq_QMARK_.call(null, map__7332__7333) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7332__7333) : map__7332__7333;
    var keywordize_keys__7335 = cljs.core.get.call(null, map__7332__7334, "\ufdd0'keywordize-keys");
    var keyfn__7336 = cljs.core.truth_(keywordize_keys__7335) ? cljs.core.keyword : cljs.core.str;
    var f__7342 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray.call(null, x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.fromObject([], {}), function() {
                var iter__625__auto____7341 = function iter__7337(s__7338) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__7338__7339 = s__7338;
                    while(true) {
                      if(cljs.core.truth_(cljs.core.seq.call(null, s__7338__7339))) {
                        var k__7340 = cljs.core.first.call(null, s__7338__7339);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__7336.call(null, k__7340), thisfn.call(null, x[k__7340])]), iter__7337.call(null, cljs.core.rest.call(null, s__7338__7339)))
                      }else {
                        return null
                      }
                      break
                    }
                  })
                };
                return iter__625__auto____7341.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__7342.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__7343) {
    var x = cljs.core.first(arglist__7343);
    var options = cljs.core.rest(arglist__7343);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__7344 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject([], {}));
  return function() {
    var G__7348__delegate = function(args) {
      var temp__3971__auto____7345 = cljs.core.get.call(null, cljs.core.deref.call(null, mem__7344), args);
      if(cljs.core.truth_(temp__3971__auto____7345)) {
        var v__7346 = temp__3971__auto____7345;
        return v__7346
      }else {
        var ret__7347 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__7344, cljs.core.assoc, args, ret__7347);
        return ret__7347
      }
    };
    var G__7348 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7348__delegate.call(this, args)
    };
    G__7348.cljs$lang$maxFixedArity = 0;
    G__7348.cljs$lang$applyTo = function(arglist__7349) {
      var args = cljs.core.seq(arglist__7349);
      return G__7348__delegate(args)
    };
    G__7348.cljs$lang$arity$variadic = G__7348__delegate;
    return G__7348
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__7350 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__7350)) {
        var G__7351 = ret__7350;
        f = G__7351;
        continue
      }else {
        return ret__7350
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__7352__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__7352 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7352__delegate.call(this, f, args)
    };
    G__7352.cljs$lang$maxFixedArity = 1;
    G__7352.cljs$lang$applyTo = function(arglist__7353) {
      var f = cljs.core.first(arglist__7353);
      var args = cljs.core.rest(arglist__7353);
      return G__7352__delegate(f, args)
    };
    G__7352.cljs$lang$arity$variadic = G__7352__delegate;
    return G__7352
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random() * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor(Math.random() * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__7354 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__7354, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k__7354, cljs.core.PersistentVector.fromArray([])), x))
  }, cljs.core.ObjMap.fromObject([], {}), coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.fromObject([], {}), "\ufdd0'descendants":cljs.core.ObjMap.fromObject([], {}), "\ufdd0'ancestors":cljs.core.ObjMap.fromObject([], {})})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____7355 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____7355) {
      return or__3824__auto____7355
    }else {
      var or__3824__auto____7356 = cljs.core.contains_QMARK_.call(null, "\ufdd0'ancestors".call(null, h).call(null, child), parent);
      if(or__3824__auto____7356) {
        return or__3824__auto____7356
      }else {
        var and__3822__auto____7357 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____7357) {
          var and__3822__auto____7358 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____7358) {
            var and__3822__auto____7359 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____7359) {
              var ret__7360 = true;
              var i__7361 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____7362 = cljs.core.not.call(null, ret__7360);
                  if(or__3824__auto____7362) {
                    return or__3824__auto____7362
                  }else {
                    return i__7361 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__7360
                }else {
                  var G__7363 = isa_QMARK_.call(null, h, child.call(null, i__7361), parent.call(null, i__7361));
                  var G__7364 = i__7361 + 1;
                  ret__7360 = G__7363;
                  i__7361 = G__7364;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____7359
            }
          }else {
            return and__3822__auto____7358
          }
        }else {
          return and__3822__auto____7357
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, "\ufdd0'parents".call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, "\ufdd0'ancestors".call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, "\ufdd0'descendants".call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6201))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6205))))].join(""));
    }
    var tp__7368 = "\ufdd0'parents".call(null, h);
    var td__7369 = "\ufdd0'descendants".call(null, h);
    var ta__7370 = "\ufdd0'ancestors".call(null, h);
    var tf__7371 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.set([])), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____7372 = cljs.core.contains_QMARK_.call(null, tp__7368.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__7370.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__7370.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, "\ufdd0'parents".call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp__7368, tag, cljs.core.set([])), parent)), "\ufdd0'ancestors":tf__7371.call(null, "\ufdd0'ancestors".call(null, h), tag, td__7369, parent, ta__7370), "\ufdd0'descendants":tf__7371.call(null, "\ufdd0'descendants".call(null, h), parent, ta__7370, tag, td__7369)})
    }();
    if(cljs.core.truth_(or__3824__auto____7372)) {
      return or__3824__auto____7372
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__7373 = "\ufdd0'parents".call(null, h);
    var childsParents__7374 = cljs.core.truth_(parentMap__7373.call(null, tag)) ? cljs.core.disj.call(null, parentMap__7373.call(null, tag), parent) : cljs.core.set([]);
    var newParents__7375 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__7374)) ? cljs.core.assoc.call(null, parentMap__7373, tag, childsParents__7374) : cljs.core.dissoc.call(null, parentMap__7373, tag);
    var deriv_seq__7376 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__7365_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__7365_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__7365_SHARP_), cljs.core.second.call(null, p1__7365_SHARP_)))
    }, cljs.core.seq.call(null, newParents__7375)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__7373.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__7366_SHARP_, p2__7367_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__7366_SHARP_, p2__7367_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__7376))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__7377 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____7379 = cljs.core.truth_(function() {
    var and__3822__auto____7378 = xprefs__7377;
    if(cljs.core.truth_(and__3822__auto____7378)) {
      return xprefs__7377.call(null, y)
    }else {
      return and__3822__auto____7378
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____7379)) {
    return or__3824__auto____7379
  }else {
    var or__3824__auto____7381 = function() {
      var ps__7380 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__7380) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__7380), prefer_table))) {
          }else {
          }
          var G__7384 = cljs.core.rest.call(null, ps__7380);
          ps__7380 = G__7384;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____7381)) {
      return or__3824__auto____7381
    }else {
      var or__3824__auto____7383 = function() {
        var ps__7382 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__7382) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__7382), y, prefer_table))) {
            }else {
            }
            var G__7385 = cljs.core.rest.call(null, ps__7382);
            ps__7382 = G__7385;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____7383)) {
        return or__3824__auto____7383
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____7386 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____7386)) {
    return or__3824__auto____7386
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__7395 = cljs.core.reduce.call(null, function(be, p__7387) {
    var vec__7388__7389 = p__7387;
    var k__7390 = cljs.core.nth.call(null, vec__7388__7389, 0, null);
    var ___7391 = cljs.core.nth.call(null, vec__7388__7389, 1, null);
    var e__7392 = vec__7388__7389;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__7390)) {
      var be2__7394 = cljs.core.truth_(function() {
        var or__3824__auto____7393 = be == null;
        if(or__3824__auto____7393) {
          return or__3824__auto____7393
        }else {
          return cljs.core.dominates.call(null, k__7390, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__7392 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__7394), k__7390, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__7390), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__7394)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__7394
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__7395)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__7395));
      return cljs.core.second.call(null, best_entry__7395)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
void 0;
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____7396 = mf;
    if(and__3822__auto____7396) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____7396
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____7397 = cljs.core._reset[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7397) {
        return or__3824__auto____7397
      }else {
        var or__3824__auto____7398 = cljs.core._reset["_"];
        if(or__3824__auto____7398) {
          return or__3824__auto____7398
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____7399 = mf;
    if(and__3822__auto____7399) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____7399
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    return function() {
      var or__3824__auto____7400 = cljs.core._add_method[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7400) {
        return or__3824__auto____7400
      }else {
        var or__3824__auto____7401 = cljs.core._add_method["_"];
        if(or__3824__auto____7401) {
          return or__3824__auto____7401
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____7402 = mf;
    if(and__3822__auto____7402) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____7402
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3824__auto____7403 = cljs.core._remove_method[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7403) {
        return or__3824__auto____7403
      }else {
        var or__3824__auto____7404 = cljs.core._remove_method["_"];
        if(or__3824__auto____7404) {
          return or__3824__auto____7404
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____7405 = mf;
    if(and__3822__auto____7405) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____7405
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    return function() {
      var or__3824__auto____7406 = cljs.core._prefer_method[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7406) {
        return or__3824__auto____7406
      }else {
        var or__3824__auto____7407 = cljs.core._prefer_method["_"];
        if(or__3824__auto____7407) {
          return or__3824__auto____7407
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____7408 = mf;
    if(and__3822__auto____7408) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____7408
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3824__auto____7409 = cljs.core._get_method[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7409) {
        return or__3824__auto____7409
      }else {
        var or__3824__auto____7410 = cljs.core._get_method["_"];
        if(or__3824__auto____7410) {
          return or__3824__auto____7410
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____7411 = mf;
    if(and__3822__auto____7411) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____7411
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____7412 = cljs.core._methods[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7412) {
        return or__3824__auto____7412
      }else {
        var or__3824__auto____7413 = cljs.core._methods["_"];
        if(or__3824__auto____7413) {
          return or__3824__auto____7413
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____7414 = mf;
    if(and__3822__auto____7414) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____7414
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    return function() {
      var or__3824__auto____7415 = cljs.core._prefers[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7415) {
        return or__3824__auto____7415
      }else {
        var or__3824__auto____7416 = cljs.core._prefers["_"];
        if(or__3824__auto____7416) {
          return or__3824__auto____7416
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____7417 = mf;
    if(and__3822__auto____7417) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____7417
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    return function() {
      var or__3824__auto____7418 = cljs.core._dispatch[goog.typeOf.call(null, mf)];
      if(or__3824__auto____7418) {
        return or__3824__auto____7418
      }else {
        var or__3824__auto____7419 = cljs.core._dispatch["_"];
        if(or__3824__auto____7419) {
          return or__3824__auto____7419
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
void 0;
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__7420 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__7421 = cljs.core._get_method.call(null, mf, dispatch_val__7420);
  if(cljs.core.truth_(target_fn__7421)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__7420)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__7421, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 32
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.core.MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$ = true;
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__7422 = this;
  return goog.getUid.call(null, this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$ = true;
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__7423 = this;
  cljs.core.swap_BANG_.call(null, this__7423.method_table, function(mf) {
    return cljs.core.ObjMap.fromObject([], {})
  });
  cljs.core.swap_BANG_.call(null, this__7423.method_cache, function(mf) {
    return cljs.core.ObjMap.fromObject([], {})
  });
  cljs.core.swap_BANG_.call(null, this__7423.prefer_table, function(mf) {
    return cljs.core.ObjMap.fromObject([], {})
  });
  cljs.core.swap_BANG_.call(null, this__7423.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__7424 = this;
  cljs.core.swap_BANG_.call(null, this__7424.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__7424.method_cache, this__7424.method_table, this__7424.cached_hierarchy, this__7424.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__7425 = this;
  cljs.core.swap_BANG_.call(null, this__7425.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__7425.method_cache, this__7425.method_table, this__7425.cached_hierarchy, this__7425.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__7426 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__7426.cached_hierarchy), cljs.core.deref.call(null, this__7426.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__7426.method_cache, this__7426.method_table, this__7426.cached_hierarchy, this__7426.hierarchy)
  }
  var temp__3971__auto____7427 = cljs.core.deref.call(null, this__7426.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____7427)) {
    var target_fn__7428 = temp__3971__auto____7427;
    return target_fn__7428
  }else {
    var temp__3971__auto____7429 = cljs.core.find_and_cache_best_method.call(null, this__7426.name, dispatch_val, this__7426.hierarchy, this__7426.method_table, this__7426.prefer_table, this__7426.method_cache, this__7426.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____7429)) {
      var target_fn__7430 = temp__3971__auto____7429;
      return target_fn__7430
    }else {
      return cljs.core.deref.call(null, this__7426.method_table).call(null, this__7426.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__7431 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__7431.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__7431.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__7431.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.set([])), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__7431.method_cache, this__7431.method_table, this__7431.cached_hierarchy, this__7431.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__7432 = this;
  return cljs.core.deref.call(null, this__7432.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__7433 = this;
  return cljs.core.deref.call(null, this__7433.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__7434 = this;
  return cljs.core.do_dispatch.call(null, mf, this__7434.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__7435__delegate = function(_, args) {
    return cljs.core._dispatch.call(null, this, args)
  };
  var G__7435 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__7435__delegate.call(this, _, args)
  };
  G__7435.cljs$lang$maxFixedArity = 1;
  G__7435.cljs$lang$applyTo = function(arglist__7436) {
    var _ = cljs.core.first(arglist__7436);
    var args = cljs.core.rest(arglist__7436);
    return G__7435__delegate(_, args)
  };
  G__7435.cljs$lang$arity$variadic = G__7435__delegate;
  return G__7435
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  return cljs.core._dispatch.call(null, this, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape.call(null, match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__7466 = s;
      var limit__7467 = limit;
      var parts__7468 = cljs.core.PersistentVector.fromArray([]);
      while(true) {
        if(cljs.core._EQ_.call(null, limit__7467, 1)) {
          return cljs.core.conj.call(null, parts__7468, s__7466)
        }else {
          var temp__3971__auto____7469 = cljs.core.re_find.call(null, re, s__7466);
          if(cljs.core.truth_(temp__3971__auto____7469)) {
            var m__7470 = temp__3971__auto____7469;
            var index__7471 = s__7466.indexOf(m__7470);
            var G__7472 = s__7466.substring(index__7471 + cljs.core.count.call(null, m__7470));
            var G__7473 = limit__7467 - 1;
            var G__7474 = cljs.core.conj.call(null, parts__7468, s__7466.substring(0, index__7471));
            s__7466 = G__7472;
            limit__7467 = G__7473;
            parts__7468 = G__7474;
            continue
          }else {
            return cljs.core.conj.call(null, parts__7468, s__7466)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim.call(null, s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft.call(null, s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight.call(null, s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__7475 = s.length;
  while(true) {
    if(index__7475 === 0) {
      return""
    }else {
      var ch__7476 = cljs.core.get.call(null, s, index__7475 - 1);
      if(function() {
        var or__3824__auto____7477 = cljs.core._EQ_.call(null, ch__7476, "\n");
        if(or__3824__auto____7477) {
          return or__3824__auto____7477
        }else {
          return cljs.core._EQ_.call(null, ch__7476, "\r")
        }
      }()) {
        var G__7478 = index__7475 - 1;
        index__7475 = G__7478;
        continue
      }else {
        return s.substring(0, index__7475)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__7479 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____7480 = cljs.core.not.call(null, s__7479);
    if(or__3824__auto____7480) {
      return or__3824__auto____7480
    }else {
      var or__3824__auto____7481 = cljs.core._EQ_.call(null, "", s__7479);
      if(or__3824__auto____7481) {
        return or__3824__auto____7481
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__7479)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__7482 = new goog.string.StringBuffer;
  var length__7483 = s.length;
  var index__7484 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__7483, index__7484)) {
      return buffer__7482.toString()
    }else {
      var ch__7485 = s.charAt(index__7484);
      var temp__3971__auto____7486 = cljs.core.get.call(null, cmap, ch__7485);
      if(cljs.core.truth_(temp__3971__auto____7486)) {
        var replacement__7487 = temp__3971__auto____7486;
        buffer__7482.append([cljs.core.str(replacement__7487)].join(""))
      }else {
        buffer__7482.append(ch__7485)
      }
      var G__7488 = index__7484 + 1;
      index__7484 = G__7488;
      continue
    }
    break
  }
};
goog.provide("tracker.util");
goog.require("cljs.core");
goog.require("clojure.string");
tracker.util.log = function log(s) {
  console.log(s);
  return s
};
tracker.util.reverse_map = function reverse_map(m) {
  return cljs.core.into.call(null, cljs.core.ObjMap.fromObject([], {}), cljs.core.map.call(null, function(p__5073) {
    var vec__5074__5075 = p__5073;
    var k__5076 = cljs.core.nth.call(null, vec__5074__5075, 0, null);
    var v__5077 = cljs.core.nth.call(null, vec__5074__5075, 1, null);
    return cljs.core.PersistentVector.fromArray([v__5077, k__5076])
  }, m))
};
tracker.util.event_char = function event_char(e) {
  var k__5079 = function() {
    var or__3824__auto____5078 = e.keyCode;
    if(cljs.core.truth_(or__3824__auto____5078)) {
      return or__3824__auto____5078
    }else {
      return e.charCode
    }
  }();
  var c__5080 = String.fromCharCode(k__5079);
  if(cljs.core.truth_(e.shiftKey)) {
    return c__5080
  }else {
    return clojure.string.lower_case.call(null, c__5080)
  }
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("jayq.util");
goog.require("cljs.core");
jayq.util.map__GT_js = function map__GT_js(m) {
  var out__7437 = {};
  var G__7438__7439 = cljs.core.seq.call(null, m);
  if(cljs.core.truth_(G__7438__7439)) {
    var G__7441__7443 = cljs.core.first.call(null, G__7438__7439);
    var vec__7442__7444 = G__7441__7443;
    var k__7445 = cljs.core.nth.call(null, vec__7442__7444, 0, null);
    var v__7446 = cljs.core.nth.call(null, vec__7442__7444, 1, null);
    var G__7438__7447 = G__7438__7439;
    var G__7441__7448 = G__7441__7443;
    var G__7438__7449 = G__7438__7447;
    while(true) {
      var vec__7450__7451 = G__7441__7448;
      var k__7452 = cljs.core.nth.call(null, vec__7450__7451, 0, null);
      var v__7453 = cljs.core.nth.call(null, vec__7450__7451, 1, null);
      var G__7438__7454 = G__7438__7449;
      out__7437[cljs.core.name.call(null, k__7452)] = v__7453;
      var temp__3974__auto____7455 = cljs.core.next.call(null, G__7438__7454);
      if(cljs.core.truth_(temp__3974__auto____7455)) {
        var G__7438__7456 = temp__3974__auto____7455;
        var G__7457 = cljs.core.first.call(null, G__7438__7456);
        var G__7458 = G__7438__7456;
        G__7441__7448 = G__7457;
        G__7438__7449 = G__7458;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return out__7437
};
jayq.util.wait = function wait(ms, func) {
  return setTimeout(func, ms)
};
jayq.util.log = function() {
  var log__delegate = function(v, text) {
    var vs__7459 = cljs.core.string_QMARK_.call(null, v) ? cljs.core.apply.call(null, cljs.core.str, v, text) : v;
    return console.log(vs__7459)
  };
  var log = function(v, var_args) {
    var text = null;
    if(goog.isDef(var_args)) {
      text = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return log__delegate.call(this, v, text)
  };
  log.cljs$lang$maxFixedArity = 1;
  log.cljs$lang$applyTo = function(arglist__7460) {
    var v = cljs.core.first(arglist__7460);
    var text = cljs.core.rest(arglist__7460);
    return log__delegate(v, text)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
jayq.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce.call(null, function(m, p__7461) {
          var vec__7462__7463 = p__7461;
          var k__7464 = cljs.core.nth.call(null, vec__7462__7463, 0, null);
          var v__7465 = cljs.core.nth.call(null, vec__7462__7463, 1, null);
          return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__7464), clj__GT_js.call(null, v__7465))
        }, cljs.core.ObjMap.fromObject([], {}), x).strobj
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max__7791 = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max__7791, cljs.core.remove.call(null, function(p1__7790_SHARP_) {
    return max__7791 === p1__7790_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.set([])
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__7794__delegate = function(s1, s2, sets) {
      var bubbled_sets__7793 = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets__7793), cljs.core.rest.call(null, bubbled_sets__7793))
    };
    var G__7794 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7794__delegate.call(this, s1, s2, sets)
    };
    G__7794.cljs$lang$maxFixedArity = 2;
    G__7794.cljs$lang$applyTo = function(arglist__7795) {
      var s1 = cljs.core.first(arglist__7795);
      var s2 = cljs.core.first(cljs.core.next(arglist__7795));
      var sets = cljs.core.rest(cljs.core.next(arglist__7795));
      return G__7794__delegate(s1, s2, sets)
    };
    G__7794.cljs$lang$arity$variadic = G__7794__delegate;
    return G__7794
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$lang$arity$0 = union__0;
  union.cljs$lang$arity$1 = union__1;
  union.cljs$lang$arity$2 = union__2;
  union.cljs$lang$arity$variadic = union__3.cljs$lang$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__7797 = s2;
        var G__7798 = s1;
        s1 = G__7797;
        s2 = G__7798;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__7799__delegate = function(s1, s2, sets) {
      var bubbled_sets__7796 = clojure.set.bubble_max_key.call(null, function(p1__7792_SHARP_) {
        return-cljs.core.count.call(null, p1__7792_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets__7796), cljs.core.rest.call(null, bubbled_sets__7796))
    };
    var G__7799 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7799__delegate.call(this, s1, s2, sets)
    };
    G__7799.cljs$lang$maxFixedArity = 2;
    G__7799.cljs$lang$applyTo = function(arglist__7800) {
      var s1 = cljs.core.first(arglist__7800);
      var s2 = cljs.core.first(cljs.core.next(arglist__7800));
      var sets = cljs.core.rest(cljs.core.next(arglist__7800));
      return G__7799__delegate(s1, s2, sets)
    };
    G__7799.cljs$lang$arity$variadic = G__7799__delegate;
    return G__7799
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$lang$arity$1 = intersection__1;
  intersection.cljs$lang$arity$2 = intersection__2;
  intersection.cljs$lang$arity$variadic = intersection__3.cljs$lang$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__7801__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__7801 = function(s1, s2, var_args) {
      var sets = null;
      if(goog.isDef(var_args)) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7801__delegate.call(this, s1, s2, sets)
    };
    G__7801.cljs$lang$maxFixedArity = 2;
    G__7801.cljs$lang$applyTo = function(arglist__7802) {
      var s1 = cljs.core.first(arglist__7802);
      var s2 = cljs.core.first(cljs.core.next(arglist__7802));
      var sets = cljs.core.rest(cljs.core.next(arglist__7802));
      return G__7801__delegate(s1, s2, sets)
    };
    G__7801.cljs$lang$arity$variadic = G__7801__delegate;
    return G__7801
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$lang$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$lang$arity$1 = difference__1;
  difference.cljs$lang$arity$2 = difference__2;
  difference.cljs$lang$arity$variadic = difference__3.cljs$lang$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__7803_SHARP_) {
    return cljs.core.select_keys.call(null, p1__7803_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__7805) {
    var vec__7806__7807 = p__7805;
    var old__7808 = cljs.core.nth.call(null, vec__7806__7807, 0, null);
    var new$__7809 = cljs.core.nth.call(null, vec__7806__7807, 1, null);
    if(function() {
      var and__3822__auto____7810 = cljs.core.not_EQ_.call(null, old__7808, new$__7809);
      if(and__3822__auto____7810) {
        return cljs.core.contains_QMARK_.call(null, m, old__7808)
      }else {
        return and__3822__auto____7810
      }
    }()) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$__7809, cljs.core.get.call(null, m, old__7808)), old__7808)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__7804_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__7804_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik__7811 = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik__7811, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik__7811, cljs.core.set([])), x))
  }, cljs.core.ObjMap.fromObject([], {}), xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m, p__7816) {
    var vec__7817__7818 = p__7816;
    var k__7819 = cljs.core.nth.call(null, vec__7817__7818, 0, null);
    var v__7820 = cljs.core.nth.call(null, vec__7817__7818, 1, null);
    return cljs.core.assoc.call(null, m, v__7820, k__7819)
  }, cljs.core.ObjMap.fromObject([], {}), m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____7822 = cljs.core.seq.call(null, xrel);
      if(cljs.core.truth_(and__3822__auto____7822)) {
        return cljs.core.seq.call(null, yrel)
      }else {
        return and__3822__auto____7822
      }
    }())) {
      var ks__7824 = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__7823__7825 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel]) : cljs.core.PersistentVector.fromArray([yrel, xrel]);
      var r__7826 = cljs.core.nth.call(null, vec__7823__7825, 0, null);
      var s__7827 = cljs.core.nth.call(null, vec__7823__7825, 1, null);
      var idx__7828 = clojure.set.index.call(null, r__7826, ks__7824);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found__7829 = idx__7828.call(null, cljs.core.select_keys.call(null, x, ks__7824));
        if(cljs.core.truth_(found__7829)) {
          return cljs.core.reduce.call(null, function(p1__7812_SHARP_, p2__7813_SHARP_) {
            return cljs.core.conj.call(null, p1__7812_SHARP_, cljs.core.merge.call(null, p2__7813_SHARP_, x))
          }, ret, found__7829)
        }else {
          return ret
        }
      }, cljs.core.set([]), s__7827)
    }else {
      return cljs.core.set([])
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__7830__7831 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)]) : cljs.core.PersistentVector.fromArray([yrel, xrel, km]);
    var r__7832 = cljs.core.nth.call(null, vec__7830__7831, 0, null);
    var s__7833 = cljs.core.nth.call(null, vec__7830__7831, 1, null);
    var k__7834 = cljs.core.nth.call(null, vec__7830__7831, 2, null);
    var idx__7835 = clojure.set.index.call(null, r__7832, cljs.core.vals.call(null, k__7834));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found__7836 = idx__7835.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k__7834)), k__7834));
      if(cljs.core.truth_(found__7836)) {
        return cljs.core.reduce.call(null, function(p1__7814_SHARP_, p2__7815_SHARP_) {
          return cljs.core.conj.call(null, p1__7814_SHARP_, cljs.core.merge.call(null, p2__7815_SHARP_, x))
        }, ret, found__7836)
      }else {
        return ret
      }
    }, cljs.core.set([]), s__7833)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$2 = join__2;
  join.cljs$lang$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  var and__3822__auto____7838 = cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2);
  if(and__3822__auto____7838) {
    return cljs.core.every_QMARK_.call(null, function(p1__7821_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set2, p1__7821_SHARP_)
    }, set1)
  }else {
    return and__3822__auto____7838
  }
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  var and__3822__auto____7839 = cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2);
  if(and__3822__auto____7839) {
    return cljs.core.every_QMARK_.call(null, function(p1__7837_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, set1, p1__7837_SHARP_)
    }, set2)
  }else {
    return and__3822__auto____7839
  }
};
goog.provide("crate.binding");
goog.require("cljs.core");
goog.require("clojure.set");
crate.binding.SubAtom = function(atm, path, prevhash, watches) {
  this.atm = atm;
  this.path = path;
  this.prevhash = prevhash;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1345339392
};
crate.binding.SubAtom.cljs$lang$type = true;
crate.binding.SubAtom.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "crate.binding.SubAtom")
};
crate.binding.SubAtom.prototype.cljs$core$IHash$ = true;
crate.binding.SubAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__7639 = this;
  return goog.getUid.call(null, this$)
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$ = true;
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__7640 = this;
  var G__7641__7642 = cljs.core.seq.call(null, this__7640.watches);
  if(cljs.core.truth_(G__7641__7642)) {
    var G__7644__7646 = cljs.core.first.call(null, G__7641__7642);
    var vec__7645__7647 = G__7644__7646;
    var key__7648 = cljs.core.nth.call(null, vec__7645__7647, 0, null);
    var f__7649 = cljs.core.nth.call(null, vec__7645__7647, 1, null);
    var G__7641__7650 = G__7641__7642;
    var G__7644__7651 = G__7644__7646;
    var G__7641__7652 = G__7641__7650;
    while(true) {
      var vec__7653__7654 = G__7644__7651;
      var key__7655 = cljs.core.nth.call(null, vec__7653__7654, 0, null);
      var f__7656 = cljs.core.nth.call(null, vec__7653__7654, 1, null);
      var G__7641__7657 = G__7641__7652;
      f__7656.call(null, key__7655, this$, oldval, newval);
      var temp__3974__auto____7658 = cljs.core.next.call(null, G__7641__7657);
      if(cljs.core.truth_(temp__3974__auto____7658)) {
        var G__7641__7659 = temp__3974__auto____7658;
        var G__7665 = cljs.core.first.call(null, G__7641__7659);
        var G__7666 = G__7641__7659;
        G__7644__7651 = G__7665;
        G__7641__7652 = G__7666;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__7660 = this;
  if(cljs.core.truth_(f)) {
    return this$.watches = cljs.core.assoc.call(null, this__7660.watches, key, f)
  }else {
    return null
  }
};
crate.binding.SubAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__7661 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__7661.watches, key)
};
crate.binding.SubAtom.prototype.cljs$core$IPrintable$ = true;
crate.binding.SubAtom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__7662 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<SubAtom: "]), cljs.core._pr_seq.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, this__7662.atm), this__7662.path), opts), ">")
};
crate.binding.SubAtom.prototype.cljs$core$IDeref$ = true;
crate.binding.SubAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__7663 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, this__7663.atm), this__7663.path)
};
crate.binding.SubAtom.prototype.cljs$core$IEquiv$ = true;
crate.binding.SubAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__7664 = this;
  return o === other
};
crate.binding.SubAtom;
crate.binding.subatom = function subatom(atm, path) {
  var path__7668 = cljs.core.coll_QMARK_.call(null, path) ? path : cljs.core.PersistentVector.fromArray([path]);
  var vec__7667__7669 = cljs.core.instance_QMARK_.call(null, crate.binding.SubAtom, atm) ? cljs.core.PersistentVector.fromArray([atm.atm, cljs.core.concat.call(null, atm.path, path__7668)]) : cljs.core.PersistentVector.fromArray([atm, path__7668]);
  var atm__7670 = cljs.core.nth.call(null, vec__7667__7669, 0, null);
  var path__7671 = cljs.core.nth.call(null, vec__7667__7669, 1, null);
  var k__7672 = cljs.core.gensym.call(null, "subatom");
  var sa__7673 = new crate.binding.SubAtom(atm__7670, path__7671, cljs.core.hash.call(null, cljs.core.get_in.call(null, cljs.core.deref.call(null, atm__7670), path__7671)), null);
  cljs.core.add_watch.call(null, atm__7670, k__7672, function(_7674, _, ov, nv) {
    var latest__7675 = cljs.core.get_in.call(null, nv, path__7671);
    var prev__7676 = cljs.core.get_in.call(null, ov, path__7671);
    var latest_hash__7677 = cljs.core.hash.call(null, latest__7675);
    if(function() {
      var and__3822__auto____7678 = cljs.core.not_EQ_.call(null, sa__7673.prevhash, latest_hash__7677);
      if(and__3822__auto____7678) {
        return cljs.core.not_EQ_.call(null, prev__7676, latest__7675)
      }else {
        return and__3822__auto____7678
      }
    }()) {
      sa__7673.prevhash = latest_hash__7677;
      return cljs.core._notify_watches.call(null, sa__7673, cljs.core.get_in.call(null, ov, path__7671), latest__7675)
    }else {
      return null
    }
  });
  return sa__7673
};
crate.binding.sub_reset_BANG_ = function sub_reset_BANG_(sa, new_value) {
  cljs.core.swap_BANG_.call(null, sa.atm, cljs.core.assoc_in, sa.path, new_value);
  return new_value
};
crate.binding.sub_swap_BANG_ = function() {
  var sub_swap_BANG_ = null;
  var sub_swap_BANG___2 = function(sa, f) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa)))
  };
  var sub_swap_BANG___3 = function(sa, f, x) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x))
  };
  var sub_swap_BANG___4 = function(sa, f, x, y) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y))
  };
  var sub_swap_BANG___5 = function(sa, f, x, y, z) {
    return crate.binding.sub_reset_BANG_.call(null, sa, f.call(null, cljs.core.deref.call(null, sa), x, y, z))
  };
  var sub_swap_BANG___6 = function() {
    var G__7679__delegate = function(sa, f, x, y, z, more) {
      return crate.binding.sub_reset_BANG_.call(null, sa, cljs.core.apply.call(null, f, cljs.core.deref.call(null, sa), x, y, z, more))
    };
    var G__7679 = function(sa, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__7679__delegate.call(this, sa, f, x, y, z, more)
    };
    G__7679.cljs$lang$maxFixedArity = 5;
    G__7679.cljs$lang$applyTo = function(arglist__7680) {
      var sa = cljs.core.first(arglist__7680);
      var f = cljs.core.first(cljs.core.next(arglist__7680));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7680)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7680))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7680)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__7680)))));
      return G__7679__delegate(sa, f, x, y, z, more)
    };
    G__7679.cljs$lang$arity$variadic = G__7679__delegate;
    return G__7679
  }();
  sub_swap_BANG_ = function(sa, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return sub_swap_BANG___2.call(this, sa, f);
      case 3:
        return sub_swap_BANG___3.call(this, sa, f, x);
      case 4:
        return sub_swap_BANG___4.call(this, sa, f, x, y);
      case 5:
        return sub_swap_BANG___5.call(this, sa, f, x, y, z);
      default:
        return sub_swap_BANG___6.cljs$lang$arity$variadic(sa, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  sub_swap_BANG_.cljs$lang$maxFixedArity = 5;
  sub_swap_BANG_.cljs$lang$applyTo = sub_swap_BANG___6.cljs$lang$applyTo;
  sub_swap_BANG_.cljs$lang$arity$2 = sub_swap_BANG___2;
  sub_swap_BANG_.cljs$lang$arity$3 = sub_swap_BANG___3;
  sub_swap_BANG_.cljs$lang$arity$4 = sub_swap_BANG___4;
  sub_swap_BANG_.cljs$lang$arity$5 = sub_swap_BANG___5;
  sub_swap_BANG_.cljs$lang$arity$variadic = sub_swap_BANG___6.cljs$lang$arity$variadic;
  return sub_swap_BANG_
}();
crate.binding.notify = function notify(w, o, v) {
  return cljs.core._notify_watches.call(null, w, o, v)
};
void 0;
crate.binding.bindable_coll = {};
void 0;
void 0;
crate.binding.bindable = {};
crate.binding._value = function _value(this$) {
  if(function() {
    var and__3822__auto____7681 = this$;
    if(and__3822__auto____7681) {
      return this$.crate$binding$bindable$_value$arity$1
    }else {
      return and__3822__auto____7681
    }
  }()) {
    return this$.crate$binding$bindable$_value$arity$1(this$)
  }else {
    return function() {
      var or__3824__auto____7682 = crate.binding._value[goog.typeOf.call(null, this$)];
      if(or__3824__auto____7682) {
        return or__3824__auto____7682
      }else {
        var or__3824__auto____7683 = crate.binding._value["_"];
        if(or__3824__auto____7683) {
          return or__3824__auto____7683
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-value", this$);
        }
      }
    }().call(null, this$)
  }
};
crate.binding._on_change = function _on_change(this$, func) {
  if(function() {
    var and__3822__auto____7684 = this$;
    if(and__3822__auto____7684) {
      return this$.crate$binding$bindable$_on_change$arity$2
    }else {
      return and__3822__auto____7684
    }
  }()) {
    return this$.crate$binding$bindable$_on_change$arity$2(this$, func)
  }else {
    return function() {
      var or__3824__auto____7685 = crate.binding._on_change[goog.typeOf.call(null, this$)];
      if(or__3824__auto____7685) {
        return or__3824__auto____7685
      }else {
        var or__3824__auto____7686 = crate.binding._on_change["_"];
        if(or__3824__auto____7686) {
          return or__3824__auto____7686
        }else {
          throw cljs.core.missing_protocol.call(null, "bindable.-on-change", this$);
        }
      }
    }().call(null, this$, func)
  }
};
void 0;
crate.binding.atom_binding = function(atm, value_func) {
  this.atm = atm;
  this.value_func = value_func
};
crate.binding.atom_binding.cljs$lang$type = true;
crate.binding.atom_binding.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "crate.binding.atom_binding")
};
crate.binding.atom_binding.prototype.crate$binding$bindable$ = true;
crate.binding.atom_binding.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__7687 = this;
  return this__7687.value_func.call(null, cljs.core.deref.call(null, this__7687.atm))
};
crate.binding.atom_binding.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__7688 = this;
  return cljs.core.add_watch.call(null, this__7688.atm, cljs.core.gensym.call(null, "atom-binding"), function() {
    return func.call(null, crate.binding._value.call(null, this$))
  })
};
crate.binding.atom_binding;
crate.binding.notifier = function(watches) {
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
crate.binding.notifier.cljs$lang$type = true;
crate.binding.notifier.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "crate.binding.notifier")
};
crate.binding.notifier.prototype.cljs$core$IWatchable$ = true;
crate.binding.notifier.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__7689 = this;
  var G__7690__7691 = cljs.core.seq.call(null, this__7689.watches);
  if(cljs.core.truth_(G__7690__7691)) {
    var G__7693__7695 = cljs.core.first.call(null, G__7690__7691);
    var vec__7694__7696 = G__7693__7695;
    var key__7697 = cljs.core.nth.call(null, vec__7694__7696, 0, null);
    var f__7698 = cljs.core.nth.call(null, vec__7694__7696, 1, null);
    var G__7690__7699 = G__7690__7691;
    var G__7693__7700 = G__7693__7695;
    var G__7690__7701 = G__7690__7699;
    while(true) {
      var vec__7702__7703 = G__7693__7700;
      var key__7704 = cljs.core.nth.call(null, vec__7702__7703, 0, null);
      var f__7705 = cljs.core.nth.call(null, vec__7702__7703, 1, null);
      var G__7690__7706 = G__7690__7701;
      f__7705.call(null, key__7704, this$, oldval, newval);
      var temp__3974__auto____7707 = cljs.core.next.call(null, G__7690__7706);
      if(cljs.core.truth_(temp__3974__auto____7707)) {
        var G__7690__7708 = temp__3974__auto____7707;
        var G__7711 = cljs.core.first.call(null, G__7690__7708);
        var G__7712 = G__7690__7708;
        G__7693__7700 = G__7711;
        G__7690__7701 = G__7712;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__7709 = this;
  return this$.watches = cljs.core.assoc.call(null, this__7709.watches, key, f)
};
crate.binding.notifier.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__7710 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__7710.watches, key)
};
crate.binding.notifier;
crate.binding.bound_collection = function(atm, notif, opts, stuff) {
  this.atm = atm;
  this.notif = notif;
  this.opts = opts;
  this.stuff = stuff
};
crate.binding.bound_collection.cljs$lang$type = true;
crate.binding.bound_collection.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "crate.binding.bound_collection")
};
crate.binding.bound_collection.prototype.crate$binding$bindable$ = true;
crate.binding.bound_collection.prototype.crate$binding$bindable$_value$arity$1 = function(this$) {
  var this__7713 = this;
  return cljs.core.map.call(null, "\ufdd0'elem", cljs.core.vals.call(null, this$.stuff))
};
crate.binding.bound_collection.prototype.crate$binding$bindable$_on_change$arity$2 = function(this$, func) {
  var this__7714 = this;
  return cljs.core.add_watch.call(null, this__7714.notif, cljs.core.gensym.call(null, "bound-coll"), function(_7716, _7717, _, p__7715) {
    var vec__7718__7719 = p__7715;
    var event__7720 = cljs.core.nth.call(null, vec__7718__7719, 0, null);
    var el__7721 = cljs.core.nth.call(null, vec__7718__7719, 1, null);
    var v__7722 = cljs.core.nth.call(null, vec__7718__7719, 2, null);
    return func.call(null, event__7720, el__7721, v__7722)
  })
};
crate.binding.bound_collection.prototype.crate$binding$bindable_coll$ = true;
crate.binding.bound_collection;
crate.binding.opt = function opt(bc, k) {
  return bc.opts.call(null, k)
};
crate.binding.bc_add = function bc_add(bc, path, key) {
  var sa__7723 = crate.binding.subatom.call(null, bc.atm, path);
  var elem__7724 = crate.binding.opt.call(null, bc, "\ufdd0'as").call(null, sa__7723);
  bc.stuff = cljs.core.assoc.call(null, bc.stuff, key, cljs.core.ObjMap.fromObject(["\ufdd0'elem", "\ufdd0'subatom"], {"\ufdd0'elem":elem__7724, "\ufdd0'subatom":sa__7723}));
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'add", elem__7724, cljs.core.deref.call(null, sa__7723)]))
};
crate.binding.bc_remove = function bc_remove(bc, key) {
  var notif__7725 = bc.notif;
  var prev__7726 = bc.stuff.call(null, key);
  bc.stuff = cljs.core.dissoc.call(null, bc.stuff, key);
  return crate.binding.notify.call(null, bc.notif, null, cljs.core.PersistentVector.fromArray(["\ufdd0'remove", "\ufdd0'elem".call(null, prev__7726), null]))
};
crate.binding.__GT_indexed = function __GT_indexed(coll) {
  if(cljs.core.map_QMARK_.call(null, coll)) {
    return cljs.core.seq.call(null, coll)
  }else {
    if(cljs.core.set_QMARK_.call(null, coll)) {
      return cljs.core.map.call(null, cljs.core.juxt.call(null, cljs.core.identity, cljs.core.identity), coll)
    }else {
      if("\ufdd0'else") {
        return cljs.core.map_indexed.call(null, cljs.core.vector, coll)
      }else {
        return null
      }
    }
  }
};
crate.binding.__GT_keyed = function __GT_keyed(coll, keyfn) {
  return cljs.core.into.call(null, cljs.core.set([]), cljs.core.map.call(null, keyfn, crate.binding.__GT_indexed.call(null, coll)))
};
crate.binding.__GT_path = function() {
  var __GT_path__delegate = function(bc, segs) {
    return cljs.core.concat.call(null, function() {
      var or__3824__auto____7727 = crate.binding.opt.call(null, bc, "\ufdd0'path");
      if(cljs.core.truth_(or__3824__auto____7727)) {
        return or__3824__auto____7727
      }else {
        return cljs.core.PersistentVector.fromArray([])
      }
    }(), segs)
  };
  var __GT_path = function(bc, var_args) {
    var segs = null;
    if(goog.isDef(var_args)) {
      segs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return __GT_path__delegate.call(this, bc, segs)
  };
  __GT_path.cljs$lang$maxFixedArity = 1;
  __GT_path.cljs$lang$applyTo = function(arglist__7728) {
    var bc = cljs.core.first(arglist__7728);
    var segs = cljs.core.rest(arglist__7728);
    return __GT_path__delegate(bc, segs)
  };
  __GT_path.cljs$lang$arity$variadic = __GT_path__delegate;
  return __GT_path
}();
crate.binding.bc_compare = function bc_compare(bc, neue) {
  var prev__7729 = bc.stuff;
  var pset__7730 = cljs.core.into.call(null, cljs.core.set([]), cljs.core.keys.call(null, prev__7729));
  var nset__7731 = crate.binding.__GT_keyed.call(null, neue, crate.binding.opt.call(null, bc, "\ufdd0'keyfn"));
  var added__7732 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, nset__7731, pset__7730));
  var removed__7733 = cljs.core.into.call(null, cljs.core.sorted_set.call(null), clojure.set.difference.call(null, pset__7730, nset__7731));
  var G__7734__7735 = cljs.core.seq.call(null, added__7732);
  if(cljs.core.truth_(G__7734__7735)) {
    var a__7736 = cljs.core.first.call(null, G__7734__7735);
    var G__7734__7737 = G__7734__7735;
    while(true) {
      crate.binding.bc_add.call(null, bc, a__7736, a__7736);
      var temp__3974__auto____7738 = cljs.core.next.call(null, G__7734__7737);
      if(cljs.core.truth_(temp__3974__auto____7738)) {
        var G__7734__7739 = temp__3974__auto____7738;
        var G__7746 = cljs.core.first.call(null, G__7734__7739);
        var G__7747 = G__7734__7739;
        a__7736 = G__7746;
        G__7734__7737 = G__7747;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__7740__7741 = cljs.core.seq.call(null, removed__7733);
  if(cljs.core.truth_(G__7740__7741)) {
    var r__7742 = cljs.core.first.call(null, G__7740__7741);
    var G__7740__7743 = G__7740__7741;
    while(true) {
      crate.binding.bc_remove.call(null, bc, r__7742);
      var temp__3974__auto____7744 = cljs.core.next.call(null, G__7740__7743);
      if(cljs.core.truth_(temp__3974__auto____7744)) {
        var G__7740__7745 = temp__3974__auto____7744;
        var G__7748 = cljs.core.first.call(null, G__7740__7745);
        var G__7749 = G__7740__7745;
        r__7742 = G__7748;
        G__7740__7743 = G__7749;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.binding.bound_coll = function() {
  var bound_coll__delegate = function(atm, p__7750) {
    var vec__7751__7752 = p__7750;
    var path__7753 = cljs.core.nth.call(null, vec__7751__7752, 0, null);
    var opts__7754 = cljs.core.nth.call(null, vec__7751__7752, 1, null);
    var vec__7755__7756 = cljs.core.truth_(opts__7754) ? cljs.core.PersistentVector.fromArray([path__7753, opts__7754]) : cljs.core.PersistentVector.fromArray([null, path__7753]);
    var path__7757 = cljs.core.nth.call(null, vec__7755__7756, 0, null);
    var opts__7758 = cljs.core.nth.call(null, vec__7755__7756, 1, null);
    var atm__7759 = cljs.core.not.call(null, path__7757) ? atm : crate.binding.subatom.call(null, atm, path__7757);
    var opts__7760 = cljs.core.assoc.call(null, opts__7758, "\ufdd0'path", path__7757);
    var opts__7761 = cljs.core.not.call(null, "\ufdd0'keyfn".call(null, opts__7760)) ? cljs.core.assoc.call(null, opts__7760, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__7760, "\ufdd0'keyfn", cljs.core.comp.call(null, "\ufdd0'keyfn".call(null, opts__7760), cljs.core.second));
    var bc__7762 = new crate.binding.bound_collection(atm__7759, new crate.binding.notifier(null), opts__7761, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__7759, cljs.core.gensym.call(null, "bound-coll"), function(_7763, _7764, _, neue) {
      return crate.binding.bc_compare.call(null, bc__7762, neue)
    });
    crate.binding.bc_compare.call(null, bc__7762, cljs.core.deref.call(null, atm__7759));
    return bc__7762
  };
  var bound_coll = function(atm, var_args) {
    var p__7750 = null;
    if(goog.isDef(var_args)) {
      p__7750 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound_coll__delegate.call(this, atm, p__7750)
  };
  bound_coll.cljs$lang$maxFixedArity = 1;
  bound_coll.cljs$lang$applyTo = function(arglist__7765) {
    var atm = cljs.core.first(arglist__7765);
    var p__7750 = cljs.core.rest(arglist__7765);
    return bound_coll__delegate(atm, p__7750)
  };
  bound_coll.cljs$lang$arity$variadic = bound_coll__delegate;
  return bound_coll
}();
crate.binding.map_bound = function() {
  var map_bound__delegate = function(as, atm, p__7766) {
    var vec__7767__7768 = p__7766;
    var opts__7769 = cljs.core.nth.call(null, vec__7767__7768, 0, null);
    var opts__7770 = cljs.core.assoc.call(null, opts__7769, "\ufdd0'as", as);
    var atm__7771 = cljs.core.not.call(null, "\ufdd0'path".call(null, opts__7770)) ? atm : crate.binding.subatom.call(null, atm, "\ufdd0'path".call(null, opts__7770));
    var opts__7772 = cljs.core.not.call(null, "\ufdd0'keyfn".call(null, opts__7770)) ? cljs.core.assoc.call(null, opts__7770, "\ufdd0'keyfn", cljs.core.first) : cljs.core.assoc.call(null, opts__7770, "\ufdd0'keyfn", cljs.core.comp.call(null, "\ufdd0'keyfn".call(null, opts__7770), cljs.core.second));
    var bc__7773 = new crate.binding.bound_collection(atm__7771, new crate.binding.notifier(null), opts__7772, cljs.core.sorted_map.call(null));
    cljs.core.add_watch.call(null, atm__7771, cljs.core.gensym.call(null, "bound-coll"), function(_7774, _7775, _, neue) {
      return crate.binding.bc_compare.call(null, bc__7773, neue)
    });
    crate.binding.bc_compare.call(null, bc__7773, cljs.core.deref.call(null, atm__7771));
    return bc__7773
  };
  var map_bound = function(as, atm, var_args) {
    var p__7766 = null;
    if(goog.isDef(var_args)) {
      p__7766 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return map_bound__delegate.call(this, as, atm, p__7766)
  };
  map_bound.cljs$lang$maxFixedArity = 2;
  map_bound.cljs$lang$applyTo = function(arglist__7776) {
    var as = cljs.core.first(arglist__7776);
    var atm = cljs.core.first(cljs.core.next(arglist__7776));
    var p__7766 = cljs.core.rest(cljs.core.next(arglist__7776));
    return map_bound__delegate(as, atm, p__7766)
  };
  map_bound.cljs$lang$arity$variadic = map_bound__delegate;
  return map_bound
}();
crate.binding.binding_QMARK_ = function binding_QMARK_(b) {
  var G__7777__7778 = b;
  if(G__7777__7778 != null) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____7779 = null;
      if(cljs.core.truth_(or__3824__auto____7779)) {
        return or__3824__auto____7779
      }else {
        return G__7777__7778.crate$binding$bindable$
      }
    }())) {
      return true
    }else {
      if(!G__7777__7778.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__7777__7778)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable, G__7777__7778)
  }
};
crate.binding.binding_coll_QMARK_ = function binding_coll_QMARK_(b) {
  var G__7780__7781 = b;
  if(G__7780__7781 != null) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____7782 = null;
      if(cljs.core.truth_(or__3824__auto____7782)) {
        return or__3824__auto____7782
      }else {
        return G__7780__7781.crate$binding$bindable_coll$
      }
    }())) {
      return true
    }else {
      if(!G__7780__7781.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__7780__7781)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, crate.binding.bindable_coll, G__7780__7781)
  }
};
crate.binding.value = function value(b) {
  return crate.binding._value.call(null, b)
};
crate.binding.index = function index(sub_atom) {
  return cljs.core.last.call(null, sub_atom.path)
};
crate.binding.on_change = function on_change(b, func) {
  return crate.binding._on_change.call(null, b, func)
};
crate.binding.bound = function() {
  var bound__delegate = function(atm, p__7783) {
    var vec__7784__7785 = p__7783;
    var func__7786 = cljs.core.nth.call(null, vec__7784__7785, 0, null);
    var func__7788 = function() {
      var or__3824__auto____7787 = func__7786;
      if(cljs.core.truth_(or__3824__auto____7787)) {
        return or__3824__auto____7787
      }else {
        return cljs.core.identity
      }
    }();
    return new crate.binding.atom_binding(atm, func__7788)
  };
  var bound = function(atm, var_args) {
    var p__7783 = null;
    if(goog.isDef(var_args)) {
      p__7783 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return bound__delegate.call(this, atm, p__7783)
  };
  bound.cljs$lang$maxFixedArity = 1;
  bound.cljs$lang$applyTo = function(arglist__7789) {
    var atm = cljs.core.first(arglist__7789);
    var p__7783 = cljs.core.rest(arglist__7789);
    return bound__delegate(atm, p__7783)
  };
  bound.cljs$lang$arity$variadic = bound__delegate;
  return bound
}();
goog.provide("crate.compiler");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("clojure.string");
goog.require("crate.binding");
crate.compiler.xmlns = cljs.core.ObjMap.fromObject(["\ufdd0'xhtml", "\ufdd0'svg"], {"\ufdd0'xhtml":"http://www.w3.org/1999/xhtml", "\ufdd0'svg":"http://www.w3.org/2000/svg"});
void 0;
void 0;
void 0;
crate.compiler.group_id = cljs.core.atom.call(null, 0);
crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.fromArray([]));
crate.compiler.capture_binding = function capture_binding(tag, b) {
  return cljs.core.swap_BANG_.call(null, crate.compiler.bindings, cljs.core.conj, cljs.core.PersistentVector.fromArray([tag, b]))
};
crate.compiler.as_content = function as_content(parent, content) {
  var G__7491__7492 = cljs.core.seq.call(null, content);
  if(cljs.core.truth_(G__7491__7492)) {
    var c__7493 = cljs.core.first.call(null, G__7491__7492);
    var G__7491__7494 = G__7491__7492;
    while(true) {
      var child__7495 = c__7493 == null ? null : cljs.core.map_QMARK_.call(null, c__7493) ? function() {
        throw"Maps cannot be used as content";
      }() : cljs.core.string_QMARK_.call(null, c__7493) ? goog.dom.createTextNode.call(null, c__7493) : cljs.core.vector_QMARK_.call(null, c__7493) ? crate.compiler.elem_factory.call(null, c__7493) : cljs.core.seq_QMARK_.call(null, c__7493) ? as_content.call(null, parent, c__7493) : cljs.core.truth_(crate.binding.binding_coll_QMARK_.call(null, c__7493)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'coll", c__7493);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__7493)]))
      }() : cljs.core.truth_(crate.binding.binding_QMARK_.call(null, c__7493)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'text", c__7493);
        return as_content.call(null, parent, cljs.core.PersistentVector.fromArray([crate.binding.value.call(null, c__7493)]))
      }() : cljs.core.truth_(c__7493.nodeName) ? c__7493 : cljs.core.truth_(c__7493.get) ? c__7493.get(0) : "\ufdd0'else" ? goog.dom.createTextNode.call(null, [cljs.core.str(c__7493)].join("")) : null;
      if(cljs.core.truth_(child__7495)) {
        goog.dom.appendChild.call(null, parent, child__7495)
      }else {
      }
      var temp__3974__auto____7496 = cljs.core.next.call(null, G__7491__7494);
      if(cljs.core.truth_(temp__3974__auto____7496)) {
        var G__7491__7497 = temp__3974__auto____7496;
        var G__7498 = cljs.core.first.call(null, G__7491__7497);
        var G__7499 = G__7491__7497;
        c__7493 = G__7498;
        G__7491__7494 = G__7499;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_binding = function() {
  var method_table__695__auto____7500 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject([], {}));
  var prefer_table__696__auto____7501 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject([], {}));
  var method_cache__697__auto____7502 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject([], {}));
  var cached_hierarchy__698__auto____7503 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject([], {}));
  var hierarchy__699__auto____7504 = cljs.core.get.call(null, cljs.core.ObjMap.fromObject([], {}), "\ufdd0'hierarchy", cljs.core.global_hierarchy);
  return new cljs.core.MultiFn("dom-binding", function(type, _7505, _) {
    return type
  }, "\ufdd0'default", hierarchy__699__auto____7504, method_table__695__auto____7500, prefer_table__696__auto____7501, method_cache__697__auto____7502, cached_hierarchy__698__auto____7503)
}();
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'text", function(_, b, elem) {
  return crate.binding.on_change.call(null, b, function(v) {
    goog.dom.removeChildren.call(null, elem);
    return crate.compiler.as_content.call(null, elem, cljs.core.PersistentVector.fromArray([v]))
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'attr", function(_, p__7506, elem) {
  var vec__7507__7508 = p__7506;
  var k__7509 = cljs.core.nth.call(null, vec__7507__7508, 0, null);
  var b__7510 = cljs.core.nth.call(null, vec__7507__7508, 1, null);
  return crate.binding.on_change.call(null, b__7510, function(v) {
    return crate.compiler.dom_attr.call(null, elem, k__7509, v)
  })
});
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'style", function(_, p__7511, elem) {
  var vec__7512__7513 = p__7511;
  var k__7514 = cljs.core.nth.call(null, vec__7512__7513, 0, null);
  var b__7515 = cljs.core.nth.call(null, vec__7512__7513, 1, null);
  return crate.binding.on_change.call(null, b__7515, function(v) {
    if(cljs.core.truth_(k__7514)) {
      return crate.compiler.dom_style.call(null, elem, k__7514, v)
    }else {
      return crate.compiler.dom_style.call(null, elem, v)
    }
  })
});
crate.compiler.dom_add = function dom_add(bc, parent, elem, v) {
  var temp__3971__auto____7516 = crate.binding.opt.call(null, bc, "\ufdd0'add");
  if(cljs.core.truth_(temp__3971__auto____7516)) {
    var adder__7517 = temp__3971__auto____7516;
    return adder__7517.call(null, parent, elem, v)
  }else {
    return goog.dom.appendChild.call(null, parent, elem)
  }
};
crate.compiler.dom_remove = function dom_remove(bc, elem) {
  var temp__3971__auto____7518 = crate.binding.opt.call(null, bc, "\ufdd0'remove");
  if(cljs.core.truth_(temp__3971__auto____7518)) {
    var remover__7519 = temp__3971__auto____7518;
    return remover__7519.call(null, elem)
  }else {
    return goog.dom.removeNode.call(null, elem)
  }
};
cljs.core._add_method.call(null, crate.compiler.dom_binding, "\ufdd0'coll", function(_, bc, parent) {
  return crate.binding.on_change.call(null, bc, function(type, elem, v) {
    var pred__7520__7523 = cljs.core._EQ_;
    var expr__7521__7524 = type;
    if(cljs.core.truth_(pred__7520__7523.call(null, "\ufdd0'add", expr__7521__7524))) {
      return crate.compiler.dom_add.call(null, bc, parent, elem, v)
    }else {
      if(cljs.core.truth_(pred__7520__7523.call(null, "\ufdd0'remove", expr__7521__7524))) {
        return crate.compiler.dom_remove.call(null, bc, elem)
      }else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__7521__7524)].join(""));
      }
    }
  })
});
crate.compiler.handle_bindings = function handle_bindings(bs, elem) {
  var G__7525__7526 = cljs.core.seq.call(null, bs);
  if(cljs.core.truth_(G__7525__7526)) {
    var G__7528__7530 = cljs.core.first.call(null, G__7525__7526);
    var vec__7529__7531 = G__7528__7530;
    var type__7532 = cljs.core.nth.call(null, vec__7529__7531, 0, null);
    var b__7533 = cljs.core.nth.call(null, vec__7529__7531, 1, null);
    var G__7525__7534 = G__7525__7526;
    var G__7528__7535 = G__7528__7530;
    var G__7525__7536 = G__7525__7534;
    while(true) {
      var vec__7537__7538 = G__7528__7535;
      var type__7539 = cljs.core.nth.call(null, vec__7537__7538, 0, null);
      var b__7540 = cljs.core.nth.call(null, vec__7537__7538, 1, null);
      var G__7525__7541 = G__7525__7536;
      crate.compiler.dom_binding.call(null, type__7539, b__7540, elem);
      var temp__3974__auto____7542 = cljs.core.next.call(null, G__7525__7541);
      if(cljs.core.truth_(temp__3974__auto____7542)) {
        var G__7525__7543 = temp__3974__auto____7542;
        var G__7544 = cljs.core.first.call(null, G__7525__7543);
        var G__7545 = G__7525__7543;
        G__7528__7535 = G__7544;
        G__7525__7536 = G__7545;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
crate.compiler.dom_style = function() {
  var dom_style = null;
  var dom_style__2 = function(elem, v) {
    if(cljs.core.string_QMARK_.call(null, v)) {
      elem.setAttribute("style", v)
    }else {
      if(cljs.core.map_QMARK_.call(null, v)) {
        var G__7546__7547 = cljs.core.seq.call(null, v);
        if(cljs.core.truth_(G__7546__7547)) {
          var G__7549__7551 = cljs.core.first.call(null, G__7546__7547);
          var vec__7550__7552 = G__7549__7551;
          var k__7553 = cljs.core.nth.call(null, vec__7550__7552, 0, null);
          var v__7554 = cljs.core.nth.call(null, vec__7550__7552, 1, null);
          var G__7546__7555 = G__7546__7547;
          var G__7549__7556 = G__7549__7551;
          var G__7546__7557 = G__7546__7555;
          while(true) {
            var vec__7558__7559 = G__7549__7556;
            var k__7560 = cljs.core.nth.call(null, vec__7558__7559, 0, null);
            var v__7561 = cljs.core.nth.call(null, vec__7558__7559, 1, null);
            var G__7546__7562 = G__7546__7557;
            dom_style.call(null, elem, k__7560, v__7561);
            var temp__3974__auto____7563 = cljs.core.next.call(null, G__7546__7562);
            if(cljs.core.truth_(temp__3974__auto____7563)) {
              var G__7546__7564 = temp__3974__auto____7563;
              var G__7566 = cljs.core.first.call(null, G__7546__7564);
              var G__7567 = G__7546__7564;
              G__7549__7556 = G__7566;
              G__7546__7557 = G__7567;
              continue
            }else {
            }
            break
          }
        }else {
        }
      }else {
        if(cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v))) {
          crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([null, v]));
          dom_style.call(null, elem, crate.binding.value.call(null, v))
        }else {
        }
      }
    }
    return elem
  };
  var dom_style__3 = function(elem, k, v) {
    var v__7565 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
      crate.compiler.capture_binding.call(null, "\ufdd0'style", cljs.core.PersistentVector.fromArray([k, v]));
      return crate.binding.value.call(null, v)
    }() : v;
    return goog.style.setStyle.call(null, elem, cljs.core.name.call(null, k), v__7565)
  };
  dom_style = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_style__2.call(this, elem, k);
      case 3:
        return dom_style__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_style.cljs$lang$arity$2 = dom_style__2;
  dom_style.cljs$lang$arity$3 = dom_style__3;
  return dom_style
}();
crate.compiler.dom_attr = function() {
  var dom_attr = null;
  var dom_attr__2 = function(elem, attrs) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.not.call(null, cljs.core.map_QMARK_.call(null, attrs))) {
        return elem.getAttribute(cljs.core.name.call(null, attrs))
      }else {
        var G__7568__7569 = cljs.core.seq.call(null, attrs);
        if(cljs.core.truth_(G__7568__7569)) {
          var G__7571__7573 = cljs.core.first.call(null, G__7568__7569);
          var vec__7572__7574 = G__7571__7573;
          var k__7575 = cljs.core.nth.call(null, vec__7572__7574, 0, null);
          var v__7576 = cljs.core.nth.call(null, vec__7572__7574, 1, null);
          var G__7568__7577 = G__7568__7569;
          var G__7571__7578 = G__7571__7573;
          var G__7568__7579 = G__7568__7577;
          while(true) {
            var vec__7580__7581 = G__7571__7578;
            var k__7582 = cljs.core.nth.call(null, vec__7580__7581, 0, null);
            var v__7583 = cljs.core.nth.call(null, vec__7580__7581, 1, null);
            var G__7568__7584 = G__7568__7579;
            dom_attr.call(null, elem, k__7582, v__7583);
            var temp__3974__auto____7585 = cljs.core.next.call(null, G__7568__7584);
            if(cljs.core.truth_(temp__3974__auto____7585)) {
              var G__7568__7586 = temp__3974__auto____7585;
              var G__7588 = cljs.core.first.call(null, G__7568__7586);
              var G__7589 = G__7568__7586;
              G__7571__7578 = G__7588;
              G__7568__7579 = G__7589;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }
    }else {
      return null
    }
  };
  var dom_attr__3 = function(elem, k, v) {
    if(cljs.core._EQ_.call(null, k, "\ufdd0'style")) {
      crate.compiler.dom_style.call(null, elem, v)
    }else {
      var v__7587 = cljs.core.truth_(crate.binding.binding_QMARK_.call(null, v)) ? function() {
        crate.compiler.capture_binding.call(null, "\ufdd0'attr", cljs.core.PersistentVector.fromArray([k, v]));
        return crate.binding.value.call(null, v)
      }() : v;
      elem.setAttribute(cljs.core.name.call(null, k), v__7587)
    }
    return elem
  };
  dom_attr = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return dom_attr__2.call(this, elem, k);
      case 3:
        return dom_attr__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dom_attr.cljs$lang$arity$2 = dom_attr__2;
  dom_attr.cljs$lang$arity$3 = dom_attr__3;
  return dom_attr
}();
crate.compiler.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
crate.compiler.normalize_map_attrs = function normalize_map_attrs(map_attrs) {
  return cljs.core.into.call(null, cljs.core.ObjMap.fromObject([], {}), cljs.core.map.call(null, function(p__7591) {
    var vec__7592__7593 = p__7591;
    var n__7594 = cljs.core.nth.call(null, vec__7592__7593, 0, null);
    var v__7595 = cljs.core.nth.call(null, vec__7592__7593, 1, null);
    if(v__7595 === true) {
      return cljs.core.PersistentVector.fromArray([n__7594, cljs.core.name.call(null, n__7594)])
    }else {
      return cljs.core.PersistentVector.fromArray([n__7594, v__7595])
    }
  }, cljs.core.filter.call(null, cljs.core.comp.call(null, cljs.core.boolean$, cljs.core.second), map_attrs)))
};
crate.compiler.normalize_element = function normalize_element(p__7596) {
  var vec__7597__7598 = p__7596;
  var tag__7599 = cljs.core.nth.call(null, vec__7597__7598, 0, null);
  var content__7600 = cljs.core.nthnext.call(null, vec__7597__7598, 1);
  if(cljs.core.not.call(null, function() {
    var or__3824__auto____7601 = cljs.core.keyword_QMARK_.call(null, tag__7599);
    if(or__3824__auto____7601) {
      return or__3824__auto____7601
    }else {
      var or__3824__auto____7602 = cljs.core.symbol_QMARK_.call(null, tag__7599);
      if(or__3824__auto____7602) {
        return or__3824__auto____7602
      }else {
        return cljs.core.string_QMARK_.call(null, tag__7599)
      }
    }
  }())) {
    throw[cljs.core.str(tag__7599), cljs.core.str(" is not a valid tag name.")].join("");
  }else {
  }
  var vec__7603__7605 = cljs.core.re_matches.call(null, crate.compiler.re_tag, cljs.core.name.call(null, tag__7599));
  var ___7606 = cljs.core.nth.call(null, vec__7603__7605, 0, null);
  var tag__7607 = cljs.core.nth.call(null, vec__7603__7605, 1, null);
  var id__7608 = cljs.core.nth.call(null, vec__7603__7605, 2, null);
  var class$__7609 = cljs.core.nth.call(null, vec__7603__7605, 3, null);
  var vec__7604__7616 = function() {
    var vec__7610__7611 = clojure.string.split.call(null, tag__7607, /:/);
    var nsp__7612 = cljs.core.nth.call(null, vec__7610__7611, 0, null);
    var t__7613 = cljs.core.nth.call(null, vec__7610__7611, 1, null);
    var ns_xmlns__7614 = crate.compiler.xmlns.call(null, cljs.core.keyword.call(null, nsp__7612));
    if(cljs.core.truth_(t__7613)) {
      return cljs.core.PersistentVector.fromArray([function() {
        var or__3824__auto____7615 = ns_xmlns__7614;
        if(cljs.core.truth_(or__3824__auto____7615)) {
          return or__3824__auto____7615
        }else {
          return nsp__7612
        }
      }(), t__7613])
    }else {
      return cljs.core.PersistentVector.fromArray(["\ufdd0'xhtml".call(null, crate.compiler.xmlns), nsp__7612])
    }
  }();
  var nsp__7617 = cljs.core.nth.call(null, vec__7604__7616, 0, null);
  var tag__7618 = cljs.core.nth.call(null, vec__7604__7616, 1, null);
  var tag_attrs__7620 = cljs.core.into.call(null, cljs.core.ObjMap.fromObject([], {}), cljs.core.filter.call(null, function(p1__7590_SHARP_) {
    return cljs.core.not.call(null, cljs.core.second.call(null, p1__7590_SHARP_) == null)
  }, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":function() {
    var or__3824__auto____7619 = id__7608;
    if(cljs.core.truth_(or__3824__auto____7619)) {
      return or__3824__auto____7619
    }else {
      return null
    }
  }(), "\ufdd0'class":cljs.core.truth_(class$__7609) ? clojure.string.replace.call(null, class$__7609, /\./, " ") : null})));
  var map_attrs__7621 = cljs.core.first.call(null, content__7600);
  if(cljs.core.map_QMARK_.call(null, map_attrs__7621)) {
    return cljs.core.PersistentVector.fromArray([nsp__7617, tag__7618, cljs.core.merge.call(null, tag_attrs__7620, crate.compiler.normalize_map_attrs.call(null, map_attrs__7621)), cljs.core.next.call(null, content__7600)])
  }else {
    return cljs.core.PersistentVector.fromArray([nsp__7617, tag__7618, tag_attrs__7620, content__7600])
  }
};
crate.compiler.parse_content = function parse_content(elem, content) {
  var attrs__7622 = cljs.core.first.call(null, content);
  if(cljs.core.map_QMARK_.call(null, attrs__7622)) {
    crate.compiler.dom_attr.call(null, elem, attrs__7622);
    return cljs.core.rest.call(null, content)
  }else {
    return content
  }
};
crate.compiler.create_elem = cljs.core.truth_(document.createElementNS) ? function(nsp, tag) {
  return document.createElementNS(nsp, tag)
} : function(_, tag) {
  return document.createElement(tag)
};
crate.compiler.elem_factory = function elem_factory(tag_def) {
  var bindings7623__7624 = crate.compiler.bindings;
  try {
    crate.compiler.bindings = cljs.core.atom.call(null, cljs.core.PersistentVector.fromArray([]));
    var vec__7626__7627 = crate.compiler.normalize_element.call(null, tag_def);
    var nsp__7628 = cljs.core.nth.call(null, vec__7626__7627, 0, null);
    var tag__7629 = cljs.core.nth.call(null, vec__7626__7627, 1, null);
    var attrs__7630 = cljs.core.nth.call(null, vec__7626__7627, 2, null);
    var content__7631 = cljs.core.nth.call(null, vec__7626__7627, 3, null);
    var elem__7632 = crate.compiler.create_elem.call(null, nsp__7628, tag__7629);
    crate.compiler.dom_attr.call(null, elem__7632, attrs__7630);
    crate.compiler.as_content.call(null, elem__7632, content__7631);
    crate.compiler.handle_bindings.call(null, cljs.core.deref.call(null, crate.compiler.bindings), elem__7632);
    return elem__7632
  }finally {
    crate.compiler.bindings = bindings7623__7624
  }
};
crate.compiler.add_optional_attrs = function add_optional_attrs(func) {
  return function() {
    var G__7637__delegate = function(args) {
      if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, args))) {
        var vec__7633__7634 = cljs.core.apply.call(null, func, cljs.core.rest.call(null, args));
        var tag__7635 = cljs.core.nth.call(null, vec__7633__7634, 0, null);
        var body__7636 = cljs.core.nthnext.call(null, vec__7633__7634, 1);
        if(cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, body__7636))) {
          return cljs.core.apply.call(null, cljs.core.vector, tag__7635, cljs.core.merge.call(null, cljs.core.first.call(null, body__7636), cljs.core.first.call(null, args)), cljs.core.rest.call(null, body__7636))
        }else {
          return cljs.core.apply.call(null, cljs.core.vector, tag__7635, cljs.core.first.call(null, args), body__7636)
        }
      }else {
        return cljs.core.apply.call(null, func, args)
      }
    };
    var G__7637 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__7637__delegate.call(this, args)
    };
    G__7637.cljs$lang$maxFixedArity = 0;
    G__7637.cljs$lang$applyTo = function(arglist__7638) {
      var args = cljs.core.seq(arglist__7638);
      return G__7637__delegate(args)
    };
    G__7637.cljs$lang$arity$variadic = G__7637__delegate;
    return G__7637
  }()
};
goog.provide("crate.util");
goog.require("cljs.core");
goog.require("clojure.string");
crate.util._STAR_base_url_STAR_ = null;
crate.util.as_str = function() {
  var as_str = null;
  var as_str__0 = function() {
    return""
  };
  var as_str__1 = function(x) {
    if(function() {
      var or__3824__auto____7840 = cljs.core.symbol_QMARK_.call(null, x);
      if(or__3824__auto____7840) {
        return or__3824__auto____7840
      }else {
        return cljs.core.keyword_QMARK_.call(null, x)
      }
    }()) {
      return cljs.core.name.call(null, x)
    }else {
      return[cljs.core.str(x)].join("")
    }
  };
  var as_str__2 = function() {
    var G__7841__delegate = function(x, xs) {
      return function(s, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__7842 = [cljs.core.str(s), cljs.core.str(as_str.call(null, cljs.core.first.call(null, more)))].join("");
            var G__7843 = cljs.core.next.call(null, more);
            s = G__7842;
            more = G__7843;
            continue
          }else {
            return s
          }
          break
        }
      }.call(null, as_str.call(null, x), xs)
    };
    var G__7841 = function(x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__7841__delegate.call(this, x, xs)
    };
    G__7841.cljs$lang$maxFixedArity = 1;
    G__7841.cljs$lang$applyTo = function(arglist__7844) {
      var x = cljs.core.first(arglist__7844);
      var xs = cljs.core.rest(arglist__7844);
      return G__7841__delegate(x, xs)
    };
    G__7841.cljs$lang$arity$variadic = G__7841__delegate;
    return G__7841
  }();
  as_str = function(x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return as_str__0.call(this);
      case 1:
        return as_str__1.call(this, x);
      default:
        return as_str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_str.cljs$lang$maxFixedArity = 1;
  as_str.cljs$lang$applyTo = as_str__2.cljs$lang$applyTo;
  as_str.cljs$lang$arity$0 = as_str__0;
  as_str.cljs$lang$arity$1 = as_str__1;
  as_str.cljs$lang$arity$variadic = as_str__2.cljs$lang$arity$variadic;
  return as_str
}();
crate.util.escape_html = function escape_html(text) {
  return clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, crate.util.as_str.call(null, text), "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;")
};
crate.util.to_uri = function to_uri(uri) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, /^\w+:.*/, uri))) {
    return uri
  }else {
    return[cljs.core.str(crate.util._STAR_base_url_STAR_), cljs.core.str(uri)].join("")
  }
};
crate.util.url_encode_component = function url_encode_component(s) {
  return encodeURIComponent(crate.util.as_str.call(null, s))
};
crate.util.url_encode = function url_encode(params) {
  return clojure.string.join.call(null, "&", function() {
    var iter__625__auto____7852 = function iter__7845(s__7846) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__7846__7847 = s__7846;
        while(true) {
          if(cljs.core.truth_(cljs.core.seq.call(null, s__7846__7847))) {
            var vec__7848__7849 = cljs.core.first.call(null, s__7846__7847);
            var k__7850 = cljs.core.nth.call(null, vec__7848__7849, 0, null);
            var v__7851 = cljs.core.nth.call(null, vec__7848__7849, 1, null);
            return cljs.core.cons.call(null, [cljs.core.str(crate.util.url_encode_component.call(null, k__7850)), cljs.core.str("="), cljs.core.str(crate.util.url_encode_component.call(null, v__7851))].join(""), iter__7845.call(null, cljs.core.rest.call(null, s__7846__7847)))
          }else {
            return null
          }
          break
        }
      })
    };
    return iter__625__auto____7852.call(null, params)
  }())
};
crate.util.url = function() {
  var url__delegate = function(args) {
    var params__7853 = cljs.core.last.call(null, args);
    var args__7854 = cljs.core.butlast.call(null, args);
    return[cljs.core.str(crate.util.to_uri.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, args__7854)), cljs.core.str(cljs.core.map_QMARK_.call(null, params__7853) ? [cljs.core.str("?"), cljs.core.str(crate.util.url_encode.call(null, params__7853))].join("") : params__7853)].join("")))].join("")
  };
  var url = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return url__delegate.call(this, args)
  };
  url.cljs$lang$maxFixedArity = 0;
  url.cljs$lang$applyTo = function(arglist__7855) {
    var args = cljs.core.seq(arglist__7855);
    return url__delegate(args)
  };
  url.cljs$lang$arity$variadic = url__delegate;
  return url
}();
goog.provide("crate.core");
goog.require("cljs.core");
goog.require("crate.compiler");
goog.require("crate.util");
crate.core.group_id = cljs.core.atom.call(null, 0);
crate.core.html = function() {
  var html__delegate = function(tags) {
    var res__7489 = cljs.core.map.call(null, crate.compiler.elem_factory, tags);
    if(cljs.core.truth_(cljs.core.second.call(null, res__7489))) {
      return res__7489
    }else {
      return cljs.core.first.call(null, res__7489)
    }
  };
  var html = function(var_args) {
    var tags = null;
    if(goog.isDef(var_args)) {
      tags = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return html__delegate.call(this, tags)
  };
  html.cljs$lang$maxFixedArity = 0;
  html.cljs$lang$applyTo = function(arglist__7490) {
    var tags = cljs.core.seq(arglist__7490);
    return html__delegate(tags)
  };
  html.cljs$lang$arity$variadic = html__delegate;
  return html
}();
crate.core.h = crate.util.escape_html;
goog.provide("fetch.util");
goog.require("cljs.core");
fetch.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce.call(null, function(m, p__7972) {
          var vec__7973__7974 = p__7972;
          var k__7975 = cljs.core.nth.call(null, vec__7973__7974, 0, null);
          var v__7976 = cljs.core.nth.call(null, vec__7973__7974, 1, null);
          return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__7975), clj__GT_js.call(null, v__7976))
        }, cljs.core.ObjMap.fromObject([], {}), x).strobj
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
void 0;
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____7978 = reader;
    if(and__3822__auto____7978) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____7978
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    return function() {
      var or__3824__auto____7979 = cljs.reader.read_char[goog.typeOf.call(null, reader)];
      if(or__3824__auto____7979) {
        return or__3824__auto____7979
      }else {
        var or__3824__auto____7980 = cljs.reader.read_char["_"];
        if(or__3824__auto____7980) {
          return or__3824__auto____7980
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____7981 = reader;
    if(and__3822__auto____7981) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____7981
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    return function() {
      var or__3824__auto____7982 = cljs.reader.unread[goog.typeOf.call(null, reader)];
      if(or__3824__auto____7982) {
        return or__3824__auto____7982
      }else {
        var or__3824__auto____7983 = cljs.reader.unread["_"];
        if(or__3824__auto____7983) {
          return or__3824__auto____7983
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
void 0;
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__454__auto__) {
  return cljs.core.list.call(null, "cljs.reader.StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__7984 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__7984.buffer_atom))) {
    var idx__7985 = cljs.core.deref.call(null, this__7984.index_atom);
    cljs.core.swap_BANG_.call(null, this__7984.index_atom, cljs.core.inc);
    return this__7984.s[idx__7985]
  }else {
    var buf__7986 = cljs.core.deref.call(null, this__7984.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__7984.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__7986)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__7987 = this;
  return cljs.core.swap_BANG_.call(null, this__7987.buffer_atom, function(p1__7977_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__7977_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____7988 = goog.string.isBreakingWhitespace.call(null, ch);
  if(cljs.core.truth_(or__3824__auto____7988)) {
    return or__3824__auto____7988
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric.call(null, ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____7989 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____7989) {
    return or__3824__auto____7989
  }else {
    var and__3822__auto____7991 = function() {
      var or__3824__auto____7990 = "+" === initch;
      if(or__3824__auto____7990) {
        return or__3824__auto____7990
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____7991)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__7992 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__7992);
        return next_ch__7992
      }())
    }else {
      return and__3822__auto____7991
    }
  }
};
void 0;
void 0;
void 0;
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw cljs.core.apply.call(null, cljs.core.str, msg);
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__7993) {
    var rdr = cljs.core.first(arglist__7993);
    var msg = cljs.core.rest(arglist__7993);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____7994 = ch != "#";
  if(and__3822__auto____7994) {
    var and__3822__auto____7995 = ch != "'";
    if(and__3822__auto____7995) {
      var and__3822__auto____7996 = ch != ":";
      if(and__3822__auto____7996) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____7996
      }
    }else {
      return and__3822__auto____7995
    }
  }else {
    return and__3822__auto____7994
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__7997 = new goog.string.StringBuffer(initch);
  var ch__7998 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____7999 = ch__7998 == null;
      if(or__3824__auto____7999) {
        return or__3824__auto____7999
      }else {
        var or__3824__auto____8000 = cljs.reader.whitespace_QMARK_.call(null, ch__7998);
        if(or__3824__auto____8000) {
          return or__3824__auto____8000
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__7998)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__7998);
      return sb__7997.toString()
    }else {
      var G__8001 = function() {
        sb__7997.append(ch__7998);
        return sb__7997
      }();
      var G__8002 = cljs.reader.read_char.call(null, rdr);
      sb__7997 = G__8001;
      ch__7998 = G__8002;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__8003 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____8004 = ch__8003 === "n";
      if(or__3824__auto____8004) {
        return or__3824__auto____8004
      }else {
        var or__3824__auto____8005 = ch__8003 === "r";
        if(or__3824__auto____8005) {
          return or__3824__auto____8005
        }else {
          return ch__8003 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__8006 = re.exec(s);
  if(matches__8006 != null) {
    if(matches__8006.length === 1) {
      return matches__8006[0]
    }else {
      return matches__8006
    }
  }else {
    return null
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__8007 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__8008 = groups__8007[2];
  if(!function() {
    var or__3824__auto____8009 = group3__8008 == null;
    if(or__3824__auto____8009) {
      return or__3824__auto____8009
    }else {
      return group3__8008.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__8010 = "-" === groups__8007[1] ? -1 : 1;
    var a__8011 = cljs.core.truth_(groups__8007[3]) ? [groups__8007[3], 10] : cljs.core.truth_(groups__8007[4]) ? [groups__8007[4], 16] : cljs.core.truth_(groups__8007[5]) ? [groups__8007[5], 8] : cljs.core.truth_(groups__8007[7]) ? [groups__8007[7], parseInt(groups__8007[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__8012 = a__8011[0];
    var radix__8013 = a__8011[1];
    if(n__8012 == null) {
      return null
    }else {
      return negate__8010 * parseInt(n__8012, radix__8013)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__8014 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__8015 = groups__8014[1];
  var denominator__8016 = groups__8014[2];
  return parseInt(numinator__8015) / parseInt(denominator__8016)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__8017 = re.exec(s);
  if(function() {
    var and__3822__auto____8018 = matches__8017 != null;
    if(and__3822__auto____8018) {
      return matches__8017[0] === s
    }else {
      return and__3822__auto____8018
    }
  }()) {
    if(matches__8017.length === 1) {
      return matches__8017[0]
    }else {
      return matches__8017
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if("f" === c) {
    return"\u000c"
  }else {
    if("b" === c) {
      return"\u0008"
    }else {
      if('"' === c) {
        return'"'
      }else {
        if("\\" === c) {
          return"\\"
        }else {
          if("n" === c) {
            return"\n"
          }else {
            if("r" === c) {
              return"\r"
            }else {
              if("t" === c) {
                return"\t"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_unicode_char = function read_unicode_char(reader, initch) {
  return cljs.reader.reader_error.call(null, reader, "Unicode characters not supported by reader (yet)")
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__8019 = cljs.reader.read_char.call(null, reader);
  var mapresult__8020 = cljs.reader.escape_char_map.call(null, ch__8019);
  if(cljs.core.truth_(mapresult__8020)) {
    return mapresult__8020
  }else {
    if(function() {
      var or__3824__auto____8021 = "u" === ch__8019;
      if(or__3824__auto____8021) {
        return or__3824__auto____8021
      }else {
        return cljs.reader.numeric_QMARK_.call(null, ch__8019)
      }
    }()) {
      return cljs.reader.read_unicode_char.call(null, reader, ch__8019)
    }else {
      return cljs.reader.reader_error.call(null, reader, "Unsupported escape character: \\", ch__8019)
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__8022 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__8022))) {
      var G__8023 = cljs.reader.read_char.call(null, rdr);
      ch__8022 = G__8023;
      continue
    }else {
      return ch__8022
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__8024 = cljs.core.transient$.call(null, cljs.core.PersistentVector.fromArray([]));
  while(true) {
    var ch__8025 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__8025)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__8025) {
      return cljs.core.persistent_BANG_.call(null, a__8024)
    }else {
      var temp__3971__auto____8026 = cljs.reader.macros.call(null, ch__8025);
      if(cljs.core.truth_(temp__3971__auto____8026)) {
        var macrofn__8027 = temp__3971__auto____8026;
        var mret__8028 = macrofn__8027.call(null, rdr, ch__8025);
        var G__8030 = mret__8028 === rdr ? a__8024 : cljs.core.conj_BANG_.call(null, a__8024, mret__8028);
        a__8024 = G__8030;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__8025);
        var o__8029 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__8031 = o__8029 === rdr ? a__8024 : cljs.core.conj_BANG_.call(null, a__8024, o__8029);
        a__8024 = G__8031;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
void 0;
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__8032 = cljs.reader.read_char.call(null, rdr);
  var dm__8033 = cljs.reader.dispatch_macros.call(null, ch__8032);
  if(cljs.core.truth_(dm__8033)) {
    return dm__8033.call(null, rdr, _)
  }else {
    var temp__3971__auto____8034 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__8032);
    if(cljs.core.truth_(temp__3971__auto____8034)) {
      var obj__8035 = temp__3971__auto____8034;
      return obj__8035
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__8032)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__8036 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__8036))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__8036)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__8037 = new goog.string.StringBuffer(initch);
  var ch__8038 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8039 = ch__8038 == null;
      if(or__3824__auto____8039) {
        return or__3824__auto____8039
      }else {
        var or__3824__auto____8040 = cljs.reader.whitespace_QMARK_.call(null, ch__8038);
        if(or__3824__auto____8040) {
          return or__3824__auto____8040
        }else {
          return cljs.reader.macros.call(null, ch__8038)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__8038);
      var s__8041 = buffer__8037.toString();
      var or__3824__auto____8042 = cljs.reader.match_number.call(null, s__8041);
      if(cljs.core.truth_(or__3824__auto____8042)) {
        return or__3824__auto____8042
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__8041, "]")
      }
    }else {
      var G__8043 = function() {
        buffer__8037.append(ch__8038);
        return buffer__8037
      }();
      var G__8044 = cljs.reader.read_char.call(null, reader);
      buffer__8037 = G__8043;
      ch__8038 = G__8044;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__8045 = new goog.string.StringBuffer;
  var ch__8046 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__8046 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__8046) {
        var G__8047 = function() {
          buffer__8045.append(cljs.reader.escape_char.call(null, buffer__8045, reader));
          return buffer__8045
        }();
        var G__8048 = cljs.reader.read_char.call(null, reader);
        buffer__8045 = G__8047;
        ch__8046 = G__8048;
        continue
      }else {
        if('"' === ch__8046) {
          return buffer__8045.toString()
        }else {
          if("\ufdd0'default") {
            var G__8049 = function() {
              buffer__8045.append(ch__8046);
              return buffer__8045
            }();
            var G__8050 = cljs.reader.read_char.call(null, reader);
            buffer__8045 = G__8049;
            ch__8046 = G__8050;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = cljs.core.ObjMap.fromObject(["nil", "true", "false"], {"nil":null, "true":true, "false":false});
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__8051 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains.call(null, token__8051, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__8051, 0, token__8051.indexOf("/")), cljs.core.subs.call(null, token__8051, token__8051.indexOf("/") + 1, token__8051.length))
  }else {
    return cljs.core.get.call(null, cljs.reader.special_symbols, token__8051, cljs.core.symbol.call(null, token__8051))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__8052 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__8053 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__8052);
  var token__8054 = a__8053[0];
  var ns__8055 = a__8053[1];
  var name__8056 = a__8053[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____8058 = function() {
      var and__3822__auto____8057 = !(void 0 === ns__8055);
      if(and__3822__auto____8057) {
        return ns__8055.substring(ns__8055.length - 2, ns__8055.length) === ":/"
      }else {
        return and__3822__auto____8057
      }
    }();
    if(cljs.core.truth_(or__3824__auto____8058)) {
      return or__3824__auto____8058
    }else {
      var or__3824__auto____8059 = name__8056[name__8056.length - 1] === ":";
      if(or__3824__auto____8059) {
        return or__3824__auto____8059
      }else {
        return!(token__8054.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__8054)
  }else {
    if(cljs.core.truth_(ns__8055)) {
      return cljs.core.keyword.call(null, ns__8055.substring(0, ns__8055.indexOf("/")), name__8056)
    }else {
      return cljs.core.keyword.call(null, token__8054)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__8060 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__8060)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__8061 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__8062__8063 = o__8061;
    if(G__8062__8063 != null) {
      if(function() {
        var or__3824__auto____8064 = G__8062__8063.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8064) {
          return or__3824__auto____8064
        }else {
          return G__8062__8063.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8062__8063.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__8062__8063)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__8062__8063)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__8061, cljs.core.merge.call(null, cljs.core.meta.call(null, o__8061), m__8060))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if("@" === c) {
    return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
  }else {
    if("`" === c) {
      return cljs.reader.not_implemented
    }else {
      if('"' === c) {
        return cljs.reader.read_string_STAR_
      }else {
        if("#" === c) {
          return cljs.reader.read_dispatch
        }else {
          if("%" === c) {
            return cljs.reader.not_implemented
          }else {
            if("'" === c) {
              return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
            }else {
              if("(" === c) {
                return cljs.reader.read_list
              }else {
                if(")" === c) {
                  return cljs.reader.read_unmatched_delimiter
                }else {
                  if(":" === c) {
                    return cljs.reader.read_keyword
                  }else {
                    if(";" === c) {
                      return cljs.reader.not_implemented
                    }else {
                      if("[" === c) {
                        return cljs.reader.read_vector
                      }else {
                        if("{" === c) {
                          return cljs.reader.read_map
                        }else {
                          if("\\" === c) {
                            return cljs.reader.read_char
                          }else {
                            if("]" === c) {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if("}" === c) {
                                return cljs.reader.read_unmatched_delimiter
                              }else {
                                if("^" === c) {
                                  return cljs.reader.read_meta
                                }else {
                                  if("~" === c) {
                                    return cljs.reader.not_implemented
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if("_" === s) {
    return cljs.reader.read_discard
  }else {
    if("!" === s) {
      return cljs.reader.read_comment
    }else {
      if('"' === s) {
        return cljs.reader.read_regex
      }else {
        if("<" === s) {
          return cljs.reader.throwing_reader.call(null, "Unreadable form")
        }else {
          if("{" === s) {
            return cljs.reader.read_set
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__8065 = cljs.reader.read_char.call(null, reader);
    if(ch__8065 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__8065)) {
        var G__8068 = reader;
        var G__8069 = eof_is_error;
        var G__8070 = sentinel;
        var G__8071 = is_recursive;
        reader = G__8068;
        eof_is_error = G__8069;
        sentinel = G__8070;
        is_recursive = G__8071;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__8065)) {
          var G__8072 = cljs.reader.read_comment.call(null, reader, ch__8065);
          var G__8073 = eof_is_error;
          var G__8074 = sentinel;
          var G__8075 = is_recursive;
          reader = G__8072;
          eof_is_error = G__8073;
          sentinel = G__8074;
          is_recursive = G__8075;
          continue
        }else {
          if("\ufdd0'else") {
            var f__8066 = cljs.reader.macros.call(null, ch__8065);
            var res__8067 = cljs.core.truth_(f__8066) ? f__8066.call(null, reader, ch__8065) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__8065) ? cljs.reader.read_number.call(null, reader, ch__8065) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__8065) : null;
            if(res__8067 === reader) {
              var G__8076 = reader;
              var G__8077 = eof_is_error;
              var G__8078 = sentinel;
              var G__8079 = is_recursive;
              reader = G__8076;
              eof_is_error = G__8077;
              sentinel = G__8078;
              is_recursive = G__8079;
              continue
            }else {
              return res__8067
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__8080 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__8080, true, null, false)
};
cljs.reader.read_date = function read_date(str) {
  return new Date(Date.parse.call(null, str))
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.core.identity, "uuid":cljs.core.identity, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__8081 = cljs.reader.read_symbol.call(null, rdr, initch);
  var form__8082 = cljs.reader.read.call(null, rdr, true, null, false);
  var pfn__8083 = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__8081));
  if(cljs.core.truth_(pfn__8083)) {
    return pfn__8083.call(null, form__8082)
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__8081), cljs.core.pr_str.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_)))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__8084 = cljs.core.name.call(null, tag);
  var old_parser__8085 = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__8084);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__8084, f);
  return old_parser__8085
};
goog.provide("fetch.core");
goog.require("cljs.core");
goog.require("goog.net.XhrIo");
goog.require("clojure.string");
goog.require("fetch.util");
goog.require("cljs.reader");
goog.require("goog.events");
goog.require("goog.Uri.QueryData");
goog.require("goog.structs");
fetch.core.__GT_method = function __GT_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
fetch.core.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route])
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__7953__7954 = route;
      var m__7955 = cljs.core.nth.call(null, vec__7953__7954, 0, null);
      var u__7956 = cljs.core.nth.call(null, vec__7953__7954, 1, null);
      return cljs.core.PersistentVector.fromArray([fetch.core.__GT_method.call(null, m__7955), u__7956])
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route])
      }else {
        return null
      }
    }
  }
};
fetch.core.__GT_data = function __GT_data(d) {
  var cur__7957 = fetch.util.clj__GT_js.call(null, d);
  var query__7958 = goog.Uri.QueryData.createFromMap.call(null, new goog.structs.Map(cur__7957));
  return[cljs.core.str(query__7958)].join("")
};
fetch.core.__GT_callback = function __GT_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__7959 = req.getResponseText();
      return callback.call(null, data__7959)
    }
  }else {
    return null
  }
};
fetch.core.xhr = function() {
  var xhr__delegate = function(route, content, callback, p__7960) {
    var vec__7961__7962 = p__7960;
    var opts__7963 = cljs.core.nth.call(null, vec__7961__7962, 0, null);
    var req__7965 = new goog.net.XhrIo;
    var vec__7964__7966 = fetch.core.parse_route.call(null, route);
    var method__7967 = cljs.core.nth.call(null, vec__7964__7966, 0, null);
    var uri__7968 = cljs.core.nth.call(null, vec__7964__7966, 1, null);
    var data__7969 = fetch.core.__GT_data.call(null, content);
    var callback__7970 = fetch.core.__GT_callback.call(null, callback);
    if(cljs.core.truth_(callback__7970)) {
      goog.events.listen.call(null, req__7965, goog.net.EventType.COMPLETE, function() {
        return callback__7970.call(null, req__7965)
      })
    }else {
    }
    return req__7965.send(uri__7968, method__7967, data__7969, cljs.core.truth_(opts__7963) ? fetch.util.clj__GT_js.call(null, opts__7963) : null)
  };
  var xhr = function(route, content, callback, var_args) {
    var p__7960 = null;
    if(goog.isDef(var_args)) {
      p__7960 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return xhr__delegate.call(this, route, content, callback, p__7960)
  };
  xhr.cljs$lang$maxFixedArity = 3;
  xhr.cljs$lang$applyTo = function(arglist__7971) {
    var route = cljs.core.first(arglist__7971);
    var content = cljs.core.first(cljs.core.next(arglist__7971));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7971)));
    var p__7960 = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7971)));
    return xhr__delegate(route, content, callback, p__7960)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("fetch.remotes");
goog.require("cljs.core");
goog.require("fetch.core");
goog.require("cljs.reader");
fetch.remotes.remote_uri = "/_fetch";
fetch.remotes.remote_callback = function remote_callback(remote, params, callback) {
  return fetch.core.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", fetch.remotes.remote_uri]), cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.truth_(callback) ? function(data) {
    var data__7952 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
    return callback.call(null, cljs.reader.read_string.call(null, data__7952))
  } : null)
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.events");
var div__5031 = document.createElement("div");
var test_html__5032 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__5031.innerHTML = test_html__5032;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__5031.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__5031.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__5031.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__4805 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"]);
var table_section_wrapper__4806 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"]);
var cell_wrapper__4807 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"]);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"]), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""]), "tfoot":table_section_wrapper__4806, "caption":table_section_wrapper__4806, "optgroup":opt_wrapper__4805, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"]), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"]), "td":cell_wrapper__4807, "thead":table_section_wrapper__4806, "th":cell_wrapper__4807, "option":opt_wrapper__4805, "tbody":table_section_wrapper__4806, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"]), "colgroup":table_section_wrapper__4806});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___4808 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__4812 = function() {
    var and__3822__auto____4809 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____4809) {
      return no_tbody_QMARK___4808
    }else {
      return and__3822__auto____4809
    }
  }() ? function() {
    var and__3822__auto____4810 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____4810)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____4810
    }
  }() : function() {
    var and__3822__auto____4811 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____4811) {
      return no_tbody_QMARK___4808
    }else {
      return and__3822__auto____4811
    }
  }() ? div.childNodes : cljs.core.PersistentVector.fromArray([]);
  var G__4813__4814 = cljs.core.seq.call(null, tbody__4812);
  if(cljs.core.truth_(G__4813__4814)) {
    var child__4815 = cljs.core.first.call(null, G__4813__4814);
    var G__4813__4816 = G__4813__4814;
    while(true) {
      if(function() {
        var and__3822__auto____4817 = cljs.core._EQ_.call(null, child__4815.nodeName, "tbody");
        if(and__3822__auto____4817) {
          return cljs.core._EQ_.call(null, child__4815.childNodes.length, 0)
        }else {
          return and__3822__auto____4817
        }
      }()) {
        child__4815.parentNode.removeChild(child__4815)
      }else {
      }
      var temp__3974__auto____4818 = cljs.core.next.call(null, G__4813__4816);
      if(cljs.core.truth_(temp__3974__auto____4818)) {
        var G__4813__4819 = temp__3974__auto____4818;
        var G__4820 = cljs.core.first.call(null, G__4813__4819);
        var G__4821 = G__4813__4819;
        child__4815 = G__4820;
        G__4813__4816 = G__4821;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__4823 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__4824 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__4823)))].join("").toLowerCase();
  var vec__4822__4825 = cljs.core.get.call(null, domina.wrap_map, tag_name__4824, "\ufdd0'default".call(null, domina.wrap_map));
  var depth__4826 = cljs.core.nth.call(null, vec__4822__4825, 0, null);
  var start_wrap__4827 = cljs.core.nth.call(null, vec__4822__4825, 1, null);
  var end_wrap__4828 = cljs.core.nth.call(null, vec__4822__4825, 2, null);
  var div__4832 = function() {
    var wrapper__4830 = function() {
      var div__4829 = document.createElement("div");
      div__4829.innerHTML = [cljs.core.str(start_wrap__4827), cljs.core.str(html__4823), cljs.core.str(end_wrap__4828)].join("");
      return div__4829
    }();
    var level__4831 = depth__4826;
    while(true) {
      if(level__4831 > 0) {
        var G__4834 = wrapper__4830.lastChild;
        var G__4835 = level__4831 - 1;
        wrapper__4830 = G__4834;
        level__4831 = G__4835;
        continue
      }else {
        return wrapper__4830
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__4832, html__4823)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____4833 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____4833) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__4823)
    }else {
      return and__3822__auto____4833
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__4832, html__4823)
  }else {
  }
  return div__4832.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
void 0;
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____4836 = content;
    if(and__3822__auto____4836) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____4836
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    return function() {
      var or__3824__auto____4837 = domina.nodes[goog.typeOf.call(null, content)];
      if(or__3824__auto____4837) {
        return or__3824__auto____4837
      }else {
        var or__3824__auto____4838 = domina.nodes["_"];
        if(or__3824__auto____4838) {
          return or__3824__auto____4838
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____4839 = nodeseq;
    if(and__3822__auto____4839) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____4839
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    return function() {
      var or__3824__auto____4840 = domina.single_node[goog.typeOf.call(null, nodeseq)];
      if(or__3824__auto____4840) {
        return or__3824__auto____4840
      }else {
        var or__3824__auto____4841 = domina.single_node["_"];
        if(or__3824__auto____4841) {
          return or__3824__auto____4841
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
void 0;
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____4842 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____4842)) {
        return cljs.core.not.call(null, cljs.core._EQ_.call(null, window.console, undefined))
      }else {
        return and__3822__auto____4842
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__4843) {
    var mesg = cljs.core.seq(arglist__4843);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__4844) {
    var mesg = cljs.core.seq(arglist__4844);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement.call(null, cljs.core.name.call(null, id))
};
void 0;
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t4845) {
    domina.t4845 = function(class_name, by_class, __meta__389__auto__) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.__meta__389__auto__ = __meta__389__auto__;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 196608
    };
    domina.t4845.cljs$lang$type = true;
    domina.t4845.cljs$lang$ctorPrSeq = function(this__454__auto__) {
      return cljs.core.list.call(null, "domina.t4845")
    };
    domina.t4845.prototype.domina$DomContent$ = true;
    domina.t4845.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__4846 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass.call(null, cljs.core.name.call(null, this__4846.class_name)))
    };
    domina.t4845.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__4847 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass.call(null, cljs.core.name.call(null, this__4847.class_name)))
    };
    domina.t4845.prototype.cljs$core$IMeta$ = true;
    domina.t4845.prototype.cljs$core$IMeta$_meta$arity$1 = function(___390__auto__) {
      var this__4848 = this;
      return this__4848.__meta__389__auto__
    };
    domina.t4845.prototype.cljs$core$IWithMeta$ = true;
    domina.t4845.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___390__auto__, __meta__389__auto__) {
      var this__4849 = this;
      return new domina.t4845(this__4849.class_name, this__4849.by_class, __meta__389__auto__)
    };
    domina.t4845
  }else {
  }
  return new domina.t4845(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__4850_SHARP_) {
    return p1__4850_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
void 0;
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__4851_SHARP_, p2__4852_SHARP_) {
    return goog.dom.insertChildAt.call(null, p1__4851_SHARP_, p2__4852_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__4854_SHARP_, p2__4853_SHARP_) {
    return goog.dom.insertSiblingBefore.call(null, p2__4853_SHARP_, p1__4854_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__4856_SHARP_, p2__4855_SHARP_) {
    return goog.dom.insertSiblingAfter.call(null, p2__4855_SHARP_, p1__4856_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__4858_SHARP_, p2__4857_SHARP_) {
    return goog.dom.replaceNode.call(null, p2__4857_SHARP_, p1__4858_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__4859 = goog.style.getStyle.call(null, domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__4859))) {
    return null
  }else {
    return s__4859
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__4860__4861 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(cljs.core.truth_(G__4860__4861)) {
      var n__4862 = cljs.core.first.call(null, G__4860__4861);
      var G__4860__4863 = G__4860__4861;
      while(true) {
        goog.style.setStyle.call(null, n__4862, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____4864 = cljs.core.next.call(null, G__4860__4863);
        if(cljs.core.truth_(temp__3974__auto____4864)) {
          var G__4860__4865 = temp__3974__auto____4864;
          var G__4866 = cljs.core.first.call(null, G__4860__4865);
          var G__4867 = G__4860__4865;
          n__4862 = G__4866;
          G__4860__4863 = G__4867;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__4868) {
    var content = cljs.core.first(arglist__4868);
    var name = cljs.core.first(cljs.core.next(arglist__4868));
    var value = cljs.core.rest(cljs.core.next(arglist__4868));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__4869__4870 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(cljs.core.truth_(G__4869__4870)) {
      var n__4871 = cljs.core.first.call(null, G__4869__4870);
      var G__4869__4872 = G__4869__4870;
      while(true) {
        n__4871.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____4873 = cljs.core.next.call(null, G__4869__4872);
        if(cljs.core.truth_(temp__3974__auto____4873)) {
          var G__4869__4874 = temp__3974__auto____4873;
          var G__4875 = cljs.core.first.call(null, G__4869__4874);
          var G__4876 = G__4869__4874;
          n__4871 = G__4875;
          G__4869__4872 = G__4876;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__4877) {
    var content = cljs.core.first(arglist__4877);
    var name = cljs.core.first(cljs.core.next(arglist__4877));
    var value = cljs.core.rest(cljs.core.next(arglist__4877));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__4878__4879 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(cljs.core.truth_(G__4878__4879)) {
    var n__4880 = cljs.core.first.call(null, G__4878__4879);
    var G__4878__4881 = G__4878__4879;
    while(true) {
      n__4880.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____4882 = cljs.core.next.call(null, G__4878__4881);
      if(cljs.core.truth_(temp__3974__auto____4882)) {
        var G__4878__4883 = temp__3974__auto____4882;
        var G__4884 = cljs.core.first.call(null, G__4878__4883);
        var G__4885 = G__4878__4883;
        n__4880 = G__4884;
        G__4878__4881 = G__4885;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__4886__4887 = pair.split(/\s*:\s*/);
    var k__4888 = cljs.core.nth.call(null, vec__4886__4887, 0, null);
    var v__4889 = cljs.core.nth.call(null, vec__4886__4887, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____4890 = k__4888;
      if(cljs.core.truth_(and__3822__auto____4890)) {
        return v__4889
      }else {
        return and__3822__auto____4890
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__4888.toLowerCase()), v__4889)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.fromObject([], {}), style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__4892 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__4892)) {
    return domina.parse_style_attributes.call(null, style__4892)
  }else {
    if(cljs.core.truth_(style__4892.cssText)) {
      return domina.parse_style_attributes.call(null, style__4892.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__4893 = domina.single_node.call(null, content);
  var attrs__4894 = node__4893.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__4891_SHARP_) {
    var attr__4895 = attrs__4894.item(p1__4891_SHARP_);
    var value__4896 = attr__4895.nodeValue;
    if(function() {
      var and__3822__auto____4897 = cljs.core.not_EQ_.call(null, null, value__4896);
      if(and__3822__auto____4897) {
        return cljs.core.not_EQ_.call(null, "", value__4896)
      }else {
        return and__3822__auto____4897
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__4895.nodeName.toLowerCase())], [attr__4895.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__4894.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__4898__4899 = cljs.core.seq.call(null, styles);
  if(cljs.core.truth_(G__4898__4899)) {
    var G__4901__4903 = cljs.core.first.call(null, G__4898__4899);
    var vec__4902__4904 = G__4901__4903;
    var name__4905 = cljs.core.nth.call(null, vec__4902__4904, 0, null);
    var value__4906 = cljs.core.nth.call(null, vec__4902__4904, 1, null);
    var G__4898__4907 = G__4898__4899;
    var G__4901__4908 = G__4901__4903;
    var G__4898__4909 = G__4898__4907;
    while(true) {
      var vec__4910__4911 = G__4901__4908;
      var name__4912 = cljs.core.nth.call(null, vec__4910__4911, 0, null);
      var value__4913 = cljs.core.nth.call(null, vec__4910__4911, 1, null);
      var G__4898__4914 = G__4898__4909;
      domina.set_style_BANG_.call(null, content, name__4912, value__4913);
      var temp__3974__auto____4915 = cljs.core.next.call(null, G__4898__4914);
      if(cljs.core.truth_(temp__3974__auto____4915)) {
        var G__4898__4916 = temp__3974__auto____4915;
        var G__4917 = cljs.core.first.call(null, G__4898__4916);
        var G__4918 = G__4898__4916;
        G__4901__4908 = G__4917;
        G__4898__4909 = G__4918;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__4919__4920 = cljs.core.seq.call(null, attrs);
  if(cljs.core.truth_(G__4919__4920)) {
    var G__4922__4924 = cljs.core.first.call(null, G__4919__4920);
    var vec__4923__4925 = G__4922__4924;
    var name__4926 = cljs.core.nth.call(null, vec__4923__4925, 0, null);
    var value__4927 = cljs.core.nth.call(null, vec__4923__4925, 1, null);
    var G__4919__4928 = G__4919__4920;
    var G__4922__4929 = G__4922__4924;
    var G__4919__4930 = G__4919__4928;
    while(true) {
      var vec__4931__4932 = G__4922__4929;
      var name__4933 = cljs.core.nth.call(null, vec__4931__4932, 0, null);
      var value__4934 = cljs.core.nth.call(null, vec__4931__4932, 1, null);
      var G__4919__4935 = G__4919__4930;
      domina.set_attr_BANG_.call(null, content, name__4933, value__4934);
      var temp__3974__auto____4936 = cljs.core.next.call(null, G__4919__4935);
      if(cljs.core.truth_(temp__3974__auto____4936)) {
        var G__4919__4937 = temp__3974__auto____4936;
        var G__4938 = cljs.core.first.call(null, G__4919__4937);
        var G__4939 = G__4919__4937;
        G__4922__4929 = G__4938;
        G__4919__4930 = G__4939;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has.call(null, domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__4940__4941 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(cljs.core.truth_(G__4940__4941)) {
    var node__4942 = cljs.core.first.call(null, G__4940__4941);
    var G__4940__4943 = G__4940__4941;
    while(true) {
      goog.dom.classes.add.call(null, node__4942, class$);
      var temp__3974__auto____4944 = cljs.core.next.call(null, G__4940__4943);
      if(cljs.core.truth_(temp__3974__auto____4944)) {
        var G__4940__4945 = temp__3974__auto____4944;
        var G__4946 = cljs.core.first.call(null, G__4940__4945);
        var G__4947 = G__4940__4945;
        node__4942 = G__4946;
        G__4940__4943 = G__4947;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__4948__4949 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(cljs.core.truth_(G__4948__4949)) {
    var node__4950 = cljs.core.first.call(null, G__4948__4949);
    var G__4948__4951 = G__4948__4949;
    while(true) {
      goog.dom.classes.remove.call(null, node__4950, class$);
      var temp__3974__auto____4952 = cljs.core.next.call(null, G__4948__4951);
      if(cljs.core.truth_(temp__3974__auto____4952)) {
        var G__4948__4953 = temp__3974__auto____4952;
        var G__4954 = cljs.core.first.call(null, G__4948__4953);
        var G__4955 = G__4948__4953;
        node__4950 = G__4954;
        G__4948__4951 = G__4955;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get.call(null, domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__4956 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__4957__4958 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(cljs.core.truth_(G__4957__4958)) {
    var node__4959 = cljs.core.first.call(null, G__4957__4958);
    var G__4957__4960 = G__4957__4958;
    while(true) {
      goog.dom.classes.set.call(null, node__4959, classes__4956);
      var temp__3974__auto____4961 = cljs.core.next.call(null, G__4957__4960);
      if(cljs.core.truth_(temp__3974__auto____4961)) {
        var G__4957__4962 = temp__3974__auto____4961;
        var G__4963 = cljs.core.first.call(null, G__4957__4962);
        var G__4964 = G__4957__4962;
        node__4959 = G__4963;
        G__4957__4960 = G__4964;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim.call(null, goog.dom.getTextContent.call(null, domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__4965__4966 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(cljs.core.truth_(G__4965__4966)) {
    var node__4967 = cljs.core.first.call(null, G__4965__4966);
    var G__4965__4968 = G__4965__4966;
    while(true) {
      goog.dom.setTextContent.call(null, node__4967, value);
      var temp__3974__auto____4969 = cljs.core.next.call(null, G__4965__4968);
      if(cljs.core.truth_(temp__3974__auto____4969)) {
        var G__4965__4970 = temp__3974__auto____4969;
        var G__4971 = cljs.core.first.call(null, G__4965__4970);
        var G__4972 = G__4965__4970;
        node__4967 = G__4971;
        G__4965__4968 = G__4972;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue.call(null, domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__4973__4974 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(cljs.core.truth_(G__4973__4974)) {
    var node__4975 = cljs.core.first.call(null, G__4973__4974);
    var G__4973__4976 = G__4973__4974;
    while(true) {
      goog.dom.forms.setValue.call(null, node__4975, value);
      var temp__3974__auto____4977 = cljs.core.next.call(null, G__4973__4976);
      if(cljs.core.truth_(temp__3974__auto____4977)) {
        var G__4973__4978 = temp__3974__auto____4977;
        var G__4979 = cljs.core.first.call(null, G__4973__4978);
        var G__4980 = G__4973__4978;
        node__4975 = G__4979;
        G__4973__4976 = G__4980;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___4981 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___4982 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__4983 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___4984 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__4983);
  if(cljs.core.truth_(function() {
    var and__3822__auto____4985 = allows_inner_html_QMARK___4981;
    if(cljs.core.truth_(and__3822__auto____4985)) {
      var and__3822__auto____4987 = function() {
        var or__3824__auto____4986 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____4986)) {
          return or__3824__auto____4986
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___4982)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____4987)) {
        return cljs.core.not.call(null, special_tag_QMARK___4984)
      }else {
        return and__3822__auto____4987
      }
    }else {
      return and__3822__auto____4985
    }
  }())) {
    var value__4988 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__4991__4992 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(cljs.core.truth_(G__4991__4992)) {
        var node__4993 = cljs.core.first.call(null, G__4991__4992);
        var G__4991__4994 = G__4991__4992;
        while(true) {
          goog.events.removeAll.call(null, node__4993);
          node__4993.innerHTML = value__4988;
          var temp__3974__auto____4995 = cljs.core.next.call(null, G__4991__4994);
          if(cljs.core.truth_(temp__3974__auto____4995)) {
            var G__4991__4996 = temp__3974__auto____4995;
            var G__4997 = cljs.core.first.call(null, G__4991__4996);
            var G__4998 = G__4991__4996;
            node__4993 = G__4997;
            G__4991__4994 = G__4998;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e4989) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e4989)) {
        var e__4990 = e4989;
        domina.replace_children_BANG_.call(null, content, value__4988)
      }else {
        if("\ufdd0'else") {
          throw e4989;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__4999 = domina.single_node.call(null, node).__domina_data;
    var value__5000 = cljs.core.truth_(m__4999) ? cljs.core.get.call(null, m__4999, key) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____5001 = bubble;
      if(cljs.core.truth_(and__3822__auto____5001)) {
        return value__5000 == null
      }else {
        return and__3822__auto____5001
      }
    }())) {
      var temp__3974__auto____5002 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____5002)) {
        var parent__5003 = temp__3974__auto____5002;
        return get_data.call(null, parent__5003, key, true)
      }else {
        return null
      }
    }else {
      return value__5000
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__5007 = function() {
    var or__3824__auto____5006 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____5006)) {
      return or__3824__auto____5006
    }else {
      return cljs.core.ObjMap.fromObject([], {})
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__5007, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__5008 = domina.nodes.call(null, parent_content);
  var children__5009 = domina.nodes.call(null, child_content);
  var first_child__5017 = function() {
    var frag__5010 = document.createDocumentFragment();
    var G__5011__5012 = cljs.core.seq.call(null, children__5009);
    if(cljs.core.truth_(G__5011__5012)) {
      var child__5013 = cljs.core.first.call(null, G__5011__5012);
      var G__5011__5014 = G__5011__5012;
      while(true) {
        frag__5010.appendChild(child__5013);
        var temp__3974__auto____5015 = cljs.core.next.call(null, G__5011__5014);
        if(cljs.core.truth_(temp__3974__auto____5015)) {
          var G__5011__5016 = temp__3974__auto____5015;
          var G__5019 = cljs.core.first.call(null, G__5011__5016);
          var G__5020 = G__5011__5016;
          child__5013 = G__5019;
          G__5011__5014 = G__5020;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__5010
  }();
  var other_children__5018 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__5008) - 1, function() {
    return first_child__5017.cloneNode(true)
  }));
  if(cljs.core.truth_(cljs.core.seq.call(null, parents__5008))) {
    f.call(null, cljs.core.first.call(null, parents__5008), first_child__5017);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__5004_SHARP_, p2__5005_SHARP_) {
      return f.call(null, p1__5004_SHARP_, p2__5005_SHARP_)
    }, cljs.core.rest.call(null, parents__5008), other_children__5018))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      })
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      })
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____5021 = obj;
  if(cljs.core.truth_(and__3822__auto____5021)) {
    return obj.length
  }else {
    return and__3822__auto____5021
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__5022__5023 = list_thing;
      if(G__5022__5023 != null) {
        if(function() {
          var or__3824__auto____5024 = G__5022__5023.cljs$lang$protocol_mask$partition0$ & 4194304;
          if(or__3824__auto____5024) {
            return or__3824__auto____5024
          }else {
            return G__5022__5023.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__5022__5023.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5022__5023)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5022__5023)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing]))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__5025__5026 = content;
      if(G__5025__5026 != null) {
        if(function() {
          var or__3824__auto____5027 = G__5025__5026.cljs$lang$protocol_mask$partition0$ & 4194304;
          if(or__3824__auto____5027) {
            return or__3824__auto____5027
          }else {
            return G__5025__5026.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__5025__5026.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5025__5026)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5025__5026)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content]))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__5028__5029 = content;
      if(G__5028__5029 != null) {
        if(function() {
          var or__3824__auto____5030 = G__5028__5029.cljs$lang$protocol_mask$partition0$ & 4194304;
          if(or__3824__auto____5030) {
            return or__3824__auto____5030
          }else {
            return G__5028__5029.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__5028__5029.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5028__5029)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__5028__5029)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("jayq.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("clojure.string");
jayq.core.crate_meta = function crate_meta(func) {
  return func.prototype._crateGroup
};
jayq.core.__GT_selector = function __GT_selector(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    if(cljs.core.fn_QMARK_.call(null, sel)) {
      var temp__3971__auto____7856 = jayq.core.crate_meta.call(null, sel);
      if(cljs.core.truth_(temp__3971__auto____7856)) {
        var cm__7857 = temp__3971__auto____7856;
        return[cljs.core.str("[crateGroup="), cljs.core.str(cm__7857), cljs.core.str("]")].join("")
      }else {
        return sel
      }
    }else {
      if(cljs.core.keyword_QMARK_.call(null, sel)) {
        return cljs.core.name.call(null, sel)
      }else {
        if("\ufdd0'else") {
          return sel
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.$ = function() {
  var $__delegate = function(sel, p__7858) {
    var vec__7859__7860 = p__7858;
    var context__7861 = cljs.core.nth.call(null, vec__7859__7860, 0, null);
    if(cljs.core.not.call(null, context__7861)) {
      return jQuery(jayq.core.__GT_selector.call(null, sel))
    }else {
      return jQuery(jayq.core.__GT_selector.call(null, sel), context__7861)
    }
  };
  var $ = function(sel, var_args) {
    var p__7858 = null;
    if(goog.isDef(var_args)) {
      p__7858 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return $__delegate.call(this, sel, p__7858)
  };
  $.cljs$lang$maxFixedArity = 1;
  $.cljs$lang$applyTo = function(arglist__7862) {
    var sel = cljs.core.first(arglist__7862);
    var p__7858 = cljs.core.rest(arglist__7862);
    return $__delegate(sel, p__7858)
  };
  $.cljs$lang$arity$variadic = $__delegate;
  return $
}();
jQuery.prototype.cljs$core$IReduce$ = true;
jQuery.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  return cljs.core.ci_reduce.call(null, jayq.core.coll, f, cljs.core.first.call(null, this$), cljs.core.count.call(null, this$))
};
jQuery.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  return cljs.core.ci_reduce.call(null, jayq.core.coll, f, start, jayq.core.i)
};
jQuery.prototype.cljs$core$ILookup$ = true;
jQuery.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var or__3824__auto____7863 = this$.slice(k, k + 1);
  if(cljs.core.truth_(or__3824__auto____7863)) {
    return or__3824__auto____7863
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  return cljs.core._nth.call(null, this$, k, not_found)
};
jQuery.prototype.cljs$core$ISequential$ = true;
jQuery.prototype.cljs$core$IIndexed$ = true;
jQuery.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    return null
  }
};
jQuery.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  if(n < cljs.core.count.call(null, this$)) {
    return this$.slice(n, n + 1)
  }else {
    if(void 0 === not_found) {
      return null
    }else {
      return not_found
    }
  }
};
jQuery.prototype.cljs$core$ICounted$ = true;
jQuery.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  return this$.size()
};
jQuery.prototype.cljs$core$ISeq$ = true;
jQuery.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  return this$.get(0)
};
jQuery.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  if(cljs.core.count.call(null, this$) > 1) {
    return this$.slice(1)
  }else {
    return cljs.core.list.call(null)
  }
};
jQuery.prototype.cljs$core$ISeqable$ = true;
jQuery.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  if(cljs.core.truth_(this$.get(0))) {
    return this$
  }else {
    return null
  }
};
jQuery.prototype.call = function() {
  var G__7864 = null;
  var G__7864__2 = function(_, k) {
    return cljs.core._lookup.call(null, this, k)
  };
  var G__7864__3 = function(_, k, not_found) {
    return cljs.core._lookup.call(null, this, k, not_found)
  };
  G__7864 = function(_, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7864__2.call(this, _, k);
      case 3:
        return G__7864__3.call(this, _, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7864
}();
jayq.core.anim = function anim(elem, props, dur) {
  return elem.animate(jayq.util.clj__GT_js.call(null, props), dur)
};
jayq.core.text = function text($elem, txt) {
  return $elem.text(txt)
};
jayq.core.css = function css($elem, opts) {
  if(cljs.core.keyword_QMARK_.call(null, opts)) {
    return $elem.css(cljs.core.name.call(null, opts))
  }else {
    return $elem.css(jayq.util.clj__GT_js.call(null, opts))
  }
};
jayq.core.attr = function() {
  var attr__delegate = function($elem, a, p__7865) {
    var vec__7866__7867 = p__7865;
    var v__7868 = cljs.core.nth.call(null, vec__7866__7867, 0, null);
    var a__7869 = cljs.core.name.call(null, a);
    if(cljs.core.not.call(null, v__7868)) {
      return $elem.attr(a__7869)
    }else {
      return $elem.attr(a__7869, v__7868)
    }
  };
  var attr = function($elem, a, var_args) {
    var p__7865 = null;
    if(goog.isDef(var_args)) {
      p__7865 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return attr__delegate.call(this, $elem, a, p__7865)
  };
  attr.cljs$lang$maxFixedArity = 2;
  attr.cljs$lang$applyTo = function(arglist__7870) {
    var $elem = cljs.core.first(arglist__7870);
    var a = cljs.core.first(cljs.core.next(arglist__7870));
    var p__7865 = cljs.core.rest(cljs.core.next(arglist__7870));
    return attr__delegate($elem, a, p__7865)
  };
  attr.cljs$lang$arity$variadic = attr__delegate;
  return attr
}();
jayq.core.data = function() {
  var data__delegate = function($elem, k, p__7871) {
    var vec__7872__7873 = p__7871;
    var v__7874 = cljs.core.nth.call(null, vec__7872__7873, 0, null);
    var k__7875 = cljs.core.name.call(null, k);
    if(cljs.core.not.call(null, v__7874)) {
      return $elem.data(k__7875)
    }else {
      return $elem.data(k__7875, v__7874)
    }
  };
  var data = function($elem, k, var_args) {
    var p__7871 = null;
    if(goog.isDef(var_args)) {
      p__7871 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return data__delegate.call(this, $elem, k, p__7871)
  };
  data.cljs$lang$maxFixedArity = 2;
  data.cljs$lang$applyTo = function(arglist__7876) {
    var $elem = cljs.core.first(arglist__7876);
    var k = cljs.core.first(cljs.core.next(arglist__7876));
    var p__7871 = cljs.core.rest(cljs.core.next(arglist__7876));
    return data__delegate($elem, k, p__7871)
  };
  data.cljs$lang$arity$variadic = data__delegate;
  return data
}();
jayq.core.position = function position($elem) {
  return cljs.core.js__GT_clj.call(null, $elem.position(), "\ufdd0'keywordize-keys", true)
};
jayq.core.add_class = function add_class($elem, cl) {
  var cl__7877 = cljs.core.name.call(null, cl);
  return $elem.addClass(cl__7877)
};
jayq.core.remove_class = function remove_class($elem, cl) {
  var cl__7878 = cljs.core.name.call(null, cl);
  return $elem.removeClass(cl__7878)
};
jayq.core.append = function append($elem, content) {
  return $elem.append(content)
};
jayq.core.prepend = function prepend($elem, content) {
  return $elem.prepend(content)
};
jayq.core.remove = function remove($elem) {
  return $elem.remove()
};
jayq.core.hide = function() {
  var hide__delegate = function($elem, p__7879) {
    var vec__7880__7881 = p__7879;
    var speed__7882 = cljs.core.nth.call(null, vec__7880__7881, 0, null);
    var on_finish__7883 = cljs.core.nth.call(null, vec__7880__7881, 1, null);
    return $elem.hide(speed__7882, on_finish__7883)
  };
  var hide = function($elem, var_args) {
    var p__7879 = null;
    if(goog.isDef(var_args)) {
      p__7879 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return hide__delegate.call(this, $elem, p__7879)
  };
  hide.cljs$lang$maxFixedArity = 1;
  hide.cljs$lang$applyTo = function(arglist__7884) {
    var $elem = cljs.core.first(arglist__7884);
    var p__7879 = cljs.core.rest(arglist__7884);
    return hide__delegate($elem, p__7879)
  };
  hide.cljs$lang$arity$variadic = hide__delegate;
  return hide
}();
jayq.core.show = function() {
  var show__delegate = function($elem, p__7885) {
    var vec__7886__7887 = p__7885;
    var speed__7888 = cljs.core.nth.call(null, vec__7886__7887, 0, null);
    var on_finish__7889 = cljs.core.nth.call(null, vec__7886__7887, 1, null);
    return $elem.show(speed__7888, on_finish__7889)
  };
  var show = function($elem, var_args) {
    var p__7885 = null;
    if(goog.isDef(var_args)) {
      p__7885 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return show__delegate.call(this, $elem, p__7885)
  };
  show.cljs$lang$maxFixedArity = 1;
  show.cljs$lang$applyTo = function(arglist__7890) {
    var $elem = cljs.core.first(arglist__7890);
    var p__7885 = cljs.core.rest(arglist__7890);
    return show__delegate($elem, p__7885)
  };
  show.cljs$lang$arity$variadic = show__delegate;
  return show
}();
jayq.core.toggle = function() {
  var toggle__delegate = function($elem, p__7891) {
    var vec__7892__7893 = p__7891;
    var speed__7894 = cljs.core.nth.call(null, vec__7892__7893, 0, null);
    var on_finish__7895 = cljs.core.nth.call(null, vec__7892__7893, 1, null);
    return $elem.toggle(speed__7894, on_finish__7895)
  };
  var toggle = function($elem, var_args) {
    var p__7891 = null;
    if(goog.isDef(var_args)) {
      p__7891 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return toggle__delegate.call(this, $elem, p__7891)
  };
  toggle.cljs$lang$maxFixedArity = 1;
  toggle.cljs$lang$applyTo = function(arglist__7896) {
    var $elem = cljs.core.first(arglist__7896);
    var p__7891 = cljs.core.rest(arglist__7896);
    return toggle__delegate($elem, p__7891)
  };
  toggle.cljs$lang$arity$variadic = toggle__delegate;
  return toggle
}();
jayq.core.fade_out = function() {
  var fade_out__delegate = function($elem, p__7897) {
    var vec__7898__7899 = p__7897;
    var speed__7900 = cljs.core.nth.call(null, vec__7898__7899, 0, null);
    var on_finish__7901 = cljs.core.nth.call(null, vec__7898__7899, 1, null);
    return $elem.fadeOut(speed__7900, on_finish__7901)
  };
  var fade_out = function($elem, var_args) {
    var p__7897 = null;
    if(goog.isDef(var_args)) {
      p__7897 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_out__delegate.call(this, $elem, p__7897)
  };
  fade_out.cljs$lang$maxFixedArity = 1;
  fade_out.cljs$lang$applyTo = function(arglist__7902) {
    var $elem = cljs.core.first(arglist__7902);
    var p__7897 = cljs.core.rest(arglist__7902);
    return fade_out__delegate($elem, p__7897)
  };
  fade_out.cljs$lang$arity$variadic = fade_out__delegate;
  return fade_out
}();
jayq.core.fade_in = function() {
  var fade_in__delegate = function($elem, p__7903) {
    var vec__7904__7905 = p__7903;
    var speed__7906 = cljs.core.nth.call(null, vec__7904__7905, 0, null);
    var on_finish__7907 = cljs.core.nth.call(null, vec__7904__7905, 1, null);
    return $elem.fadeIn(speed__7906, on_finish__7907)
  };
  var fade_in = function($elem, var_args) {
    var p__7903 = null;
    if(goog.isDef(var_args)) {
      p__7903 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return fade_in__delegate.call(this, $elem, p__7903)
  };
  fade_in.cljs$lang$maxFixedArity = 1;
  fade_in.cljs$lang$applyTo = function(arglist__7908) {
    var $elem = cljs.core.first(arglist__7908);
    var p__7903 = cljs.core.rest(arglist__7908);
    return fade_in__delegate($elem, p__7903)
  };
  fade_in.cljs$lang$arity$variadic = fade_in__delegate;
  return fade_in
}();
jayq.core.slide_up = function() {
  var slide_up__delegate = function($elem, p__7909) {
    var vec__7910__7911 = p__7909;
    var speed__7912 = cljs.core.nth.call(null, vec__7910__7911, 0, null);
    var on_finish__7913 = cljs.core.nth.call(null, vec__7910__7911, 1, null);
    return $elem.slideUp(speed__7912, on_finish__7913)
  };
  var slide_up = function($elem, var_args) {
    var p__7909 = null;
    if(goog.isDef(var_args)) {
      p__7909 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_up__delegate.call(this, $elem, p__7909)
  };
  slide_up.cljs$lang$maxFixedArity = 1;
  slide_up.cljs$lang$applyTo = function(arglist__7914) {
    var $elem = cljs.core.first(arglist__7914);
    var p__7909 = cljs.core.rest(arglist__7914);
    return slide_up__delegate($elem, p__7909)
  };
  slide_up.cljs$lang$arity$variadic = slide_up__delegate;
  return slide_up
}();
jayq.core.slide_down = function() {
  var slide_down__delegate = function($elem, p__7915) {
    var vec__7916__7917 = p__7915;
    var speed__7918 = cljs.core.nth.call(null, vec__7916__7917, 0, null);
    var on_finish__7919 = cljs.core.nth.call(null, vec__7916__7917, 1, null);
    return $elem.slideDown(speed__7918, on_finish__7919)
  };
  var slide_down = function($elem, var_args) {
    var p__7915 = null;
    if(goog.isDef(var_args)) {
      p__7915 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return slide_down__delegate.call(this, $elem, p__7915)
  };
  slide_down.cljs$lang$maxFixedArity = 1;
  slide_down.cljs$lang$applyTo = function(arglist__7920) {
    var $elem = cljs.core.first(arglist__7920);
    var p__7915 = cljs.core.rest(arglist__7920);
    return slide_down__delegate($elem, p__7915)
  };
  slide_down.cljs$lang$arity$variadic = slide_down__delegate;
  return slide_down
}();
jayq.core.parent = function parent($elem) {
  return $elem.parent()
};
jayq.core.find = function find($elem, selector) {
  return $elem.find(cljs.core.name.call(null, selector))
};
jayq.core.clone = function clone($elem) {
  return $elem.clone()
};
jayq.core.inner = function inner($elem, v) {
  return $elem.html(v)
};
jayq.core.empty = function empty($elem) {
  return $elem.empty()
};
jayq.core.val = function() {
  var val__delegate = function($elem, p__7921) {
    var vec__7922__7923 = p__7921;
    var v__7924 = cljs.core.nth.call(null, vec__7922__7923, 0, null);
    if(cljs.core.truth_(v__7924)) {
      return $elem.val(v__7924)
    }else {
      return $elem.val()
    }
  };
  var val = function($elem, var_args) {
    var p__7921 = null;
    if(goog.isDef(var_args)) {
      p__7921 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return val__delegate.call(this, $elem, p__7921)
  };
  val.cljs$lang$maxFixedArity = 1;
  val.cljs$lang$applyTo = function(arglist__7925) {
    var $elem = cljs.core.first(arglist__7925);
    var p__7921 = cljs.core.rest(arglist__7925);
    return val__delegate($elem, p__7921)
  };
  val.cljs$lang$arity$variadic = val__delegate;
  return val
}();
jayq.core.queue = function queue($elem, callback) {
  return $elem.queue(callback)
};
jayq.core.dequeue = function dequeue(elem) {
  return jayq.core.$.call(null, elem).dequeue()
};
jayq.core.document_ready = function document_ready(func) {
  return jayq.core.$.call(null, document).ready(func)
};
jayq.core.xhr = function xhr(p__7926, content, callback) {
  var vec__7927__7928 = p__7926;
  var method__7929 = cljs.core.nth.call(null, vec__7927__7928, 0, null);
  var uri__7930 = cljs.core.nth.call(null, vec__7927__7928, 1, null);
  var params__7931 = jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'data", "\ufdd0'success"], {"\ufdd0'type":clojure.string.upper_case.call(null, cljs.core.name.call(null, method__7929)), "\ufdd0'data":jayq.util.clj__GT_js.call(null, content), "\ufdd0'success":callback}));
  return jQuery.ajax(uri__7930, params__7931)
};
jayq.core.bind = function bind($elem, ev, func) {
  return $elem.bind(cljs.core.name.call(null, ev), func)
};
jayq.core.trigger = function trigger($elem, ev) {
  return $elem.trigger(cljs.core.name.call(null, ev))
};
jayq.core.delegate = function delegate($elem, sel, ev, func) {
  return $elem.delegate(jayq.core.__GT_selector.call(null, sel), cljs.core.name.call(null, ev), func)
};
jayq.core.__GT_event = function __GT_event(e) {
  if(cljs.core.keyword_QMARK_.call(null, e)) {
    return cljs.core.name.call(null, e)
  }else {
    if(cljs.core.map_QMARK_.call(null, e)) {
      return jayq.util.clj__GT_js.call(null, e)
    }else {
      if(cljs.core.coll_QMARK_.call(null, e)) {
        return clojure.string.join.call(null, " ", cljs.core.map.call(null, cljs.core.name, e))
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Unknown event type: "), cljs.core.str(e)].join(""));
        }else {
          return null
        }
      }
    }
  }
};
jayq.core.on = function() {
  var on__delegate = function($elem, events, p__7932) {
    var vec__7933__7934 = p__7932;
    var sel__7935 = cljs.core.nth.call(null, vec__7933__7934, 0, null);
    var data__7936 = cljs.core.nth.call(null, vec__7933__7934, 1, null);
    var handler__7937 = cljs.core.nth.call(null, vec__7933__7934, 2, null);
    return $elem.on(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__7935), data__7936, handler__7937)
  };
  var on = function($elem, events, var_args) {
    var p__7932 = null;
    if(goog.isDef(var_args)) {
      p__7932 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return on__delegate.call(this, $elem, events, p__7932)
  };
  on.cljs$lang$maxFixedArity = 2;
  on.cljs$lang$applyTo = function(arglist__7938) {
    var $elem = cljs.core.first(arglist__7938);
    var events = cljs.core.first(cljs.core.next(arglist__7938));
    var p__7932 = cljs.core.rest(cljs.core.next(arglist__7938));
    return on__delegate($elem, events, p__7932)
  };
  on.cljs$lang$arity$variadic = on__delegate;
  return on
}();
jayq.core.one = function() {
  var one__delegate = function($elem, events, p__7939) {
    var vec__7940__7941 = p__7939;
    var sel__7942 = cljs.core.nth.call(null, vec__7940__7941, 0, null);
    var data__7943 = cljs.core.nth.call(null, vec__7940__7941, 1, null);
    var handler__7944 = cljs.core.nth.call(null, vec__7940__7941, 2, null);
    return $elem.one(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__7942), data__7943, handler__7944)
  };
  var one = function($elem, events, var_args) {
    var p__7939 = null;
    if(goog.isDef(var_args)) {
      p__7939 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return one__delegate.call(this, $elem, events, p__7939)
  };
  one.cljs$lang$maxFixedArity = 2;
  one.cljs$lang$applyTo = function(arglist__7945) {
    var $elem = cljs.core.first(arglist__7945);
    var events = cljs.core.first(cljs.core.next(arglist__7945));
    var p__7939 = cljs.core.rest(cljs.core.next(arglist__7945));
    return one__delegate($elem, events, p__7939)
  };
  one.cljs$lang$arity$variadic = one__delegate;
  return one
}();
jayq.core.off = function() {
  var off__delegate = function($elem, events, p__7946) {
    var vec__7947__7948 = p__7946;
    var sel__7949 = cljs.core.nth.call(null, vec__7947__7948, 0, null);
    var handler__7950 = cljs.core.nth.call(null, vec__7947__7948, 1, null);
    return $elem.off(jayq.core.__GT_event.call(null, events), jayq.core.__GT_selector.call(null, sel__7949), handler__7950)
  };
  var off = function($elem, events, var_args) {
    var p__7946 = null;
    if(goog.isDef(var_args)) {
      p__7946 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return off__delegate.call(this, $elem, events, p__7946)
  };
  off.cljs$lang$maxFixedArity = 2;
  off.cljs$lang$applyTo = function(arglist__7951) {
    var $elem = cljs.core.first(arglist__7951);
    var events = cljs.core.first(cljs.core.next(arglist__7951));
    var p__7946 = cljs.core.rest(cljs.core.next(arglist__7951));
    return off__delegate($elem, events, p__7946)
  };
  off.cljs$lang$arity$variadic = off__delegate;
  return off
}();
jayq.core.prevent = function prevent(e) {
  return e.preventDefault()
};
goog.provide("tracker.bootstrap");
goog.require("cljs.core");
goog.require("jayq.util");
tracker.bootstrap.popover = function popover(e, arg) {
  return e.popover(jayq.util.clj__GT_js.call(null, arg))
};
tracker.bootstrap.modal = function modal(e, arg) {
  return e.modal(jayq.util.clj__GT_js.call(null, arg))
};
goog.provide("tracker.diet.food");
goog.require("cljs.core");
goog.require("tracker.util");
goog.require("clojure.string");
goog.require("crate.core");
goog.require("fetch.remotes");
goog.require("domina");
goog.require("jayq.core");
goog.require("tracker.bootstrap");
tracker.diet.food.loadFoods = function loadFoods(fg) {
  return fetch.remotes.remote_callback.call(null, "food-group", cljs.core.PersistentVector.fromArray([clojure.string.split.call(null, fg, /\//)]), function(grid) {
    return jayq.core.inner.call(null, jayq.core.$.call(null, "#food-grid"), grid)
  })
};
goog.exportSymbol("tracker.diet.food.loadFoods", tracker.diet.food.loadFoods);
tracker.diet.food.current_input = cljs.core.atom.call(null, 0);
tracker.diet.food.showModal = function showModal(n) {
  cljs.core.reset_BANG_.call(null, tracker.diet.food.current_input, n);
  return tracker.bootstrap.modal.call(null, jayq.core.$.call(null, "#add-food-modal"), "show")
};
goog.exportSymbol("tracker.diet.food.showModal", tracker.diet.food.showModal);
tracker.diet.food.selectFood = function selectFood(food) {
  tracker.bootstrap.modal.call(null, domina.by_id.call(null, "add-food-modal"), "hide");
  tracker.diet.food.loadFoods.call(null, "food");
  return jayq.core.attr.call(null, jayq.core.$.call(null, [cljs.core.str("#fti"), cljs.core.str(cljs.core.deref.call(null, tracker.diet.food.current_input))].join("")), "value", [cljs.core.str("1 cup  "), cljs.core.str(food)].join(""))
};
goog.exportSymbol("tracker.diet.food.selectFood", tracker.diet.food.selectFood);
goog.provide("tracker.diet.meal");
goog.require("cljs.core");
goog.require("tracker.util");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("crate.core");
goog.require("fetch.remotes");
goog.require("jayq.core");
goog.require("tracker.bootstrap");
tracker.diet.meal.addFoodInput = function addFoodInput(n) {
  fetch.remotes.remote_callback.call(null, "food-text-input", cljs.core.PersistentVector.fromArray([n]), function(fti) {
    return jayq.core.append.call(null, jayq.core.$.call(null, ".controls:last"), [cljs.core.str("<br />"), cljs.core.str(fti)].join(""))
  });
  return jayq.core.attr.call(null, jayq.core.$.call(null, "#add-food-btn"), "onclick", goog.string.format.call(null, "tracker.diet.meal.addFoodInput(%d)", n + 1))
};
goog.exportSymbol("tracker.diet.meal.addFoodInput", tracker.diet.meal.addFoodInput);
tracker.diet.meal.i_to_q = cljs.core.PersistentArrayMap.fromArrays([0, 1, 2, 3], ["1 tbsp", "1/4 cup", "1/2 cup", "1 cup"]);
tracker.diet.meal.q_to_i = tracker.util.reverse_map.call(null, tracker.diet.meal.i_to_q);
tracker.diet.meal.popped = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject([], {}));
tracker.diet.meal.destroy_popover_BANG_ = function destroy_popover_BANG_(n) {
  cljs.core.swap_BANG_.call(null, tracker.diet.meal.popped, cljs.core.assoc, n, false);
  return tracker.bootstrap.popover.call(null, jayq.core.$.call(null, [cljs.core.str("#pop-btn"), cljs.core.str(n)].join("")), "destroy")
};
var group__16268__auto____21371 = cljs.core.swap_BANG_.call(null, crate.core.group_id, cljs.core.inc);
tracker.diet.meal.slider = function slider() {
  var elem__16269__auto____21372 = crate.core.html.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'div", cljs.core.ObjMap.fromObject(["\ufdd0'class"], {"\ufdd0'class":"quantity-slider"}), cljs.core.PersistentVector.fromArray(["\ufdd0'p", cljs.core.ObjMap.fromObject(["\ufdd0'id"], {"\ufdd0'id":"quantity-readout"}), ""]), cljs.core.PersistentVector.fromArray(["\ufdd0'div", cljs.core.ObjMap.fromObject(["\ufdd0'id"], {"\ufdd0'id":"slider-vertical"})])]));
  elem__16269__auto____21372.setAttribute("crateGroup", group__16268__auto____21371);
  return elem__16269__auto____21372
};
tracker.diet.meal.slider.prototype._crateGroup = group__16268__auto____21371;
tracker.diet.meal.fti = function fti(n) {
  return jayq.core.$.call(null, [cljs.core.str("#fti"), cljs.core.str(n)].join(""))
};
tracker.diet.meal.fti_quantity_food = function fti_quantity_food(n) {
  return clojure.string.split.call(null, jayq.core.val.call(null, tracker.diet.meal.fti.call(null, n)), /  /)
};
tracker.diet.meal.fti_quantity = function fti_quantity(n) {
  return cljs.core.first.call(null, tracker.diet.meal.fti_quantity_food.call(null, n))
};
tracker.diet.meal.fti_food = function fti_food(n) {
  return cljs.core.second.call(null, tracker.diet.meal.fti_quantity_food.call(null, n))
};
tracker.diet.meal.update_fti_quantity_BANG_ = function update_fti_quantity_BANG_(n, q) {
  return jayq.core.val.call(null, tracker.diet.meal.fti.call(null, n), [cljs.core.str(q), cljs.core.str("  "), cljs.core.str(tracker.diet.meal.fti_food.call(null, n))].join(""))
};
tracker.diet.meal.create_popover_BANG_ = function create_popover_BANG_(n) {
  cljs.core.swap_BANG_.call(null, tracker.diet.meal.popped, cljs.core.assoc, n, true);
  var pb__21373 = jayq.core.$.call(null, [cljs.core.str("#pop-btn"), cljs.core.str(n)].join(""));
  var quantity__21374 = tracker.diet.meal.fti_quantity.call(null, n);
  tracker.bootstrap.popover.call(null, pb__21373, cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'content"], {"\ufdd0'title":"Quantity", "\ufdd0'content":tracker.diet.meal.slider.call(null)}));
  tracker.bootstrap.popover.call(null, pb__21373, "show");
  jayq.core.inner.call(null, jayq.core.$.call(null, "#quantity-readout"), quantity__21374);
  return jayq.core.$.call(null, "#slider-vertical").slider({"orientation":"vertical", "min":0, "max":3, "value":tracker.diet.meal.q_to_i.call(null, quantity__21374), "slide":function(event, ui) {
    return jayq.core.inner.call(null, jayq.core.$.call(null, "#quantity-readout"), tracker.diet.meal.i_to_q.call(null, ui.value))
  }, "change":function(event, ui) {
    tracker.diet.meal.update_fti_quantity_BANG_.call(null, n, tracker.diet.meal.i_to_q.call(null, ui.value));
    return tracker.diet.meal.destroy_popover_BANG_.call(null, n)
  }})
};
tracker.diet.meal.quantityPopover = function quantityPopover(n) {
  if(cljs.core.truth_(cljs.core.deref.call(null, tracker.diet.meal.popped).call(null, n))) {
    return tracker.diet.meal.destroy_popover_BANG_.call(null, n)
  }else {
    return tracker.diet.meal.create_popover_BANG_.call(null, n)
  }
};
goog.exportSymbol("tracker.diet.meal.quantityPopover", tracker.diet.meal.quantityPopover);
goog.provide("tracker.diet.today");
goog.require("cljs.core");
goog.require("tracker.util");
tracker.diet.today.new_text_meal = function new_text_meal() {
  return window["location"] = "/diet/new-text-meal"
};
tracker.diet.today.onkeyup = function onkeyup(e) {
  if("c" === tracker.util.log.call(null, tracker.util.event_char.call(null, e))) {
    return tracker.diet.today.new_text_meal.call(null)
  }else {
    if("\ufdd0'else") {
      return null
    }else {
      return null
    }
  }
};
tracker.diet.today.initToday = function initToday() {
  return window["onkeyup"] = tracker.diet.today.onkeyup
};
goog.exportSymbol("tracker.diet.today.initToday", tracker.diet.today.initToday);
goog.provide("tracker.exercise.core");
goog.require("cljs.core");
goog.require("jayq.util");
goog.require("domina");
goog.require("tracker.util");
tracker.exercise.core.chart_data = function chart_data() {
  var G__4708__4709 = new google["visualization"]["DataTable"];
  G__4708__4709.addColumn("date", "Date");
  G__4708__4709.addColumn("number", "Squat");
  G__4708__4709.addColumn("number", "Bench");
  G__4708__4709.addColumn("number", "Deadlift");
  G__4708__4709.addColumn("number", "Press");
  G__4708__4709.addColumn("number", "Clean");
  G__4708__4709.addColumn("number", "Chins");
  G__4708__4709.addColumn("number", "Pull-Ups");
  G__4708__4709.addRows(jayq.util.clj__GT_js.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new Date(2012, 9, 10), 65, 65, 45, null, null, null, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 12), 70, null, null, 45, 45, 70, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 14), 95, 80, 65, null, null, null, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 16), 105, null, null, 55, 55, 70, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 
  9, 18), 110, 85, 75, null, null, null, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 20), 85, null, null, 60, 60, null, 70]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 22), 90, 90, 80, null, null, null, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 24), 95, null, null, 65, 65, null, 70]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 26), 100, 95, 105, null, null, null, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 28), 
  105, null, null, 70, 55, null, 40]), cljs.core.PersistentVector.fromArray([new Date(2012, 9, 30), 105, 95, 110, null, null, null, null]), cljs.core.PersistentVector.fromArray([new Date(2012, 10, 1), 85, null, null, 75, 65, null, 50]), cljs.core.PersistentVector.fromArray([new Date(2012, 10, 3), 95, 100, 110, null, null, null, null])])));
  return G__4708__4709
};
tracker.exercise.core.chart_options = function chart_options() {
  return jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'title", "\ufdd0'width", "\ufdd0'height", "\ufdd0'displayZoomButtons"], {"\ufdd0'title":"Weight-Lifting PRs", "\ufdd0'width":600, "\ufdd0'height":450, "\ufdd0'displayZoomButtons":false}))
};
tracker.exercise.core.chart = function chart() {
  return new google["visualization"]["AnnotatedTimeLine"](domina.by_id.call(null, "pr-chart"))
};
tracker.exercise.core.draw_chart = function draw_chart() {
  return tracker.exercise.core.chart.call(null).draw(tracker.exercise.core.chart_data.call(null), tracker.exercise.core.chart_options.call(null))
};
tracker.exercise.core.loadChart = function loadChart() {
  google.load("visualization", "1", jayq.util.clj__GT_js.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'packages"], {"\ufdd0'packages":cljs.core.PersistentVector.fromArray(["corechart", "annotatedtimeline"])})));
  return google.setOnLoadCallback(tracker.exercise.core.draw_chart)
};
goog.exportSymbol("tracker.exercise.core.loadChart", tracker.exercise.core.loadChart);
